<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="gstreamer-libs-GstHarness">
<refmeta>
<refentrytitle role="top_of_page" id="gstreamer-libs-GstHarness.top_of_page">GstHarness</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER-LIBS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstHarness</refname>
<refpurpose>A test-harness for writing GStreamer unit tests</refpurpose>
</refnamediv>

<refsect1 id="gstreamer-libs-GstHarness.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new-full">gst_harness_new_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new-with-element">gst_harness_new_with_element</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new-with-padnames">gst_harness_new_with_padnames</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new-with-templates">gst_harness_new_with_templates</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new">gst_harness_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-new-parse">gst_harness_new_parse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-teardown">gst_harness_teardown</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-element-src-pad">gst_harness_add_element_src_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-element-sink-pad">gst_harness_add_element_sink_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-src-caps">gst_harness_set_src_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-sink-caps">gst_harness_set_sink_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-caps">gst_harness_set_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-src-caps-str">gst_harness_set_src_caps_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-sink-caps-str">gst_harness_set_sink_caps_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-caps-str">gst_harness_set_caps_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-use-systemclock">gst_harness_use_systemclock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-use-testclock">gst_harness_use_testclock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTestClock"><returnvalue>GstTestClock</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-get-testclock">gst_harness_get_testclock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-time">gst_harness_set_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-wait-for-clock-id-waits">gst_harness_wait_for_clock_id_waits</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-crank-single-clock-wait">gst_harness_crank_single_clock_wait</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-crank-multiple-clock-waits">gst_harness_crank_multiple_clock_waits</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-play">gst_harness_play</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-blocking-push-mode">gst_harness_set_blocking_push_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-forwarding">gst_harness_set_forwarding</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-create-buffer">gst_harness_create_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-push">gst_harness_push</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-pull">gst_harness_pull</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-try-pull">gst_harness_try_pull</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-push-and-pull">gst_harness_push_and_pull</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-buffers-received">gst_harness_buffers_received</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-buffers-in-queue">gst_harness_buffers_in_queue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-drop-buffers">gst_harness_set_drop_buffers</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-dump-to-file">gst_harness_dump_to_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-get-last-pushed-timestamp">gst_harness_get_last_pushed_timestamp</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-push-event">gst_harness_push_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-pull-event">gst_harness_pull_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-try-pull-event">gst_harness_try_pull_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-events-received">gst_harness_events_received</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-events-in-queue">gst_harness_events_in_queue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-push-upstream-event">gst_harness_push_upstream_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-pull-upstream-event">gst_harness_pull_upstream_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-try-pull-upstream-event">gst_harness_try_pull_upstream_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-upstream-events-received">gst_harness_upstream_events_received</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-upstream-events-in-queue">gst_harness_upstream_events_in_queue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-query-latency">gst_harness_query_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-upstream-latency">gst_harness_set_upstream_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set-propose-allocator">gst_harness_set_propose_allocator</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-get-allocator">gst_harness_get_allocator</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-src">gst_harness_add_src</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-src-harness">gst_harness_add_src_harness</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-src-parse">gst_harness_add_src_parse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-push-from-src">gst_harness_push_from_src</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-src-crank-and-push-many">gst_harness_src_crank_and_push_many</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-src-push-event">gst_harness_src_push_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-sink">gst_harness_add_sink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-sink-harness">gst_harness_add_sink_harness</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-sink-parse">gst_harness_add_sink_parse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-push-to-sink">gst_harness_push_to_sink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-sink-push-many">gst_harness_sink_push_many</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstElement"><returnvalue>GstElement</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-find-element">gst_harness_find_element</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-set">gst_harness_set</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-get">gst_harness_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-add-probe">gst_harness_add_probe</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-harness-stress-thread-stop">gst_harness_stress_thread_stop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-custom-start">gst_harness_stress_custom_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-statechange-start">gst_harness_stress_statechange_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-statechange-start-full">gst_harness_stress_statechange_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-push-buffer-start">gst_harness_stress_push_buffer_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-push-buffer-start-full">gst_harness_stress_push_buffer_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstHarnessPrepareBufferFunc">*GstHarnessPrepareBufferFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-push-buffer-with-cb-start">gst_harness_stress_push_buffer_with_cb_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-push-buffer-with-cb-start-full">gst_harness_stress_push_buffer_with_cb_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-push-event-start">gst_harness_stress_push_event_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-push-event-start-full">gst_harness_stress_push_event_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-send-upstream-event-start">gst_harness_stress_send_upstream_event_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-push-upstream-event-start-full">gst_harness_stress_push_upstream_event_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-property-start">gst_harness_stress_property_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-property-start-full">gst_harness_stress_property_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-harness-stress-requestpad-start">gst_harness_stress_requestpad_start</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-harness-stress-requestpad-start-full">gst_harness_stress_requestpad_start_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gstreamer-libs-GstHarness.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstHarness">GstHarness</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GstHarnessThread">GstHarnessThread</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="gstreamer-libs-GstHarness.includes"><title>Includes</title><synopsis>#include &lt;gst/check/check.h&gt;
</synopsis></refsect1>

<refsect1 id="gstreamer-libs-GstHarness.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstHarness"><type>GstHarness</type></link> is ment to make writing unit test for GStreamer much easier.
It can be though of as a way of treating a <link linkend="GstElement"><type>GstElement</type></link> as a black box,
deterministially feeding it data, and controlling what data it outputs.</para>
<para>The basic structure of <link linkend="GstHarness"><type>GstHarness</type></link> is two "floating" <link linkend="GstPads"><type>GstPads</type></link>, that connects
to the harnessed <link linkend="GstElement"><type>GstElement</type></link> src and sink <link linkend="GstPads"><type>GstPads</type></link> like so:</para>
<programlisting>
          __________________________
 _____   |  _____            _____  |   _____
|     |  | |     |          |     | |  |     |
| src |--+-| sink|  Element | src |-+--| sink|
|_____|  | |_____|          |_____| |  |_____|
         |__________________________|

</programlisting>
<para>With this, you can now simulate any environment the <link linkend="GstElement"><type>GstElement</type></link> might find
itself in. By specifying the <link linkend="GstCaps"><type>GstCaps</type></link> of the harness <link linkend="GstPads"><type>GstPads</type></link>, using
functions like gst_harness_set_src_caps or gst_harness_set_sink_caps_str,
you can test how the <link linkend="GstElement"><type>GstElement</type></link> interacts with different capssets.</para>
<para>Your harnessed <link linkend="GstElement"><type>GstElement</type></link> can of course also be a bin, and using
gst_harness_new_parse supporting standard gst-launch syntax, you can
easily test a whole pipeline instead of just one element.</para>
<para>You can then go on to push <link linkend="GstBuffers"><type>GstBuffers</type></link> and <link linkend="GstEvents"><type>GstEvents</type></link> on to the srcpad,
using functions like gst_harness_push and gst_harness_push_event, and
then pull them out to examine them with gst_harness_pull and
gst_harness_pull_event.</para>
<example>
<title>A simple buffer-in buffer-out example</title>
  <programlisting language="c">
  #include &lt;gst/gst.h&gt;
  #include &lt;gst/check/gstharness.h&gt;
  GstHarness *h;
  GstBuffer *in_buf;
  GstBuffer *out_buf;

  // attach the harness to the src and sink pad of GstQueue
  h = gst_harness_new ("queue");

  // we must specify a caps before pushing buffers
  gst_harness_set_src_caps_str (h, "mycaps");

  // create a buffer of size 42
  in_buf = gst_harness_create_buffer (h, 42);

  // push the buffer into the queue
  gst_harness_push (h, in_buf);

  // pull the buffer from the queue
  out_buf = gst_harness_pull (h);

  // validate the buffer in is the same as buffer out
  fail_unless (in_buf == out_buf);

  // cleanup
  gst_buffer_unref (out_buf);
  gst_harness_teardown (h);

  </programlisting>
</example>
<para>Another main feature of the <link linkend="GstHarness"><type>GstHarness</type></link> is its integration with the
<link linkend="GstTestClock"><type>GstTestClock</type></link>. Operating the <link linkend="GstTestClock"><type>GstTestClock</type></link> can be very challenging, but
<link linkend="GstHarness"><type>GstHarness</type></link> simplifies some of the most desired actions a lot, like wanting
to manually advance the clock while at the same time releasing a <link linkend="GstClockID"><type>GstClockID</type></link>
that is waiting, with functions like gst_harness_crank_single_clock_wait.</para>
<para><link linkend="GstHarness"><type>GstHarness</type></link> also supports sub-harnesses, as a way of generating and
validating data. A sub-harness is another <link linkend="GstHarness"><type>GstHarness</type></link> that is managed by
the "parent" harness, and can either be created by using the standard
gst_harness_new type functions directly on the (GstHarness *)->src_harness,
or using the much more convenient gst_harness_add_src or
gst_harness_add_sink_parse. If you have a decoder-element you want to test,
(like vp8dec) it can be very useful to add a src-harness with both a
src-element (videotestsrc) and an encoder (vp8enc) to feed the decoder data
with different configurations, by simply doing:</para>
<example>
<programlisting language="c">
  GstHarness * h = gst_harness_new (h, "vp8dec");
  gst_harness_add_src_parse (h, "videotestsrc is-live=1 ! vp8enc", TRUE);
</programlisting>
</example>
<para>and then feeding it data with:</para>
<example>
<programlisting language="c">
gst_harness_push_from_src (h);
</programlisting>
</example>

</refsect1>
<refsect1 id="gstreamer-libs-GstHarness.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-harness-new-full" role="function" condition="since:1.6">
<title>gst_harness_new_full&#160;()</title>
<indexterm zone="gst-harness-new-full" role="1.6"><primary>gst_harness_new_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new_full (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                      <parameter><link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> *hsrc</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_sinkpad_name</parameter>,
                      <parameter><link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> *hsink</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_srcpad_name</parameter>);</programlisting>
<para>Creates a new harness.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to attach the harness to (transfer none)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>hsrc</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> describing the harness srcpad.
<link linkend="NULL:CAPS"><literal>NULL</literal></link> will not create a harness srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_sinkpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
sinkpad that is then linked to the harness srcpad. Can be a static or request
or a sometimes pad that has been added. <link linkend="NULL:CAPS"><literal>NULL</literal></link> will not get/request a sinkpad
from the element. (Like if the element is a src.). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>hsink</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> describing the harness sinkpad.
<link linkend="NULL:CAPS"><literal>NULL</literal></link> will not create a harness sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_srcpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
srcpad that is then linked to the harness sinkpad, similar to the
<parameter>element_sinkpad_name</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-new-with-element" role="function" condition="since:1.6">
<title>gst_harness_new_with_element&#160;()</title>
<indexterm zone="gst-harness-new-with-element" role="1.6"><primary>gst_harness_new_with_element</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new_with_element (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_sinkpad_name</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_srcpad_name</parameter>);</programlisting>
<para>Creates a new harness. Works in the same way as gst_harness_new_full, only
that generic padtemplates are used for the harness src and sinkpads, which
will be sufficient in most usecases.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new-with-element.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to attach the harness to (transfer none)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_sinkpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
sinkpad that is then linked to the harness srcpad. <link linkend="NULL:CAPS"><literal>NULL</literal></link> does not attach a
sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_srcpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
srcpad that is then linked to the harness sinkpad. <link linkend="NULL:CAPS"><literal>NULL</literal></link> does not attach a
srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new-with-element.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-new-with-padnames" role="function" condition="since:1.6">
<title>gst_harness_new_with_padnames&#160;()</title>
<indexterm zone="gst-harness-new-with-padnames" role="1.6"><primary>gst_harness_new_with_padnames</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new_with_padnames (<parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_sinkpad_name</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_srcpad_name</parameter>);</programlisting>
<para>Creates a new harness. Works in the same way as gst_harness_new_with_element,
except you specify the factoryname of the <link linkend="GstElement"><type>GstElement</type></link></para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new-with-padnames.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> describing the <link linkend="GstElement"><type>GstElement</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_sinkpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
sinkpad that is then linked to the harness srcpad. <link linkend="NULL:CAPS"><literal>NULL</literal></link> does not attach a
sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_srcpad_name</para></entry>
<entry role="parameter_description"><para> a <link linkend="gchar"><type>gchar</type></link> with the name of the element
srcpad that is then linked to the harness sinkpad. <link linkend="NULL:CAPS"><literal>NULL</literal></link> does not attach a
srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new-with-padnames.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-new-with-templates" role="function" condition="since:1.6">
<title>gst_harness_new_with_templates&#160;()</title>
<indexterm zone="gst-harness-new-with-templates" role="1.6"><primary>gst_harness_new_with_templates</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new_with_templates (<parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>,
                                <parameter><link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> *hsrc</parameter>,
                                <parameter><link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> *hsink</parameter>);</programlisting>
<para>Creates a new harness, like gst_harness_new_full, except it
assumes the <link linkend="GstElement"><type>GstElement</type></link> sinkpad is named "sink" and srcpad is named "src"</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new-with-templates.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> describing the <link linkend="GstElement"><type>GstElement</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>hsrc</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> describing the harness srcpad.
<link linkend="NULL:CAPS"><literal>NULL</literal></link> will not create a harness srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>hsink</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> describing the harness sinkpad.
<link linkend="NULL:CAPS"><literal>NULL</literal></link> will not create a harness sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new-with-templates.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-new" role="function" condition="since:1.6">
<title>gst_harness_new&#160;()</title>
<indexterm zone="gst-harness-new" role="1.6"><primary>gst_harness_new</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new (<parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>);</programlisting>
<para>Creates a new harness. Works like gst_harness_new_with_padnames, except it
assumes the <link linkend="GstElement"><type>GstElement</type></link> sinkpad is named "sink" and srcpad is named "src"</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> describing the <link linkend="GstElement"><type>GstElement</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-new-parse" role="function" condition="since:1.6">
<title>gst_harness_new_parse&#160;()</title>
<indexterm zone="gst-harness-new-parse" role="1.6"><primary>gst_harness_new_parse</primary></indexterm>
<programlisting language="C"><link linkend="GstHarness"><returnvalue>GstHarness</returnvalue></link>&#160;*
gst_harness_new_parse (<parameter>const <link linkend="gchar"><type>gchar</type></link> *launchline</parameter>);</programlisting>
<para>Creates a new harness, parsing the <parameter>launchline</parameter>
 and putting that in a <link linkend="GstBin"><type>GstBin</type></link>,
and then attches the harness to the bin.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-new-parse.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>launchline</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> describing a gst-launch type line</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-new-parse.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarness"><type>GstHarness</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the harness could
not be created. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-teardown" role="function" condition="since:1.6">
<title>gst_harness_teardown&#160;()</title>
<indexterm zone="gst-harness-teardown" role="1.6"><primary>gst_harness_teardown</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_teardown (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Tears down a <parameter>GstHarness</parameter>
, freeing all resources allocated using it.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-teardown.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-element-src-pad" role="function" condition="since:1.6">
<title>gst_harness_add_element_src_pad&#160;()</title>
<indexterm zone="gst-harness-add-element-src-pad" role="1.6"><primary>gst_harness_add_element_src_pad</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_element_src_pad (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                 <parameter><link linkend="GstPad"><type>GstPad</type></link> *srcpad</parameter>);</programlisting>
<para>Links the specifed <link linkend="GstPad"><type>GstPad</type></link> the <parameter>GstHarness</parameter>
 sinkpad. This can be useful if
perhaps the srcpad did not exist at the time of creating the harness,
like a demuxer that provides a sometimes-pad after receiving data.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-element-src-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>srcpad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to link to the harness sinkpad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-element-sink-pad" role="function" condition="since:1.6">
<title>gst_harness_add_element_sink_pad&#160;()</title>
<indexterm zone="gst-harness-add-element-sink-pad" role="1.6"><primary>gst_harness_add_element_sink_pad</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_element_sink_pad (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                  <parameter><link linkend="GstPad"><type>GstPad</type></link> *sinkpad</parameter>);</programlisting>
<para>Links the specifed <link linkend="GstPad"><type>GstPad</type></link> the <parameter>GstHarness</parameter>
 srcpad.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-element-sink-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sinkpad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to link to the harness srcpad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-src-caps" role="function" condition="since:1.6">
<title>gst_harness_set_src_caps&#160;()</title>
<indexterm zone="gst-harness-set-src-caps" role="1.6"><primary>gst_harness_set_src_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_src_caps (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                          <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 srcpad caps. This must be done before any buffers
can legally be pushed from the harness to the element.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-src-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-sink-caps" role="function" condition="since:1.6">
<title>gst_harness_set_sink_caps&#160;()</title>
<indexterm zone="gst-harness-set-sink-caps" role="1.6"><primary>gst_harness_set_sink_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_sink_caps (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                           <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 sinkpad caps.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-sink-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-caps" role="function" condition="since:1.6">
<title>gst_harness_set_caps&#160;()</title>
<indexterm zone="gst-harness-set-caps" role="1.6"><primary>gst_harness_set_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_caps (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                      <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *in</parameter>,
                      <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *out</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 srcpad and sinkpad caps.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>in</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness srcpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>out</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness sinkpad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-src-caps-str" role="function" condition="since:1.6">
<title>gst_harness_set_src_caps_str&#160;()</title>
<indexterm zone="gst-harness-set-src-caps-str" role="1.6"><primary>gst_harness_set_src_caps_str</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_src_caps_str (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 srcpad caps using a string. This must be done before
any buffers can legally be pushed from the harness to the element.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-src-caps-str.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>a <parameter>gchar</parameter>
describing a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness srcpad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-sink-caps-str" role="function" condition="since:1.6">
<title>gst_harness_set_sink_caps_str&#160;()</title>
<indexterm zone="gst-harness-set-sink-caps-str" role="1.6"><primary>gst_harness_set_sink_caps_str</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_sink_caps_str (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 sinkpad caps using a string.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-sink-caps-str.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>a <parameter>gchar</parameter>
describing a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness sinkpad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-caps-str" role="function" condition="since:1.6">
<title>gst_harness_set_caps_str&#160;()</title>
<indexterm zone="gst-harness-set-caps-str" role="1.6"><primary>gst_harness_set_caps_str</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_caps_str (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *in</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *out</parameter>);</programlisting>
<para>Sets the <parameter>GstHarness</parameter>
 srcpad and sinkpad caps using strings.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-caps-str.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>in</para></entry>
<entry role="parameter_description"><para>a <parameter>gchar</parameter>
describing a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness srcpad</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out</para></entry>
<entry role="parameter_description"><para>a <parameter>gchar</parameter>
describing a <link linkend="GstCaps"><type>GstCaps</type></link> to set on the harness sinkpad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-use-systemclock" role="function" condition="since:1.6">
<title>gst_harness_use_systemclock&#160;()</title>
<indexterm zone="gst-harness-use-systemclock" role="1.6"><primary>gst_harness_use_systemclock</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_use_systemclock (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Sets the system <link linkend="GstClock"><type>GstClock</type></link> on the <parameter>GstHarness</parameter>
 <link linkend="GstElement"><type>GstElement</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-use-systemclock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-use-testclock" role="function" condition="since:1.6">
<title>gst_harness_use_testclock&#160;()</title>
<indexterm zone="gst-harness-use-testclock" role="1.6"><primary>gst_harness_use_testclock</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_use_testclock (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Sets the <link linkend="GstTestClock"><type>GstTestClock</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> <link linkend="GstElement"><type>GstElement</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-use-testclock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-get-testclock" role="function" condition="since:1.6">
<title>gst_harness_get_testclock&#160;()</title>
<indexterm zone="gst-harness-get-testclock" role="1.6"><primary>gst_harness_get_testclock</primary></indexterm>
<programlisting language="C"><link linkend="GstTestClock"><returnvalue>GstTestClock</returnvalue></link>&#160;*
gst_harness_get_testclock (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Get the <link linkend="GstTestClock"><type>GstTestClock</type></link>. Useful if specific operations on the testclock is
needed.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-get-testclock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-get-testclock.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstTestClock"><type>GstTestClock</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the testclock is not
present. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-time" role="function" condition="since:1.6">
<title>gst_harness_set_time&#160;()</title>
<indexterm zone="gst-harness-set-time" role="1.6"><primary>gst_harness_set_time</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_set_time (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                      <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> time</parameter>);</programlisting>
<para>Advance the <link linkend="GstTestClock"><type>GstTestClock</type></link> to a specific time.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>time</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstClockTime"><type>GstClockTime</type></link> to advance the clock to</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-set-time.returns" role="returns">
<title>Returns</title>
<para> a <parameter>gboolean</parameter>
<link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the time could be set. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-wait-for-clock-id-waits" role="function" condition="since:1.6">
<title>gst_harness_wait_for_clock_id_waits&#160;()</title>
<indexterm zone="gst-harness-wait-for-clock-id-waits" role="1.6"><primary>gst_harness_wait_for_clock_id_waits</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_wait_for_clock_id_waits (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> waits</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> timeout</parameter>);</programlisting>
<para>Waits for <parameter>timeout</parameter>
 seconds until <parameter>waits</parameter>
 number of <link linkend="GstClockID"><type>GstClockID</type></link> waits is
registered with the <link linkend="GstTestClock"><type>GstTestClock</type></link>. Useful for writing deterministic tests,
where you want to make sure that an expected number of waits have been
reached.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-wait-for-clock-id-waits.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>waits</para></entry>
<entry role="parameter_description"><para>a <link linkend="guint"><type>guint</type></link> describing the numbers of <link linkend="GstClockID"><type>GstClockID</type></link> registered with
the <link linkend="GstTestClock"><type>GstTestClock</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout</para></entry>
<entry role="parameter_description"><para>a <link linkend="guint"><type>guint</type></link> describing how many seconds to wait for <parameter>waits</parameter>
to be true</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-wait-for-clock-id-waits.returns" role="returns">
<title>Returns</title>
<para> a <parameter>gboolean</parameter>
<link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the waits have been registered, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.
(Could be that it timed out waiting or that more waits then waits was found)</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-crank-single-clock-wait" role="function" condition="since:1.6">
<title>gst_harness_crank_single_clock_wait&#160;()</title>
<indexterm zone="gst-harness-crank-single-clock-wait" role="1.6"><primary>gst_harness_crank_single_clock_wait</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_crank_single_clock_wait (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>A "crank" consists of three steps:
1: Wait for a <link linkend="GstClockID"><type>GstClockID</type></link> to be registered with the <link linkend="GstTestClock"><type>GstTestClock</type></link>.
2: Advance the <link linkend="GstTestClock"><type>GstTestClock</type></link> to the time the <link linkend="GstClockID"><type>GstClockID</type></link> is waiting for.
3: Release the <link linkend="GstClockID"><type>GstClockID</type></link> wait.
Together, this provides an easy way to not have to think about the details
around clocks and time, but still being able to write deterministic tests
that are dependant on this. A "crank" can be though of as the notion of
manually driving the clock forward to its next logical step.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-crank-single-clock-wait.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-crank-single-clock-wait.returns" role="returns">
<title>Returns</title>
<para> a <parameter>gboolean</parameter>
<link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the "crank" was successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-crank-multiple-clock-waits" role="function" condition="since:1.6">
<title>gst_harness_crank_multiple_clock_waits&#160;()</title>
<indexterm zone="gst-harness-crank-multiple-clock-waits" role="1.6"><primary>gst_harness_crank_multiple_clock_waits</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_crank_multiple_clock_waits
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> waits</parameter>);</programlisting>
<para>Similar to gst_harness_crank_single_clock_wait, this is the function to use
if your harnessed element(s) are using more then one gst_clock_id_wait.
Failing to do so can (and will) make it racy which <link linkend="GstClockID"><type>GstClockID</type></link> you actually
are releasing, where as this function will process all the waits at the
same time, ensuring that one thread can't register another wait before
both are released.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-crank-multiple-clock-waits.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>waits</para></entry>
<entry role="parameter_description"><para>a <link linkend="guint"><type>guint</type></link> describing the number of <link linkend="GstClockIDs"><type>GstClockIDs</type></link> to crank</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-crank-multiple-clock-waits.returns" role="returns">
<title>Returns</title>
<para> a <parameter>gboolean</parameter>
<link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the "crank" was successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-play" role="function" condition="since:1.6">
<title>gst_harness_play&#160;()</title>
<indexterm zone="gst-harness-play" role="1.6"><primary>gst_harness_play</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_play (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>This will set the harnessed <link linkend="GstElement"><type>GstElement</type></link> to <link linkend="GST-STATE-PLAYING:CAPS"><literal>GST_STATE_PLAYING</literal></link>.
<link linkend="GstElements"><type>GstElements</type></link> without a sink-<link linkend="GstPad"><type>GstPad</type></link> and with the <link linkend="GST-ELEMENT-FLAG-SOURCE:CAPS"><literal>GST_ELEMENT_FLAG_SOURCE</literal></link>
flag set is concidered a src <link linkend="GstElement"><type>GstElement</type></link>
Non-src <link linkend="GstElements"><type>GstElements</type></link> (like sinks and filters) are automatically set to
playing by the <link linkend="GstHarness"><type>GstHarness</type></link>, but src <link linkend="GstElements"><type>GstElements</type></link> are not to avoid them
starting to produce buffers.
Hence, for src <link linkend="GstElement"><type>GstElement</type></link> you will need to call gst_harness_play explicitly.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-play.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-blocking-push-mode" role="function" condition="since:1.6">
<title>gst_harness_set_blocking_push_mode&#160;()</title>
<indexterm zone="gst-harness-set-blocking-push-mode" role="1.6"><primary>gst_harness_set_blocking_push_mode</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_blocking_push_mode (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Setting this will make the harness block in the chain-function, and
then release when gst_harness_pull or gst_harness_try_pull is called.
Can be useful when wanting to control a src-element that is not implementing
gst_clock_id_wait so it can't be controlled by the <link linkend="GstTestClock"><type>GstTestClock</type></link>, since
it otherwise would produce buffers as fast as possible.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-blocking-push-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-forwarding" role="function" condition="since:1.6">
<title>gst_harness_set_forwarding&#160;()</title>
<indexterm zone="gst-harness-set-forwarding" role="1.6"><primary>gst_harness_set_forwarding</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_forwarding (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> forwarding</parameter>);</programlisting>
<para>As a convenience, a src-harness will forward <link linkend="GST-EVENT-STREAM-START:CAPS"><literal>GST_EVENT_STREAM_START</literal></link>,
<link linkend="GST-EVENT-CAPS"><literal>GST_EVENT_CAPS</literal></link> and <link linkend="GST-EVENT-SEGMENT:CAPS"><literal>GST_EVENT_SEGMENT</literal></link> to the main-harness if forwarding
is enabled, and forward any sticky-events from the main-harness to
the sink-harness. It will also forward the <link linkend="GST-QUERY-ALLOCATION:CAPS"><literal>GST_QUERY_ALLOCATION</literal></link>.</para>
<para>If forwarding is disabled, the user will have to either manually push
these events from the src-harness using gst_harness_src_push_event, or
create and push them manually. While this will allow full control and
inspection of these events, for the most cases having forwarding enabled
will be sufficient when writing a test where the src-harness' main function
is providing data for the main-harness.</para>
<para>Forwarding is enabled by default.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-forwarding.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>forwarding</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link> to enable/disable forwarding</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-create-buffer" role="function" condition="since:1.6">
<title>gst_harness_create_buffer&#160;()</title>
<indexterm zone="gst-harness-create-buffer" role="1.6"><primary>gst_harness_create_buffer</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_harness_create_buffer (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                           <parameter><link linkend="gsize"><type>gsize</type></link> size</parameter>);</programlisting>
<para>Allocates a buffer using a <link linkend="GstBufferPool"><type>GstBufferPool</type></link> if present, or else using the
configured <link linkend="GstAllocator"><type>GstAllocator</type></link> and <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-create-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> specifying the size of the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-create-buffer.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstBuffer"><type>GstBuffer</type></link> of size <parameter>size</parameter>
</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push" role="function" condition="since:1.6">
<title>gst_harness_push&#160;()</title>
<indexterm zone="gst-harness-push" role="1.6"><primary>gst_harness_push</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_harness_push (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                  <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buffer</parameter>);</programlisting>
<para>Pushes a <link linkend="GstBuffer"><type>GstBuffer</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad. The standard way of
interacting with an harnessed element.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBuffer"><type>GstBuffer</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> with the result from the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-pull" role="function" condition="since:1.6">
<title>gst_harness_pull&#160;()</title>
<indexterm zone="gst-harness-pull" role="1.6"><primary>gst_harness_pull</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_harness_pull (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls a <link linkend="GstBuffer"><type>GstBuffer</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad. The pull
will timeout in 60 seconds. This is the standard way of getting a buffer
from a harnessed <link linkend="GstElement"><type>GstElement</type></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-pull.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-pull.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstBuffer"><type>GstBuffer</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if timed out.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-try-pull" role="function" condition="since:1.6">
<title>gst_harness_try_pull&#160;()</title>
<indexterm zone="gst-harness-try-pull" role="1.6"><primary>gst_harness_try_pull</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_harness_try_pull (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls a <link linkend="GstBuffer"><type>GstBuffer</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad. Unlike
gst_harness_pull this will not wait for any buffers if not any are present,
and return <link linkend="NULL:CAPS"><literal>NULL</literal></link> straight away.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-try-pull.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-try-pull.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstBuffer"><type>GstBuffer</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no buffers are present in the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push-and-pull" role="function" condition="since:1.6">
<title>gst_harness_push_and_pull&#160;()</title>
<indexterm zone="gst-harness-push-and-pull" role="1.6"><primary>gst_harness_push_and_pull</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_harness_push_and_pull (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                           <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buffer</parameter>);</programlisting>
<para>Basically a gst_harness_push and a gst_harness_pull in one line. Reflects
the fact that you often want to do exactly this in your test: Push one buffer
in, and inspect the outcome.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push-and-pull.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBuffer"><type>GstBuffer</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push-and-pull.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstBuffer"><type>GstBuffer</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if timed out.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-buffers-received" role="function" condition="since:1.6">
<title>gst_harness_buffers_received&#160;()</title>
<indexterm zone="gst-harness-buffers-received" role="1.6"><primary>gst_harness_buffers_received</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_buffers_received (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The total number of <link linkend="GstBuffers"><type>GstBuffers</type></link> that has arrived on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad.
This number includes buffers that have been dropped as well as buffers
that have already been pulled out.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-buffers-received.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-buffers-received.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of buffers received</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-buffers-in-queue" role="function" condition="since:1.6">
<title>gst_harness_buffers_in_queue&#160;()</title>
<indexterm zone="gst-harness-buffers-in-queue" role="1.6"><primary>gst_harness_buffers_in_queue</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_buffers_in_queue (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The number of <link linkend="GstBuffers"><type>GstBuffers</type></link> currently in the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-buffers-in-queue.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-buffers-in-queue.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of buffers in the queue</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-drop-buffers" role="function" condition="since:1.6">
<title>gst_harness_set_drop_buffers&#160;()</title>
<indexterm zone="gst-harness-set-drop-buffers" role="1.6"><primary>gst_harness_set_drop_buffers</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_drop_buffers (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> drop_buffers</parameter>);</programlisting>
<para>When set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, instead of placing the buffers arriving from the harnessed
<link linkend="GstElement"><type>GstElement</type></link> inside the sinkpads <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link>, they are instead unreffed.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-drop-buffers.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>drop_buffers</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link> specifying to drop outgoing buffers or not</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-dump-to-file" role="function" condition="since:1.6">
<title>gst_harness_dump_to_file&#160;()</title>
<indexterm zone="gst-harness-dump-to-file" role="1.6"><primary>gst_harness_dump_to_file</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_dump_to_file (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *filename</parameter>);</programlisting>
<para>Allows you to dump the <link linkend="GstBuffers"><type>GstBuffers</type></link> the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link>
to a file.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-dump-to-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with a the name of a file</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-get-last-pushed-timestamp" role="function" condition="since:1.6">
<title>gst_harness_get_last_pushed_timestamp&#160;()</title>
<indexterm zone="gst-harness-get-last-pushed-timestamp" role="1.6"><primary>gst_harness_get_last_pushed_timestamp</primary></indexterm>
<programlisting language="C"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
gst_harness_get_last_pushed_timestamp (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Get the timestamp of the last <link linkend="GstBuffer"><type>GstBuffer</type></link> pushed on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad,
typically with gst_harness_push or gst_harness_push_from_src.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-get-last-pushed-timestamp.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-get-last-pushed-timestamp.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstClockTime"><type>GstClockTime</type></link> with the timestamp or <link linkend="GST-CLOCK-TIME-NONE:CAPS"><literal>GST_CLOCK_TIME_NONE</literal></link> if no
<link linkend="GstBuffer"><type>GstBuffer</type></link> has been pushed on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push-event" role="function" condition="since:1.6">
<title>gst_harness_push_event&#160;()</title>
<indexterm zone="gst-harness-push-event" role="1.6"><primary>gst_harness_push_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_push_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                        <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Pushes an <link linkend="GstEvent"><type>GstEvent</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstEvent"><type>GstEvent</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> with the result from the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-pull-event" role="function" condition="since:1.6">
<title>gst_harness_pull_event&#160;()</title>
<indexterm zone="gst-harness-pull-event" role="1.6"><primary>gst_harness_pull_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_harness_pull_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls an <link linkend="GstEvent"><type>GstEvent</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad.
Timeouts after 60 seconds similar to gst_harness_pull.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-pull-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-pull-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstEvent"><type>GstEvent</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if timed out.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-try-pull-event" role="function" condition="since:1.6">
<title>gst_harness_try_pull_event&#160;()</title>
<indexterm zone="gst-harness-try-pull-event" role="1.6"><primary>gst_harness_try_pull_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_harness_try_pull_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls an <link linkend="GstEvent"><type>GstEvent</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad.
See gst_harness_try_pull for details.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-try-pull-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-try-pull-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstEvent"><type>GstEvent</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no buffers are present in the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-events-received" role="function" condition="since:1.6">
<title>gst_harness_events_received&#160;()</title>
<indexterm zone="gst-harness-events-received" role="1.6"><primary>gst_harness_events_received</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_events_received (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The total number of <link linkend="GstEvents"><type>GstEvents</type></link> that has arrived on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad
This number includes events handled by the harness as well as events
that have already been pulled out.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-events-received.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-events-received.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of events received</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-events-in-queue" role="function" condition="since:1.6">
<title>gst_harness_events_in_queue&#160;()</title>
<indexterm zone="gst-harness-events-in-queue" role="1.6"><primary>gst_harness_events_in_queue</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_events_in_queue (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The number of <link linkend="GstEvents"><type>GstEvents</type></link> currently in the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-events-in-queue.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-events-in-queue.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of events in the queue</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push-upstream-event" role="function" condition="since:1.6">
<title>gst_harness_push_upstream_event&#160;()</title>
<indexterm zone="gst-harness-push-upstream-event" role="1.6"><primary>gst_harness_push_upstream_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_push_upstream_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                 <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Pushes an <link linkend="GstEvent"><type>GstEvent</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> sinkpad.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push-upstream-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstEvent"><type>GstEvent</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push-upstream-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> with the result from the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-pull-upstream-event" role="function" condition="since:1.6">
<title>gst_harness_pull_upstream_event&#160;()</title>
<indexterm zone="gst-harness-pull-upstream-event" role="1.6"><primary>gst_harness_pull_upstream_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_harness_pull_upstream_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls an <link linkend="GstEvent"><type>GstEvent</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad.
Timeouts after 60 seconds similar to gst_harness_pull.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-pull-upstream-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-pull-upstream-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstEvent"><type>GstEvent</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if timed out.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-try-pull-upstream-event" role="function" condition="since:1.6">
<title>gst_harness_try_pull_upstream_event&#160;()</title>
<indexterm zone="gst-harness-try-pull-upstream-event" role="1.6"><primary>gst_harness_try_pull_upstream_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_harness_try_pull_upstream_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Pulls an <link linkend="GstEvent"><type>GstEvent</type></link> from the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link> on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad.
See gst_harness_try_pull for details.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-try-pull-upstream-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-try-pull-upstream-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstEvent"><type>GstEvent</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no buffers are present in the <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-upstream-events-received" role="function" condition="since:1.6">
<title>gst_harness_upstream_events_received&#160;()</title>
<indexterm zone="gst-harness-upstream-events-received" role="1.6"><primary>gst_harness_upstream_events_received</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_upstream_events_received (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The total number of <link linkend="GstEvents"><type>GstEvents</type></link> that has arrived on the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad
This number includes events handled by the harness as well as events
that have already been pulled out.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-upstream-events-received.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-upstream-events-received.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of events received</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-upstream-events-in-queue" role="function" condition="since:1.6">
<title>gst_harness_upstream_events_in_queue&#160;()</title>
<indexterm zone="gst-harness-upstream-events-in-queue" role="1.6"><primary>gst_harness_upstream_events_in_queue</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_upstream_events_in_queue (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>The number of <link linkend="GstEvents"><type>GstEvents</type></link> currently in the <link linkend="GstHarness"><type>GstHarness</type></link> srcpad <link linkend="GAsyncQueue"><type>GAsyncQueue</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-upstream-events-in-queue.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-upstream-events-in-queue.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="guint"><type>guint</type></link> number of events in the queue</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-query-latency" role="function" condition="since:1.6">
<title>gst_harness_query_latency&#160;()</title>
<indexterm zone="gst-harness-query-latency" role="1.6"><primary>gst_harness_query_latency</primary></indexterm>
<programlisting language="C"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
gst_harness_query_latency (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Get the min latency reported by any harnessed <link linkend="GstElement"><type>GstElement</type></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-query-latency.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-query-latency.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstClockTime"><type>GstClockTime</type></link> with min latency</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-upstream-latency" role="function" condition="since:1.6">
<title>gst_harness_set_upstream_latency&#160;()</title>
<indexterm zone="gst-harness-set-upstream-latency" role="1.6"><primary>gst_harness_set_upstream_latency</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_upstream_latency (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                  <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> latency</parameter>);</programlisting>
<para>Sets the min latency reported by <link linkend="GstHarness"><type>GstHarness</type></link> when receiving a latency-query</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-upstream-latency.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>latency</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstClockTime"><type>GstClockTime</type></link> specifying the latency</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-set-upstream-latency.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstClockTime"><type>GstClockTime</type></link> with min latency</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set-propose-allocator" role="function" condition="since:1.6">
<title>gst_harness_set_propose_allocator&#160;()</title>
<indexterm zone="gst-harness-set-propose-allocator" role="1.6"><primary>gst_harness_set_propose_allocator</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set_propose_allocator (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                   <parameter><link linkend="GstAllocator"><type>GstAllocator</type></link> *allocator</parameter>,
                                   <parameter>const <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> *params</parameter>);</programlisting>
<para>Sets the <parameter>allocator</parameter>
 and <parameter>params</parameter>
 to propose when receiving an allocation
query.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set-propose-allocator.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>allocator</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstAllocator"><type>GstAllocator</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-get-allocator" role="function" condition="since:1.6">
<title>gst_harness_get_allocator&#160;()</title>
<indexterm zone="gst-harness-get-allocator" role="1.6"><primary>gst_harness_get_allocator</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_get_allocator (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                           <parameter><link linkend="GstAllocator"><type>GstAllocator</type></link> **allocator</parameter>,
                           <parameter><link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> *params</parameter>);</programlisting>
<para>Gets the <parameter>allocator</parameter>
 and its <parameter>params</parameter>
 that has been decided to use after an
allocation query.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-get-allocator.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>allocator</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstAllocator"><type>GstAllocator</type></link> used. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> of
<parameter>allocator</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-src" role="function" condition="since:1.6">
<title>gst_harness_add_src&#160;()</title>
<indexterm zone="gst-harness-add-src" role="1.6"><primary>gst_harness_add_src</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_src (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                     <parameter>const <link linkend="gchar"><type>gchar</type></link> *src_element_name</parameter>,
                     <parameter><link linkend="gboolean"><type>gboolean</type></link> has_clock_wait</parameter>);</programlisting>
<para>Similar to gst_harness_add_src_harness, this is a convenience to
directly create a src-harness using the <parameter>src_element_name</parameter>
 name specified.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-src.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the name of a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>has_clock_wait</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link> specifying if the <link linkend="GstElement"><type>GstElement</type></link> uses
gst_clock_wait_id internally.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-src-harness" role="function" condition="since:1.6">
<title>gst_harness_add_src_harness&#160;()</title>
<indexterm zone="gst-harness-add-src-harness" role="1.6"><primary>gst_harness_add_src_harness</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_src_harness (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                             <parameter><link linkend="GstHarness"><type>GstHarness</type></link> *src_harness</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> has_clock_wait</parameter>);</programlisting>
<para>A src-harness is a great way of providing the <link linkend="GstHarness"><type>GstHarness</type></link> with data.
By adding a src-type <link linkend="GstElement"><type>GstElement</type></link>, it is then easy to use functions like
gst_harness_push_from_src or gst_harness_src_crank_and_push_many
to provide your harnessed element with input. The <parameter>has_clock_wait</parameter>
 variable
is a greate way to control you src-element with, in that you can have it
produce a buffer for you by simply cranking the clock, and not have it
spin out of control producing buffers as fast as possible.</para>
<para>If a src-harness already exists it will be replaced.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-src-harness.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_harness</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstHarness"><type>GstHarness</type></link> to be added as a src-harness. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>has_clock_wait</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link> specifying if the <link linkend="GstElement"><type>GstElement</type></link> uses
gst_clock_wait_id internally.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-src-parse" role="function" condition="since:1.6">
<title>gst_harness_add_src_parse&#160;()</title>
<indexterm zone="gst-harness-add-src-parse" role="1.6"><primary>gst_harness_add_src_parse</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_src_parse (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *launchline</parameter>,
                           <parameter><link linkend="gboolean"><type>gboolean</type></link> has_clock_wait</parameter>);</programlisting>
<para>Similar to gst_harness_add_src, this allows you to specify a launch-line,
which can be useful for both having more then one <link linkend="GstElement"><type>GstElement</type></link> acting as your
src (Like a src producing raw buffers, and then an encoder, providing encoded
data), but also by allowing you to set properties like "is-live" directly on
the elements.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-src-parse.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>launchline</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> describing a gst-launch type line</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>has_clock_wait</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link> specifying if the <link linkend="GstElement"><type>GstElement</type></link> uses
gst_clock_wait_id internally.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push-from-src" role="function" condition="since:1.6">
<title>gst_harness_push_from_src&#160;()</title>
<indexterm zone="gst-harness-push-from-src" role="1.6"><primary>gst_harness_push_from_src</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_harness_push_from_src (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Transfer data from the src-<link linkend="GstHarness"><type>GstHarness</type></link> to the main-<link linkend="GstHarness"><type>GstHarness</type></link>. It consists
of 4 steps:
1: Make sure the src is started. (see: gst_harness_play)
2: Crank the clock (see: gst_harness_crank_single_clock_wait)
3: Pull a <link linkend="GstBuffer"><type>GstBuffer</type></link> from the src-<link linkend="GstHarness"><type>GstHarness</type></link> (see: gst_harness_pull)
4: Push the same <link linkend="GstBuffer"><type>GstBuffer</type></link> into the main-<link linkend="GstHarness"><type>GstHarness</type></link> (see: gst_harness_push)</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push-from-src.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push-from-src.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> with the result of the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-src-crank-and-push-many" role="function" condition="since:1.6">
<title>gst_harness_src_crank_and_push_many&#160;()</title>
<indexterm zone="gst-harness-src-crank-and-push-many" role="1.6"><primary>gst_harness_src_crank_and_push_many</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_harness_src_crank_and_push_many (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                     <parameter><link linkend="gint"><type>gint</type></link> cranks</parameter>,
                                     <parameter><link linkend="gint"><type>gint</type></link> pushes</parameter>);</programlisting>
<para>Transfer data from the src-<link linkend="GstHarness"><type>GstHarness</type></link> to the main-<link linkend="GstHarness"><type>GstHarness</type></link>. Similar to
gst_harness_push_from_src, this variant allows you to specify how many cranks
and how many pushes to perform. This can be useful for both moving a lot
of data at the same time, as well as cases when one crank does not equal one
buffer to push and v.v.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-src-crank-and-push-many.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cranks</para></entry>
<entry role="parameter_description"><para>a <link linkend="gint"><type>gint</type></link> with the number of calls to gst_harness_crank_single_clock_wait</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pushes</para></entry>
<entry role="parameter_description"><para>a <link linkend="gint"><type>gint</type></link> with the number of calls to gst_harness_push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-src-crank-and-push-many.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> with the result of the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-src-push-event" role="function" condition="since:1.6">
<title>gst_harness_src_push_event&#160;()</title>
<indexterm zone="gst-harness-src-push-event" role="1.6"><primary>gst_harness_src_push_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_harness_src_push_event (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Similar to what gst_harness_src_push does with <link linkend="GstBuffers"><type>GstBuffers</type></link>, this transfers
a <link linkend="GstEvent"><type>GstEvent</type></link> from the src-<link linkend="GstHarness"><type>GstHarness</type></link> to the main-<link linkend="GstHarness"><type>GstHarness</type></link>. Note that
some <link linkend="GstEvents"><type>GstEvents</type></link> are being transferred automagically. Look at sink_forward_pad
for details.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-src-push-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-src-push-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> with the result of the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-sink" role="function" condition="since:1.6">
<title>gst_harness_add_sink&#160;()</title>
<indexterm zone="gst-harness-add-sink" role="1.6"><primary>gst_harness_add_sink</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_sink (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *sink_element_name</parameter>);</programlisting>
<para>Similar to gst_harness_add_sink_harness, this is a convenience to
directly create a sink-harness using the <parameter>sink_element_name</parameter>
 name specified.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-sink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sink_element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the name of a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-sink-harness" role="function" condition="since:1.6">
<title>gst_harness_add_sink_harness&#160;()</title>
<indexterm zone="gst-harness-add-sink-harness" role="1.6"><primary>gst_harness_add_sink_harness</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_sink_harness (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                              <parameter><link linkend="GstHarness"><type>GstHarness</type></link> *sink_harness</parameter>);</programlisting>
<para>Similar to gst_harness_add_src, this allows you to send the data coming out
of your harnessed <link linkend="GstElement"><type>GstElement</type></link> to a sink-element, allowing to test different
responses the element output might create in sink elements. An example might
be an existing sink providing some analytical data on the input it receives that
can be useful to your testing. If the goal is to test a sink-element itself,
this is better acheived using gst_harness_new directly on the sink.</para>
<para>If a sink-harness already exists it will be replaced.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-sink-harness.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sink_harness</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstHarness"><type>GstHarness</type></link> to be added as a sink-harness. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-sink-parse" role="function" condition="since:1.6">
<title>gst_harness_add_sink_parse&#160;()</title>
<indexterm zone="gst-harness-add-sink-parse" role="1.6"><primary>gst_harness_add_sink_parse</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_sink_parse (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *launchline</parameter>);</programlisting>
<para>Similar to gst_harness_add_sink, this allows you to specify a launch-line
instead of just an element name. See gst_harness_add_src_parse for details.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-sink-parse.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>launchline</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the name of a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-push-to-sink" role="function" condition="since:1.6">
<title>gst_harness_push_to_sink&#160;()</title>
<indexterm zone="gst-harness-push-to-sink" role="1.6"><primary>gst_harness_push_to_sink</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_harness_push_to_sink (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>);</programlisting>
<para>Transfer one <link linkend="GstBuffer"><type>GstBuffer</type></link> from the main-<link linkend="GstHarness"><type>GstHarness</type></link> to the sink-<link linkend="GstHarness"><type>GstHarness</type></link>.
See gst_harness_push_from_src for details.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-push-to-sink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-push-to-sink.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> with the result of the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-sink-push-many" role="function" condition="since:1.6">
<title>gst_harness_sink_push_many&#160;()</title>
<indexterm zone="gst-harness-sink-push-many" role="1.6"><primary>gst_harness_sink_push_many</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_harness_sink_push_many (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                            <parameter><link linkend="gint"><type>gint</type></link> pushes</parameter>);</programlisting>
<para>Convenience that calls gst_harness_push_to_sink <parameter>pushes</parameter>
 number of times.
Will abort the pushing if any one push fails.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-sink-push-many.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pushes</para></entry>
<entry role="parameter_description"><para>a <link linkend="gint"><type>gint</type></link> with the number of calls to gst_harness_push_to_sink</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-sink-push-many.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> with the result of the push</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-find-element" role="function" condition="since:1.6">
<title>gst_harness_find_element&#160;()</title>
<indexterm zone="gst-harness-find-element" role="1.6"><primary>gst_harness_find_element</primary></indexterm>
<programlisting language="C"><link linkend="GstElement"><returnvalue>GstElement</returnvalue></link>&#160;*
gst_harness_find_element (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>);</programlisting>
<para>Most useful in conjunction with gst_harness_new_parse, this will scan the
<link linkend="GstElements"><type>GstElements</type></link> inside the <link linkend="GstHarness"><type>GstHarness</type></link>, and check if any of them matches
<parameter>element_name</parameter>
. Typical usecase being that you need to access one of the
harnessed elements for properties and/or signals.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-find-element.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with a <link linkend="GstElementFactory"><type>GstElementFactory</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-find-element.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstElement"><type>GstElement</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not found. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-set" role="function" condition="since:1.6">
<title>gst_harness_set&#160;()</title>
<indexterm zone="gst-harness-set" role="1.6"><primary>gst_harness_set</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_set (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>,
                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *first_property_name</parameter>,
                 <parameter>...</parameter>);</programlisting>
<para>A convenience function to allows you to call g_object_set on a <link linkend="GstElement"><type>GstElement</type></link>
that are residing inside the <link linkend="GstHarness"><type>GstHarness</type></link>, by using normal g_object_set
syntax.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-set.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with a <link linkend="GstElementFactory"><type>GstElementFactory</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>first_property_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the first property name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>value for the first property, followed optionally by more
name/value pairs, followed by <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-get" role="function" condition="since:1.6">
<title>gst_harness_get&#160;()</title>
<indexterm zone="gst-harness-get" role="1.6"><primary>gst_harness_get</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_get (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>,
                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *first_property_name</parameter>,
                 <parameter>...</parameter>);</programlisting>
<para>A convenience function to allows you to call g_object_get on a <link linkend="GstElement"><type>GstElement</type></link>
that are residing inside the <link linkend="GstHarness"><type>GstHarness</type></link>, by using normal g_object_get
syntax.</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-get.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with a <link linkend="GstElementFactory"><type>GstElementFactory</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>first_property_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the first property name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>return location for the first property, followed optionally by more
name/return location pairs, followed by <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-add-probe" role="function" condition="since:1.6">
<title>gst_harness_add_probe&#160;()</title>
<indexterm zone="gst-harness-add-probe" role="1.6"><primary>gst_harness_add_probe</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_harness_add_probe (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *element_name</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *pad_name</parameter>,
                       <parameter><link linkend="GstPadProbeType"><type>GstPadProbeType</type></link> mask</parameter>,
                       <parameter><link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link> callback</parameter>,
                       <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                       <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> destroy_data</parameter>);</programlisting>
<para>A convenience function to allows you to call gst_pad_add_probe on a
<link linkend="GstPad"><type>GstPad</type></link> of a <link linkend="GstElement"><type>GstElement</type></link> that are residing inside the <link linkend="GstHarness"><type>GstHarness</type></link>,
by using normal gst_pad_add_probe syntax</para>
<para>MT safe.</para>
<refsect3 id="gst-harness-add-probe.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>element_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with a <link linkend="GstElementFactory"><type>GstElementFactory</type></link> name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pad_name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> with the name of the pad to attach the probe to</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mask</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeType"><type>GstPadProbeType</type></link> (see gst_pad_add_probe)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link> (see gst_pad_add_probe)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>a <link linkend="gpointer"><type>gpointer</type></link> (see gst_pad_add_probe)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>destroy_data</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> (see gst_pad_add_probe)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-thread-stop" role="function" condition="since:1.6">
<title>gst_harness_stress_thread_stop&#160;()</title>
<indexterm zone="gst-harness-stress-thread-stop" role="1.6"><primary>gst_harness_stress_thread_stop</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_harness_stress_thread_stop (<parameter><link linkend="GstHarnessThread"><type>GstHarnessThread</type></link> *t</parameter>);</programlisting>
<para>Stop the running <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
<para>MT safe.</para>
<refsect3 id="gst-harness-stress-thread-stop.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-custom-start" role="function" condition="since:1.6">
<title>gst_harness_stress_custom_start&#160;()</title>
<indexterm zone="gst-harness-stress-custom-start" role="1.6"><primary>gst_harness_stress_custom_start</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_custom_start (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                 <parameter><link linkend="GFunc"><type>GFunc</type></link> init</parameter>,
                                 <parameter><link linkend="GFunc"><type>GFunc</type></link> callback</parameter>,
                                 <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>,
                                 <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Start a custom stress-thread that will call your <parameter>callback</parameter>
 for every
iteration allowing you to do something nasty.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-custom-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>init</para></entry>
<entry role="parameter_description"><para> a <link linkend="GFunc"><type>GFunc</type></link> that is called initially and only once. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFunc"><type>GFunc</type></link> that is called as often as possible</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>a <link linkend="gpointer"><type>gpointer</type></link> with custom data to pass to the <parameter>callback</parameter>
function</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each call to the <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-custom-start.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-statechange-start" role="macro">
<title>gst_harness_stress_statechange_start()</title>
<indexterm zone="gst-harness-stress-statechange-start"><primary>gst_harness_stress_statechange_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_statechange_start(h)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-statechange-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_statechange_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-statechange-start-full" role="1.6"><primary>gst_harness_stress_statechange_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_statechange_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Change the state of your harnessed <link linkend="GstElement"><type>GstElement</type></link> from NULL to PLAYING and
back again, only pausing for <parameter>sleep</parameter>
 microseconds every time.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-statechange-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each state-change</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-statechange-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-push-buffer-start" role="macro">
<title>gst_harness_stress_push_buffer_start()</title>
<indexterm zone="gst-harness-stress-push-buffer-start"><primary>gst_harness_stress_push_buffer_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_push_buffer_start(h, c, s, b)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-push-buffer-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_push_buffer_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-push-buffer-start-full" role="1.6"><primary>gst_harness_stress_push_buffer_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_push_buffer_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>,
                                <parameter>const <link linkend="GstSegment"><type>GstSegment</type></link> *segment</parameter>,
                                <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buf</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Push a <link linkend="GstBuffer"><type>GstBuffer</type></link> in intervals of <parameter>sleep</parameter>
 microseconds.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-push-buffer-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstCaps"><type>GstCaps</type></link> for the <link linkend="GstBuffer"><type>GstBuffer</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>segment</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstSegment"><type>GstSegment</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBuffer"><type>GstBuffer</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each call to gst_pad_push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-push-buffer-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="GstHarnessPrepareBufferFunc" role="function" condition="since:1.6">
<title>GstHarnessPrepareBufferFunc&#160;()</title>
<indexterm zone="GstHarnessPrepareBufferFunc" role="1.6"><primary>GstHarnessPrepareBufferFunc</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GstHarnessPrepareBufferFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<refsect3 id="GstHarnessPrepareBufferFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>user data</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-push-buffer-with-cb-start" role="macro">
<title>gst_harness_stress_push_buffer_with_cb_start()</title>
<indexterm zone="gst-harness-stress-push-buffer-with-cb-start"><primary>gst_harness_stress_push_buffer_with_cb_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_push_buffer_with_cb_start(h, c, s, f, d, n)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-push-buffer-with-cb-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_push_buffer_with_cb_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-push-buffer-with-cb-start-full" role="1.6"><primary>gst_harness_stress_push_buffer_with_cb_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_push_buffer_with_cb_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>,
                                <parameter>const <link linkend="GstSegment"><type>GstSegment</type></link> *segment</parameter>,
                                <parameter><link linkend="GstHarnessPrepareBufferFunc"><type>GstHarnessPrepareBufferFunc</type></link> func</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>,
                                <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Push a <link linkend="GstBuffer"><type>GstBuffer</type></link> in intervals of <parameter>sleep</parameter>
 microseconds.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-push-buffer-with-cb-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstCaps"><type>GstCaps</type></link> for the <link linkend="GstBuffer"><type>GstBuffer</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>segment</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstSegment"><type>GstSegment</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>func</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarnessPrepareBufferFunc"><type>GstHarnessPrepareBufferFunc</type></link> function called before every iteration
to prepare / create a <link linkend="GstBuffer"><type>GstBuffer</type></link> for pushing</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>a <link linkend="gpointer"><type>gpointer</type></link> with data to the <link linkend="GstHarnessPrepareBufferFunc"><type>GstHarnessPrepareBufferFunc</type></link> function</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> that is called for every push to allow cleaning
up the <link linkend="GstBuffer"><type>GstBuffer</type></link>. (like gst_buffer_unref)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each call to gst_pad_push</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-push-buffer-with-cb-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-push-event-start" role="macro">
<title>gst_harness_stress_push_event_start()</title>
<indexterm zone="gst-harness-stress-push-event-start"><primary>gst_harness_stress_push_event_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_push_event_start(h, e)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-push-event-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_push_event_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-push-event-start-full" role="1.6"><primary>gst_harness_stress_push_event_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_push_event_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Push the <parameter>event</parameter>
 onto the harnessed <link linkend="GstElement"><type>GstElement</type></link> sinkpad in intervals of
<parameter>sleep</parameter>
 microseconds</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-push-event-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstEvent"><type>GstEvent</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each gst_event_push with <parameter>event</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-push-event-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-send-upstream-event-start" role="macro">
<title>gst_harness_stress_send_upstream_event_start()</title>
<indexterm zone="gst-harness-stress-send-upstream-event-start"><primary>gst_harness_stress_send_upstream_event_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_send_upstream_event_start(h, e)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-push-upstream-event-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_push_upstream_event_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-push-upstream-event-start-full" role="1.6"><primary>gst_harness_stress_push_upstream_event_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_push_upstream_event_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Push the <parameter>event</parameter>
 onto the harnessed <link linkend="GstElement"><type>GstElement</type></link> srcpad in intervals of
<parameter>sleep</parameter>
 microseconds.
Pushing events should generally be OOB events.
If you need serialized events, you may use a custom stress thread which
both pushes buffers and events.</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-push-upstream-event-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstEvent"><type>GstEvent</type></link> to push</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each gst_event_push with <parameter>event</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-push-upstream-event-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-property-start" role="macro">
<title>gst_harness_stress_property_start()</title>
<indexterm zone="gst-harness-stress-property-start"><primary>gst_harness_stress_property_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_property_start(h, n, v)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-property-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_property_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-property-start-full" role="1.6"><primary>gst_harness_stress_property_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_property_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                <parameter>const <link linkend="GValue"><type>GValue</type></link> *value</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Call g_object_set with <parameter>name</parameter>
 and <parameter>value</parameter>
 in intervals of <parameter>sleep</parameter>
 microseconds</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-property-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link> specifying a property name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>a <link linkend="GValue"><type>GValue</type></link> to set the property to</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each g_object_set with <parameter>name</parameter>
and <parameter>value</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-property-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-harness-stress-requestpad-start" role="macro">
<title>gst_harness_stress_requestpad_start()</title>
<indexterm zone="gst-harness-stress-requestpad-start"><primary>gst_harness_stress_requestpad_start</primary></indexterm>
<programlisting language="C">#define             gst_harness_stress_requestpad_start(h, t, n, c, r)</programlisting>
</refsect2>
<refsect2 id="gst-harness-stress-requestpad-start-full" role="function" condition="since:1.6">
<title>gst_harness_stress_requestpad_start_full&#160;()</title>
<indexterm zone="gst-harness-stress-requestpad-start-full" role="1.6"><primary>gst_harness_stress_requestpad_start_full</primary></indexterm>
<programlisting language="C"><link linkend="GstHarnessThread"><returnvalue>GstHarnessThread</returnvalue></link>&#160;*
gst_harness_stress_requestpad_start_full
                               (<parameter><link linkend="GstHarness"><type>GstHarness</type></link> *h</parameter>,
                                <parameter><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> *templ</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>,
                                <parameter><link linkend="gboolean"><type>gboolean</type></link> release</parameter>,
                                <parameter><link linkend="gulong"><type>gulong</type></link> sleep</parameter>);</programlisting>
<para>Call gst_element_request_pad in intervals of <parameter>sleep</parameter>
 microseconds</para>
<para>MT safe.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-harness-stress-requestpad-start-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>h</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstHarness"><type>GstHarness</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>templ</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>a <link linkend="gchar"><type>gchar</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstCaps"><type>GstCaps</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>release</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sleep</para></entry>
<entry role="parameter_description"><para>a <link linkend="gulong"><type>gulong</type></link> specifying how long to sleep in (microseconds) for
each gst_element_request_pad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-harness-stress-requestpad-start-full.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstHarnessThread"><type>GstHarnessThread</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>

</refsect1>
<refsect1 id="gstreamer-libs-GstHarness.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstHarness" role="struct" condition="since:1.6">
<title>struct GstHarness</title>
<indexterm zone="GstHarness" role="1.6"><primary>GstHarness</primary></indexterm>
<programlisting language="C">struct GstHarness {
  GstElement * element;

  GstPad * srcpad;
  GstPad * sinkpad;

  GstHarness * src_harness;
  GstHarness * sink_harness;
};
</programlisting>
<refsect3 id="GstHarness.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstElement"><type>GstElement</type></link>&#160;*<structfield id="GstHarness.element">element</structfield>;</para></entry>
<entry role="struct_member_description"><para>the element inside the harness</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstPad"><type>GstPad</type></link>&#160;*<structfield id="GstHarness.srcpad">srcpad</structfield>;</para></entry>
<entry role="struct_member_description"><para>the internal harness source pad</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstPad"><type>GstPad</type></link>&#160;*<structfield id="GstHarness.sinkpad">sinkpad</structfield>;</para></entry>
<entry role="struct_member_description"><para>the internal harness sink pad</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstHarness"><type>GstHarness</type></link>&#160;*<structfield id="GstHarness.src-harness">src_harness</structfield>;</para></entry>
<entry role="struct_member_description"><para>the source (input) harness (if any)</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstHarness"><type>GstHarness</type></link>&#160;*<structfield id="GstHarness.sink-harness">sink_harness</structfield>;</para></entry>
<entry role="struct_member_description"><para>the sink (output) harness (if any)</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="GstHarnessThread" role="struct" condition="since:1.6">
<title>GstHarnessThread</title>
<indexterm zone="GstHarnessThread" role="1.6"><primary>GstHarnessThread</primary></indexterm>
<programlisting language="C">typedef struct _GstHarnessThread GstHarnessThread;</programlisting>
<para>Opaque handle representing a GstHarness stress testing thread.</para>
<para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>

</refsect1>
<refsect1 id="gstreamer-libs-GstHarness.see-also">
<title>See Also</title>
<para><link linkend="GstTestClock"><type>GstTestClock</type></link>,\</para>

</refsect1>

</refentry>
