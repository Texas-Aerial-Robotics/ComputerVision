<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="gstreamer-libs-GstByteReader">
<refmeta>
<refentrytitle role="top_of_page" id="gstreamer-libs-GstByteReader.top_of_page">GstByteReader</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER-LIBS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstByteReader</refname>
<refpurpose>Reads different integer, string and floating point
    types from a memory buffer</refpurpose>
</refnamediv>

<refsect1 id="gstreamer-libs-GstByteReader.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-BYTE-READER-INIT:CAPS">GST_BYTE_READER_INIT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstByteReader"><returnvalue>GstByteReader</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-byte-reader-new">gst_byte_reader_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-free">gst_byte_reader_free</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-init">gst_byte_reader_init</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-sub-reader">gst_byte_reader_peek_sub_reader</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-sub-reader">gst_byte_reader_get_sub_reader</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-pos">gst_byte_reader_get_pos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-remaining">gst_byte_reader_get_remaining</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-set-pos">gst_byte_reader_set_pos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-size">gst_byte_reader_get_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-skip">gst_byte_reader_skip</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int8">gst_byte_reader_get_int8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int16-be">gst_byte_reader_get_int16_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int16-le">gst_byte_reader_get_int16_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int24-be">gst_byte_reader_get_int24_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int24-le">gst_byte_reader_get_int24_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int32-be">gst_byte_reader_get_int32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int32-le">gst_byte_reader_get_int32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int64-be">gst_byte_reader_get_int64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int64-le">gst_byte_reader_get_int64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint8">gst_byte_reader_get_uint8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint16-be">gst_byte_reader_get_uint16_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint16-le">gst_byte_reader_get_uint16_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint24-be">gst_byte_reader_get_uint24_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint24-le">gst_byte_reader_get_uint24_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint32-be">gst_byte_reader_get_uint32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint32-le">gst_byte_reader_get_uint32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint64-be">gst_byte_reader_get_uint64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint64-le">gst_byte_reader_get_uint64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int8">gst_byte_reader_peek_int8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int16-be">gst_byte_reader_peek_int16_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int16-le">gst_byte_reader_peek_int16_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int24-be">gst_byte_reader_peek_int24_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int24-le">gst_byte_reader_peek_int24_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int32-be">gst_byte_reader_peek_int32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int32-le">gst_byte_reader_peek_int32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int64-be">gst_byte_reader_peek_int64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int64-le">gst_byte_reader_peek_int64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint8">gst_byte_reader_peek_uint8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint16-be">gst_byte_reader_peek_uint16_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint16-le">gst_byte_reader_peek_uint16_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint24-be">gst_byte_reader_peek_uint24_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint24-le">gst_byte_reader_peek_uint24_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint32-be">gst_byte_reader_peek_uint32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint32-le">gst_byte_reader_peek_uint32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint64-be">gst_byte_reader_peek_uint64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint64-le">gst_byte_reader_peek_uint64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float32-le">gst_byte_reader_get_float32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float32-be">gst_byte_reader_get_float32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float64-le">gst_byte_reader_get_float64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float64-be">gst_byte_reader_get_float64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float32-le">gst_byte_reader_peek_float32_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float32-be">gst_byte_reader_peek_float32_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float64-le">gst_byte_reader_peek_float64_le</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float64-be">gst_byte_reader_peek_float64_be</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-data">gst_byte_reader_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-data">gst_byte_reader_dup_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-data">gst_byte_reader_peek_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-masked-scan-uint32">gst_byte_reader_masked_scan_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-masked-scan-uint32-peek">gst_byte_reader_masked_scan_uint32_peek</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-byte-reader-get-string">gst_byte_reader_get_string</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-string-utf8">gst_byte_reader_get_string_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-string">gst_byte_reader_peek_string</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-string-utf8">gst_byte_reader_peek_string_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-string">gst_byte_reader_dup_string</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-string-utf8">gst_byte_reader_dup_string_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-string-utf16">gst_byte_reader_dup_string_utf16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-string-utf32">gst_byte_reader_dup_string_utf32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-byte-reader-skip-string">gst_byte_reader_skip_string</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-skip-string-utf8">gst_byte_reader_skip_string_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-skip-string-utf16">gst_byte_reader_skip_string_utf16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-skip-string-utf32">gst_byte_reader_skip_string_utf32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-skip-unchecked">gst_byte_reader_skip_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint8"><returnvalue>gint8</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int8-unchecked">gst_byte_reader_get_int8_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int16-be-unchecked">gst_byte_reader_get_int16_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int16-le-unchecked">gst_byte_reader_get_int16_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int24-be-unchecked">gst_byte_reader_get_int24_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int24-le-unchecked">gst_byte_reader_get_int24_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int32-be-unchecked">gst_byte_reader_get_int32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int32-le-unchecked">gst_byte_reader_get_int32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int64-be-unchecked">gst_byte_reader_get_int64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-int64-le-unchecked">gst_byte_reader_get_int64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint8-unchecked">gst_byte_reader_get_uint8_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint16-be-unchecked">gst_byte_reader_get_uint16_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint16-le-unchecked">gst_byte_reader_get_uint16_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint24-be-unchecked">gst_byte_reader_get_uint24_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint24-le-unchecked">gst_byte_reader_get_uint24_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint32-be-unchecked">gst_byte_reader_get_uint32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint32-le-unchecked">gst_byte_reader_get_uint32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint64-be-unchecked">gst_byte_reader_get_uint64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-uint64-le-unchecked">gst_byte_reader_get_uint64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint8"><returnvalue>gint8</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int8-unchecked">gst_byte_reader_peek_int8_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int16-be-unchecked">gst_byte_reader_peek_int16_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int16-le-unchecked">gst_byte_reader_peek_int16_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int24-be-unchecked">gst_byte_reader_peek_int24_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int24-le-unchecked">gst_byte_reader_peek_int24_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int32-be-unchecked">gst_byte_reader_peek_int32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int32-le-unchecked">gst_byte_reader_peek_int32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int64-be-unchecked">gst_byte_reader_peek_int64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-int64-le-unchecked">gst_byte_reader_peek_int64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint8-unchecked">gst_byte_reader_peek_uint8_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint16-be-unchecked">gst_byte_reader_peek_uint16_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint16-le-unchecked">gst_byte_reader_peek_uint16_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint24-be-unchecked">gst_byte_reader_peek_uint24_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint24-le-unchecked">gst_byte_reader_peek_uint24_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint32-be-unchecked">gst_byte_reader_peek_uint32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint32-le-unchecked">gst_byte_reader_peek_uint32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint64-be-unchecked">gst_byte_reader_peek_uint64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-uint64-le-unchecked">gst_byte_reader_peek_uint64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float32-le-unchecked">gst_byte_reader_get_float32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float32-be-unchecked">gst_byte_reader_get_float32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float64-le-unchecked">gst_byte_reader_get_float64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-float64-be-unchecked">gst_byte_reader_get_float64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float32-le-unchecked">gst_byte_reader_peek_float32_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float32-be-unchecked">gst_byte_reader_peek_float32_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float64-le-unchecked">gst_byte_reader_peek_float64_le_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-float64-be-unchecked">gst_byte_reader_peek_float64_be_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-byte-reader-dup-data-unchecked">gst_byte_reader_dup_data_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-byte-reader-get-data-unchecked">gst_byte_reader_get_data_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-byte-reader-peek-data-unchecked">gst_byte_reader_peek_data_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gstreamer-libs-GstByteReader.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GstByteReader">GstByteReader</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="gstreamer-libs-GstByteReader.includes"><title>Includes</title><synopsis>#include &lt;gst/base/gstbytereader.h&gt;
</synopsis></refsect1>

<refsect1 id="gstreamer-libs-GstByteReader.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstByteReader"><type>GstByteReader</type></link> provides a byte reader that can read different integer and
floating point types from a memory buffer. It provides functions for reading
signed/unsigned, little/big endian integers of 8, 16, 24, 32 and 64 bits
and functions for reading little/big endian floating points numbers of
32 and 64 bits. It also provides functions to read NUL-terminated strings
in various character encodings.</para>

</refsect1>
<refsect1 id="gstreamer-libs-GstByteReader.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="GST-BYTE-READER-INIT:CAPS" role="macro">
<title>GST_BYTE_READER_INIT()</title>
<indexterm zone="GST-BYTE-READER-INIT:CAPS"><primary>GST_BYTE_READER_INIT</primary></indexterm>
<programlisting language="C">#define GST_BYTE_READER_INIT(data, size) {data, size, 0}
</programlisting>
<para>A <link linkend="GstByteReader"><type>GstByteReader</type></link> must be initialized with this macro, before it can be
used. This macro can used be to initialize a variable, but it cannot
be assigned to a variable. In that case you have to use
<link linkend="gst-byte-reader-init"><function>gst_byte_reader_init()</function></link>.</para>
<refsect3 id="GST-BYTE-READER-INIT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Data from which the <link linkend="GstByteReader"><type>GstByteReader</type></link> should read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-new" role="function">
<title>gst_byte_reader_new&#160;()</title>
<indexterm zone="gst-byte-reader-new"><primary>gst_byte_reader_new</primary></indexterm>
<programlisting language="C"><link linkend="GstByteReader"><returnvalue>GstByteReader</returnvalue></link>&#160;*
gst_byte_reader_new (<parameter>const <link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                     <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Create a new <link linkend="GstByteReader"><type>GstByteReader</type></link> instance, which will read from <parameter>data</parameter>
.</para>
<para>Free-function: gst_byte_reader_free</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-byte-reader-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para> data from which the
<link linkend="GstByteReader"><type>GstByteReader</type></link> should read. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> length=size]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-new.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstByteReader"><type>GstByteReader</type></link> instance. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-free" role="function">
<title>gst_byte_reader_free&#160;()</title>
<indexterm zone="gst-byte-reader-free"><primary>gst_byte_reader_free</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_byte_reader_free (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Frees a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance, which was previously allocated by
<link linkend="gst-byte-reader-new"><function>gst_byte_reader_new()</function></link>.</para>
<refsect3 id="gst-byte-reader-free.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-init" role="function">
<title>gst_byte_reader_init&#160;()</title>
<indexterm zone="gst-byte-reader-init"><primary>gst_byte_reader_init</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_byte_reader_init (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                      <parameter>const <link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                      <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Initializes a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance to read from <parameter>data</parameter>
. This function
can be called on already initialized instances.</para>
<refsect3 id="gst-byte-reader-init.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para> data from which
the <link linkend="GstByteReader"><type>GstByteReader</type></link> should read. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> length=size]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-sub-reader" role="function" condition="since:1.6">
<title>gst_byte_reader_peek_sub_reader&#160;()</title>
<indexterm zone="gst-byte-reader-peek-sub-reader" role="1.6"><primary>gst_byte_reader_peek_sub_reader</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_sub_reader (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *sub_reader</parameter>,
                                 <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Initializes a <link linkend="GstByteReader"><type>GstByteReader</type></link> sub-reader instance to contain <parameter>size</parameter>
 bytes of
data from the current position of <parameter>reader</parameter>
. This is useful to read chunked
formats and make sure that one doesn't read beyond the size of the sub-chunk.</para>
<para>Unlike <link linkend="gst-byte-reader-get-sub-reader"><function>gst_byte_reader_get_sub_reader()</function></link>, this function does not modify the
current position of <parameter>reader</parameter>
.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-byte-reader-peek-sub-reader.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>an existing and initialized <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sub_reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance to initialize as sub-reader</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>sub_reader</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-sub-reader.returns" role="returns">
<title>Returns</title>
<para> FALSE on error or if <parameter>reader</parameter>
does not contain <parameter>size</parameter>
more bytes from
the current position, and otherwise TRUE</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-byte-reader-get-sub-reader" role="function" condition="since:1.6">
<title>gst_byte_reader_get_sub_reader&#160;()</title>
<indexterm zone="gst-byte-reader-get-sub-reader" role="1.6"><primary>gst_byte_reader_get_sub_reader</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_sub_reader (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *sub_reader</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Initializes a <link linkend="GstByteReader"><type>GstByteReader</type></link> sub-reader instance to contain <parameter>size</parameter>
 bytes of
data from the current position of <parameter>reader</parameter>
. This is useful to read chunked
formats and make sure that one doesn't read beyond the size of the sub-chunk.</para>
<para>Unlike <link linkend="gst-byte-reader-peek-sub-reader"><function>gst_byte_reader_peek_sub_reader()</function></link>, this function also modifies the
position of <parameter>reader</parameter>
 and moves it forward by <parameter>size</parameter>
 bytes.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-byte-reader-get-sub-reader.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>an existing and initialized <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sub_reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance to initialize as sub-reader</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>sub_reader</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-sub-reader.returns" role="returns">
<title>Returns</title>
<para> FALSE on error or if <parameter>reader</parameter>
does not contain <parameter>size</parameter>
more bytes from
the current position, and otherwise TRUE</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-byte-reader-get-pos" role="function">
<title>gst_byte_reader_get_pos&#160;()</title>
<indexterm zone="gst-byte-reader-get-pos"><primary>gst_byte_reader_get_pos</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_byte_reader_get_pos (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Returns the current position of a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance in bytes.</para>
<refsect3 id="gst-byte-reader-get-pos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-pos.returns" role="returns">
<title>Returns</title>
<para> The current position of <parameter>reader</parameter>
in bytes.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-remaining" role="function">
<title>gst_byte_reader_get_remaining&#160;()</title>
<indexterm zone="gst-byte-reader-get-remaining"><primary>gst_byte_reader_get_remaining</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_byte_reader_get_remaining (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Returns the remaining number of bytes of a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance.</para>
<refsect3 id="gst-byte-reader-get-remaining.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-remaining.returns" role="returns">
<title>Returns</title>
<para> The remaining number of bytes of <parameter>reader</parameter>
instance.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-set-pos" role="function">
<title>gst_byte_reader_set_pos&#160;()</title>
<indexterm zone="gst-byte-reader-set-pos"><primary>gst_byte_reader_set_pos</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_set_pos (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                         <parameter><link linkend="guint"><type>guint</type></link> pos</parameter>);</programlisting>
<para>Sets the new position of a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance to <parameter>pos</parameter>
 in bytes.</para>
<refsect3 id="gst-byte-reader-set-pos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>The new position in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-set-pos.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the position could be set successfully, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>
otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-size" role="function">
<title>gst_byte_reader_get_size&#160;()</title>
<indexterm zone="gst-byte-reader-get-size"><primary>gst_byte_reader_get_size</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_byte_reader_get_size (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Returns the total number of bytes of a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance.</para>
<refsect3 id="gst-byte-reader-get-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-size.returns" role="returns">
<title>Returns</title>
<para> The total number of bytes of <parameter>reader</parameter>
instance.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip" role="function">
<title>gst_byte_reader_skip&#160;()</title>
<indexterm zone="gst-byte-reader-skip"><primary>gst_byte_reader_skip</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_skip (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                      <parameter><link linkend="guint"><type>guint</type></link> nbytes</parameter>);</programlisting>
<para>Skips <parameter>nbytes</parameter>
 bytes of the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance.</para>
<refsect3 id="gst-byte-reader-skip.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbytes</para></entry>
<entry role="parameter_description"><para>the number of bytes to skip</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-skip.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>nbytes</parameter>
bytes could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int8" role="function">
<title>gst_byte_reader_get_int8&#160;()</title>
<indexterm zone="gst-byte-reader-get-int8"><primary>gst_byte_reader_get_int8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int8 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                          <parameter><link linkend="gint8"><type>gint8</type></link> *val</parameter>);</programlisting>
<para>Read a signed 8 bit integer into <parameter>val</parameter>
 and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint8"><type>gint8</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int16-be" role="function">
<title>gst_byte_reader_get_int16_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-int16-be"><primary>gst_byte_reader_get_int16_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int16_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint16"><type>gint16</type></link> *val</parameter>);</programlisting>
<para>Read a signed 16 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int16-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint16"><type>gint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int16-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int16-le" role="function">
<title>gst_byte_reader_get_int16_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-int16-le"><primary>gst_byte_reader_get_int16_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int16_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint16"><type>gint16</type></link> *val</parameter>);</programlisting>
<para>Read a signed 16 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int16-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint16"><type>gint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int16-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int24-be" role="function">
<title>gst_byte_reader_get_int24_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-int24-be"><primary>gst_byte_reader_get_int24_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int24_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 24 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int24-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int24-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int24-le" role="function">
<title>gst_byte_reader_get_int24_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-int24-le"><primary>gst_byte_reader_get_int24_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int24_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 24 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int24-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int24-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int32-be" role="function">
<title>gst_byte_reader_get_int32_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-int32-be"><primary>gst_byte_reader_get_int32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int32_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 32 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int32-le" role="function">
<title>gst_byte_reader_get_int32_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-int32-le"><primary>gst_byte_reader_get_int32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int32_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 32 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int64-be" role="function">
<title>gst_byte_reader_get_int64_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-int64-be"><primary>gst_byte_reader_get_int64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int64_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint64"><type>gint64</type></link> *val</parameter>);</programlisting>
<para>Read a signed 64 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint64"><type>gint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int64-le" role="function">
<title>gst_byte_reader_get_int64_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-int64-le"><primary>gst_byte_reader_get_int64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_int64_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                              <parameter><link linkend="gint64"><type>gint64</type></link> *val</parameter>);</programlisting>
<para>Read a signed 64 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint64"><type>gint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint8" role="function">
<title>gst_byte_reader_get_uint8&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint8"><primary>gst_byte_reader_get_uint8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint8 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                           <parameter><link linkend="guint8"><type>guint8</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 8 bit integer into <parameter>val</parameter>
 and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint8"><type>guint8</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint16-be" role="function">
<title>gst_byte_reader_get_uint16_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint16-be"><primary>gst_byte_reader_get_uint16_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint16_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint16"><type>guint16</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 16 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint16-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint16"><type>guint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint16-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint16-le" role="function">
<title>gst_byte_reader_get_uint16_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint16-le"><primary>gst_byte_reader_get_uint16_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint16_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint16"><type>guint16</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 16 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint16-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint16"><type>guint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint16-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint24-be" role="function">
<title>gst_byte_reader_get_uint24_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint24-be"><primary>gst_byte_reader_get_uint24_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint24_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 24 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint24-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint24-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint24-le" role="function">
<title>gst_byte_reader_get_uint24_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint24-le"><primary>gst_byte_reader_get_uint24_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint24_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 24 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint24-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint24-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint32-be" role="function">
<title>gst_byte_reader_get_uint32_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint32-be"><primary>gst_byte_reader_get_uint32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint32_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 32 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint32-le" role="function">
<title>gst_byte_reader_get_uint32_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint32-le"><primary>gst_byte_reader_get_uint32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint32_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 32 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint64-be" role="function">
<title>gst_byte_reader_get_uint64_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint64-be"><primary>gst_byte_reader_get_uint64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint64_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint64"><type>guint64</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 64 bit big endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint64"><type>guint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint64-le" role="function">
<title>gst_byte_reader_get_uint64_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint64-le"><primary>gst_byte_reader_get_uint64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_uint64_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="guint64"><type>guint64</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 64 bit little endian integer into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint64"><type>guint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int8" role="function">
<title>gst_byte_reader_peek_int8&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int8"><primary>gst_byte_reader_peek_int8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int8 (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                           <parameter><link linkend="gint8"><type>gint8</type></link> *val</parameter>);</programlisting>
<para>Read a signed 8 bit integer into <parameter>val</parameter>
 but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint8"><type>gint8</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int16-be" role="function">
<title>gst_byte_reader_peek_int16_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int16-be"><primary>gst_byte_reader_peek_int16_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int16_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint16"><type>gint16</type></link> *val</parameter>);</programlisting>
<para>Read a signed 16 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int16-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint16"><type>gint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int16-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int16-le" role="function">
<title>gst_byte_reader_peek_int16_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int16-le"><primary>gst_byte_reader_peek_int16_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int16_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint16"><type>gint16</type></link> *val</parameter>);</programlisting>
<para>Read a signed 16 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int16-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint16"><type>gint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int16-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int24-be" role="function">
<title>gst_byte_reader_peek_int24_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int24-be"><primary>gst_byte_reader_peek_int24_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int24_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 24 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int24-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int24-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int24-le" role="function">
<title>gst_byte_reader_peek_int24_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int24-le"><primary>gst_byte_reader_peek_int24_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int24_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 24 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int24-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int24-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int32-be" role="function">
<title>gst_byte_reader_peek_int32_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int32-be"><primary>gst_byte_reader_peek_int32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int32_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 32 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int32-le" role="function">
<title>gst_byte_reader_peek_int32_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int32-le"><primary>gst_byte_reader_peek_int32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int32_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint32"><type>gint32</type></link> *val</parameter>);</programlisting>
<para>Read a signed 32 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint32"><type>gint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int64-be" role="function">
<title>gst_byte_reader_peek_int64_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int64-be"><primary>gst_byte_reader_peek_int64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int64_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> *val</parameter>);</programlisting>
<para>Read a signed 64 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint64"><type>gint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int64-le" role="function">
<title>gst_byte_reader_peek_int64_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int64-le"><primary>gst_byte_reader_peek_int64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_int64_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> *val</parameter>);</programlisting>
<para>Read a signed 64 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-int64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gint64"><type>gint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint8" role="function">
<title>gst_byte_reader_peek_uint8&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint8"><primary>gst_byte_reader_peek_uint8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint8 (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                            <parameter><link linkend="guint8"><type>guint8</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 8 bit integer into <parameter>val</parameter>
 but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint8"><type>guint8</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint16-be" role="function">
<title>gst_byte_reader_peek_uint16_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint16-be"><primary>gst_byte_reader_peek_uint16_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint16_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint16"><type>guint16</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 16 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint16-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint16"><type>guint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint16-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint16-le" role="function">
<title>gst_byte_reader_peek_uint16_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint16-le"><primary>gst_byte_reader_peek_uint16_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint16_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint16"><type>guint16</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 16 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint16-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint16"><type>guint16</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint16-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint24-be" role="function">
<title>gst_byte_reader_peek_uint24_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint24-be"><primary>gst_byte_reader_peek_uint24_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint24_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 24 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint24-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint24-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint24-le" role="function">
<title>gst_byte_reader_peek_uint24_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint24-le"><primary>gst_byte_reader_peek_uint24_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint24_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 24 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint24-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint24-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint32-be" role="function">
<title>gst_byte_reader_peek_uint32_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint32-be"><primary>gst_byte_reader_peek_uint32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint32_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 32 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint32-le" role="function">
<title>gst_byte_reader_peek_uint32_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint32-le"><primary>gst_byte_reader_peek_uint32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint32_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 32 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint32"><type>guint32</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint64-be" role="function">
<title>gst_byte_reader_peek_uint64_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint64-be"><primary>gst_byte_reader_peek_uint64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint64_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint64"><type>guint64</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 64 bit big endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint64"><type>guint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint64-le" role="function">
<title>gst_byte_reader_peek_uint64_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint64-le"><primary>gst_byte_reader_peek_uint64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_uint64_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint64"><type>guint64</type></link> *val</parameter>);</programlisting>
<para>Read an unsigned 64 bit little endian integer into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="guint64"><type>guint64</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float32-le" role="function">
<title>gst_byte_reader_get_float32_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-float32-le"><primary>gst_byte_reader_get_float32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_float32_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="gfloat"><type>gfloat</type></link> *val</parameter>);</programlisting>
<para>Read a 32 bit little endian floating point value into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gfloat"><type>gfloat</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float32-be" role="function">
<title>gst_byte_reader_get_float32_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-float32-be"><primary>gst_byte_reader_get_float32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_float32_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="gfloat"><type>gfloat</type></link> *val</parameter>);</programlisting>
<para>Read a 32 bit big endian floating point value into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gfloat"><type>gfloat</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float64-le" role="function">
<title>gst_byte_reader_get_float64_le&#160;()</title>
<indexterm zone="gst-byte-reader-get-float64-le"><primary>gst_byte_reader_get_float64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_float64_le (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="gdouble"><type>gdouble</type></link> *val</parameter>);</programlisting>
<para>Read a 64 bit little endian floating point value into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gdouble"><type>gdouble</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float64-be" role="function">
<title>gst_byte_reader_get_float64_be&#160;()</title>
<indexterm zone="gst-byte-reader-get-float64-be"><primary>gst_byte_reader_get_float64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_float64_be (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="gdouble"><type>gdouble</type></link> *val</parameter>);</programlisting>
<para>Read a 64 bit big endian floating point value into <parameter>val</parameter>

and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gdouble"><type>gdouble</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float32-le" role="function">
<title>gst_byte_reader_peek_float32_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float32-le"><primary>gst_byte_reader_peek_float32_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_float32_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="gfloat"><type>gfloat</type></link> *val</parameter>);</programlisting>
<para>Read a 32 bit little endian floating point value into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float32-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gfloat"><type>gfloat</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float32-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float32-be" role="function">
<title>gst_byte_reader_peek_float32_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float32-be"><primary>gst_byte_reader_peek_float32_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_float32_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="gfloat"><type>gfloat</type></link> *val</parameter>);</programlisting>
<para>Read a 32 bit big endian floating point value into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float32-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gfloat"><type>gfloat</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float32-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float64-le" role="function">
<title>gst_byte_reader_peek_float64_le&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float64-le"><primary>gst_byte_reader_peek_float64_le</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_float64_le (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="gdouble"><type>gdouble</type></link> *val</parameter>);</programlisting>
<para>Read a 64 bit little endian floating point value into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float64-le.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gdouble"><type>gdouble</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float64-le.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float64-be" role="function">
<title>gst_byte_reader_peek_float64_be&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float64-be"><primary>gst_byte_reader_peek_float64_be</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_float64_be (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="gdouble"><type>gdouble</type></link> *val</parameter>);</programlisting>
<para>Read a 64 bit big endian floating point value into <parameter>val</parameter>

but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float64-be.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> Pointer to a <link linkend="gdouble"><type>gdouble</type></link> to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float64-be.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-data" role="function">
<title>gst_byte_reader_get_data&#160;()</title>
<indexterm zone="gst-byte-reader-get-data"><primary>gst_byte_reader_get_data</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_data (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                          <parameter>const <link linkend="guint8"><type>guint8</type></link> **val</parameter>);</programlisting>
<para>Returns a constant pointer to the current data
position if at least <parameter>size</parameter>
 bytes are left and
updates the current position.</para>
<refsect3 id="gst-byte-reader-get-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="guint8"><type>guint8</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> length=size]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-data.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-dup-data" role="function">
<title>gst_byte_reader_dup_data&#160;()</title>
<indexterm zone="gst-byte-reader-dup-data"><primary>gst_byte_reader_dup_data</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_dup_data (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                          <parameter><link linkend="guint8"><type>guint8</type></link> **val</parameter>);</programlisting>
<para>Free-function: g_free</para>
<para>Returns a newly-allocated copy of the current data
position if at least <parameter>size</parameter>
 bytes are left and
updates the current position. Free with <link linkend="g-free"><function>g_free()</function></link> when no longer needed.</para>
<refsect3 id="gst-byte-reader-dup-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="guint8"><type>guint8</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> length=size]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-dup-data.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-data" role="function">
<title>gst_byte_reader_peek_data&#160;()</title>
<indexterm zone="gst-byte-reader-peek-data"><primary>gst_byte_reader_peek_data</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_data (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                           <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                           <parameter>const <link linkend="guint8"><type>guint8</type></link> **val</parameter>);</programlisting>
<para>Returns a constant pointer to the current data
position if at least <parameter>size</parameter>
 bytes are left and
keeps the current position.</para>
<refsect3 id="gst-byte-reader-peek-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="guint8"><type>guint8</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> length=size]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-data.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-masked-scan-uint32" role="function">
<title>gst_byte_reader_masked_scan_uint32&#160;()</title>
<indexterm zone="gst-byte-reader-masked-scan-uint32"><primary>gst_byte_reader_masked_scan_uint32</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_byte_reader_masked_scan_uint32 (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                    <parameter><link linkend="guint32"><type>guint32</type></link> mask</parameter>,
                                    <parameter><link linkend="guint32"><type>guint32</type></link> pattern</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> offset</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Scan for pattern <parameter>pattern</parameter>
 with applied mask <parameter>mask</parameter>
 in the byte reader data,
starting from offset <parameter>offset</parameter>
 relative to the current position.</para>
<para>The bytes in <parameter>pattern</parameter>
 and <parameter>mask</parameter>
 are interpreted left-to-right, regardless
of endianness.  All four bytes of the pattern must be present in the
byte reader data for it to match, even if the first or last bytes are masked
out.</para>
<para>It is an error to call this function without making sure that there is
enough data (offset+size bytes) in the byte reader.</para>
<refsect3 id="gst-byte-reader-masked-scan-uint32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mask</para></entry>
<entry role="parameter_description"><para>mask to apply to data before matching against <parameter>pattern</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pattern</para></entry>
<entry role="parameter_description"><para>pattern to match (after mask is applied)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>offset from which to start scanning, relative to the current
position</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>number of bytes to scan from offset</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-masked-scan-uint32.returns" role="returns">
<title>Returns</title>
<para> offset of the first match, or -1 if no match was found.</para>
<para>Example:</para>
<programlisting>
// Assume the reader contains 0x00 0x01 0x02 ... 0xfe 0xff
gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x00010203, 0, 256);
// -> returns 0
gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x00010203, 1, 255);
// -> returns -1
gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x01020304, 1, 255);
// -> returns 1
gst_byte_reader_masked_scan_uint32 (reader, 0xffff, 0x0001, 0, 256);
// -> returns -1
gst_byte_reader_masked_scan_uint32 (reader, 0xffff, 0x0203, 0, 256);
// -> returns 0
gst_byte_reader_masked_scan_uint32 (reader, 0xffff0000, 0x02030000, 0, 256);
// -> returns 2
gst_byte_reader_masked_scan_uint32 (reader, 0xffff0000, 0x02030000, 0, 4);
// -> returns -1
</programlisting>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-masked-scan-uint32-peek" role="function" condition="since:1.6">
<title>gst_byte_reader_masked_scan_uint32_peek&#160;()</title>
<indexterm zone="gst-byte-reader-masked-scan-uint32-peek" role="1.6"><primary>gst_byte_reader_masked_scan_uint32_peek</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_byte_reader_masked_scan_uint32_peek
                               (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> mask</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> pattern</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> offset</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> *value</parameter>);</programlisting>
<para>Scan for pattern <parameter>pattern</parameter>
 with applied mask <parameter>mask</parameter>
 in the byte reader data,
starting from offset <parameter>offset</parameter>
 relative to the current position.</para>
<para>The bytes in <parameter>pattern</parameter>
 and <parameter>mask</parameter>
 are interpreted left-to-right, regardless
of endianness.  All four bytes of the pattern must be present in the
byte reader data for it to match, even if the first or last bytes are masked
out.</para>
<para>It is an error to call this function without making sure that there is
enough data (offset+size bytes) in the byte reader.</para>
<refsect3 id="gst-byte-reader-masked-scan-uint32-peek.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mask</para></entry>
<entry role="parameter_description"><para>mask to apply to data before matching against <parameter>pattern</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pattern</para></entry>
<entry role="parameter_description"><para>pattern to match (after mask is applied)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>offset from which to start scanning, relative to the current
position</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>number of bytes to scan from offset</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>pointer to uint32 to return matching data</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-masked-scan-uint32-peek.returns" role="returns">
<title>Returns</title>
<para> offset of the first match, or -1 if no match was found.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-byte-reader-get-string" role="macro">
<title>gst_byte_reader_get_string()</title>
<indexterm zone="gst-byte-reader-get-string"><primary>gst_byte_reader_get_string</primary></indexterm>
<programlisting language="C">#define             gst_byte_reader_get_string(reader,str)</programlisting>
</refsect2>
<refsect2 id="gst-byte-reader-get-string-utf8" role="function">
<title>gst_byte_reader_get_string_utf8&#160;()</title>
<indexterm zone="gst-byte-reader-get-string-utf8"><primary>gst_byte_reader_get_string_utf8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_get_string_utf8 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> **str</parameter>);</programlisting>
<para>Returns a constant pointer to the current data position if there is
a NUL-terminated string in the data (this could be just a NUL terminator),
advancing the current position to the byte after the string. This will work
for any NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc.</para>
<para>No input checking for valid UTF-8 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-get-string-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="gchar"><type>gchar</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-string-utf8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be found, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-string" role="macro">
<title>gst_byte_reader_peek_string()</title>
<indexterm zone="gst-byte-reader-peek-string"><primary>gst_byte_reader_peek_string</primary></indexterm>
<programlisting language="C">#define             gst_byte_reader_peek_string(reader,str)</programlisting>
<para>Returns a constant pointer to the current data position if there is
a NUL-terminated string in the data (this could be just a NUL terminator).
The current position will be maintained. This will work for any
NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-peek-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="gchar"><type>gchar</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-string.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-string-utf8" role="function">
<title>gst_byte_reader_peek_string_utf8&#160;()</title>
<indexterm zone="gst-byte-reader-peek-string-utf8"><primary>gst_byte_reader_peek_string_utf8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_peek_string_utf8 (<parameter>const <link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> **str</parameter>);</programlisting>
<para>Returns a constant pointer to the current data position if there is
a NUL-terminated string in the data (this could be just a NUL terminator).
The current position will be maintained. This will work for any
NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc.</para>
<para>No input checking for valid UTF-8 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-peek-string-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="gchar"><type>gchar</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-string-utf8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-dup-string" role="macro">
<title>gst_byte_reader_dup_string()</title>
<indexterm zone="gst-byte-reader-dup-string"><primary>gst_byte_reader_dup_string</primary></indexterm>
<programlisting language="C">#define             gst_byte_reader_dup_string(reader,str)</programlisting>
</refsect2>
<refsect2 id="gst-byte-reader-dup-string-utf8" role="function">
<title>gst_byte_reader_dup_string_utf8&#160;()</title>
<indexterm zone="gst-byte-reader-dup-string-utf8"><primary>gst_byte_reader_dup_string_utf8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_dup_string_utf8 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                 <parameter><link linkend="gchar"><type>gchar</type></link> **str</parameter>);</programlisting>
<para>Free-function: g_free</para>
<para>FIXME:Reads (copies) a NUL-terminated string in the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance,
advancing the current position to the byte after the string. This will work
for any NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc. No input checking for valid UTF-8 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-dup-string-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="gchar"><type>gchar</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-dup-string-utf8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be read into <parameter>str</parameter>
, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise. The
string put into <parameter>str</parameter>
must be freed with <link linkend="g-free"><function>g_free()</function></link> when no longer needed.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-dup-string-utf16" role="function">
<title>gst_byte_reader_dup_string_utf16&#160;()</title>
<indexterm zone="gst-byte-reader-dup-string-utf16"><primary>gst_byte_reader_dup_string_utf16</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_dup_string_utf16 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                  <parameter><link linkend="guint16"><type>guint16</type></link> **str</parameter>);</programlisting>
<para>Free-function: g_free</para>
<para>Returns a newly-allocated copy of the current data position if there is
a NUL-terminated UTF-16 string in the data (this could be an empty string
as well), and advances the current position.</para>
<para>No input checking for valid UTF-16 is done. This function is endianness
agnostic - you should not assume the UTF-16 characters are in host
endianness.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<para>Note: there is no peek or get variant of this function to ensure correct
byte alignment of the UTF-16 string.</para>
<refsect3 id="gst-byte-reader-dup-string-utf16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="guint16"><type>guint16</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-dup-string-utf16.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be read, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise. The
string put into <parameter>str</parameter>
must be freed with <link linkend="g-free"><function>g_free()</function></link> when no longer needed.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-dup-string-utf32" role="function">
<title>gst_byte_reader_dup_string_utf32&#160;()</title>
<indexterm zone="gst-byte-reader-dup-string-utf32"><primary>gst_byte_reader_dup_string_utf32</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_dup_string_utf32 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                  <parameter><link linkend="guint32"><type>guint32</type></link> **str</parameter>);</programlisting>
<para>Free-function: g_free</para>
<para>Returns a newly-allocated copy of the current data position if there is
a NUL-terminated UTF-32 string in the data (this could be an empty string
as well), and advances the current position.</para>
<para>No input checking for valid UTF-32 is done. This function is endianness
agnostic - you should not assume the UTF-32 characters are in host
endianness.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<para>Note: there is no peek or get variant of this function to ensure correct
byte alignment of the UTF-32 string.</para>
<refsect3 id="gst-byte-reader-dup-string-utf32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para> address of a
<link linkend="guint32"><type>guint32</type></link> pointer variable in which to store the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-dup-string-utf32.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be read, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise. The
string put into <parameter>str</parameter>
must be freed with <link linkend="g-free"><function>g_free()</function></link> when no longer needed.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip-string" role="macro">
<title>gst_byte_reader_skip_string()</title>
<indexterm zone="gst-byte-reader-skip-string"><primary>gst_byte_reader_skip_string</primary></indexterm>
<programlisting language="C">#define             gst_byte_reader_skip_string(reader)</programlisting>
<para>Skips a NUL-terminated string in the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance, advancing
the current position to the byte after the string. This will work for
any NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-skip-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-skip-string.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip-string-utf8" role="function">
<title>gst_byte_reader_skip_string_utf8&#160;()</title>
<indexterm zone="gst-byte-reader-skip-string-utf8"><primary>gst_byte_reader_skip_string_utf8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_skip_string_utf8 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Skips a NUL-terminated string in the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance, advancing
the current position to the byte after the string. This will work for
any NUL-terminated string with a character width of 8 bits, so ASCII,
UTF-8, ISO-8859-N etc. No input checking for valid UTF-8 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-skip-string-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-skip-string-utf8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip-string-utf16" role="function">
<title>gst_byte_reader_skip_string_utf16&#160;()</title>
<indexterm zone="gst-byte-reader-skip-string-utf16"><primary>gst_byte_reader_skip_string_utf16</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_skip_string_utf16 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Skips a NUL-terminated UTF-16 string in the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance,
advancing the current position to the byte after the string.</para>
<para>No input checking for valid UTF-16 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-skip-string-utf16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-skip-string-utf16.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip-string-utf32" role="function">
<title>gst_byte_reader_skip_string_utf32&#160;()</title>
<indexterm zone="gst-byte-reader-skip-string-utf32"><primary>gst_byte_reader_skip_string_utf32</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_byte_reader_skip_string_utf32 (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Skips a NUL-terminated UTF-32 string in the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance,
advancing the current position to the byte after the string.</para>
<para>No input checking for valid UTF-32 is done.</para>
<para>This function will fail if no NUL-terminator was found in in the data.</para>
<refsect3 id="gst-byte-reader-skip-string-utf32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-skip-string-utf32.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a string could be skipped, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-skip-unchecked" role="function">
<title>gst_byte_reader_skip_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-skip-unchecked"><primary>gst_byte_reader_skip_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_byte_reader_skip_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbytes</parameter>);</programlisting>
<para>Skips <parameter>nbytes</parameter>
 bytes of the <link linkend="GstByteReader"><type>GstByteReader</type></link> instance without checking if
there are enough bytes available in the byte reader.</para>
<refsect3 id="gst-byte-reader-skip-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbytes</para></entry>
<entry role="parameter_description"><para>the number of bytes to skip</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int8-unchecked" role="function">
<title>gst_byte_reader_get_int8_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int8-unchecked"><primary>gst_byte_reader_get_int8_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint8"><returnvalue>gint8</returnvalue></link>
gst_byte_reader_get_int8_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an signed 8 bit integer without checking if there are enough bytes
available in the byte reader and update the current position.</para>
<refsect3 id="gst-byte-reader-get-int8-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int8-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 8 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int16-be-unchecked" role="function">
<title>gst_byte_reader_get_int16_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int16-be-unchecked"><primary>gst_byte_reader_get_int16_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
gst_byte_reader_get_int16_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 16 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int16-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int16-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int16-le-unchecked" role="function">
<title>gst_byte_reader_get_int16_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int16-le-unchecked"><primary>gst_byte_reader_get_int16_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
gst_byte_reader_get_int16_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 16 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int16-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int16-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int24-be-unchecked" role="function">
<title>gst_byte_reader_get_int24_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int24-be-unchecked"><primary>gst_byte_reader_get_int24_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_get_int24_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 24 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int24-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int24-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 24 bit integer (as gint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int24-le-unchecked" role="function">
<title>gst_byte_reader_get_int24_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int24-le-unchecked"><primary>gst_byte_reader_get_int24_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_get_int24_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 24 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int24-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int24-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 24 bit integer (as gint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int32-be-unchecked" role="function">
<title>gst_byte_reader_get_int32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int32-be-unchecked"><primary>gst_byte_reader_get_int32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_get_int32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 32 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int32-le-unchecked" role="function">
<title>gst_byte_reader_get_int32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int32-le-unchecked"><primary>gst_byte_reader_get_int32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_get_int32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 32 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int64-be-unchecked" role="function">
<title>gst_byte_reader_get_int64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int64-be-unchecked"><primary>gst_byte_reader_get_int64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
gst_byte_reader_get_int64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 64 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-int64-le-unchecked" role="function">
<title>gst_byte_reader_get_int64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-int64-le-unchecked"><primary>gst_byte_reader_get_int64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
gst_byte_reader_get_int64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 64 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-int64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-int64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint8-unchecked" role="function">
<title>gst_byte_reader_get_uint8_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint8-unchecked"><primary>gst_byte_reader_get_uint8_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>
gst_byte_reader_get_uint8_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 8 bit integer without checking if there are enough bytes
available in the byte reader and update the current position.</para>
<refsect3 id="gst-byte-reader-get-uint8-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint8-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 8 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint16-be-unchecked" role="function">
<title>gst_byte_reader_get_uint16_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint16-be-unchecked"><primary>gst_byte_reader_get_uint16_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
gst_byte_reader_get_uint16_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 16 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint16-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint16-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint16-le-unchecked" role="function">
<title>gst_byte_reader_get_uint16_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint16-le-unchecked"><primary>gst_byte_reader_get_uint16_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
gst_byte_reader_get_uint16_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 16 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint16-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint16-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint24-be-unchecked" role="function">
<title>gst_byte_reader_get_uint24_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint24-be-unchecked"><primary>gst_byte_reader_get_uint24_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_get_uint24_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 24 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint24-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint24-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 24 bit integer (as guint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint24-le-unchecked" role="function">
<title>gst_byte_reader_get_uint24_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint24-le-unchecked"><primary>gst_byte_reader_get_uint24_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_get_uint24_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 24 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint24-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint24-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 24 bit integer (as guint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint32-be-unchecked" role="function">
<title>gst_byte_reader_get_uint32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint32-be-unchecked"><primary>gst_byte_reader_get_uint32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_get_uint32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 32 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint32-le-unchecked" role="function">
<title>gst_byte_reader_get_uint32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint32-le-unchecked"><primary>gst_byte_reader_get_uint32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_get_uint32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 32 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint64-be-unchecked" role="function">
<title>gst_byte_reader_get_uint64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint64-be-unchecked"><primary>gst_byte_reader_get_uint64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
gst_byte_reader_get_uint64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 64 bit integer in big endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-uint64-le-unchecked" role="function">
<title>gst_byte_reader_get_uint64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-uint64-le-unchecked"><primary>gst_byte_reader_get_uint64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
gst_byte_reader_get_uint64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 64 bit integer in little endian format without checking
if there are enough bytes available in the byte reader and update the
current position.</para>
<refsect3 id="gst-byte-reader-get-uint64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-uint64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int8-unchecked" role="function">
<title>gst_byte_reader_peek_int8_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int8-unchecked"><primary>gst_byte_reader_peek_int8_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint8"><returnvalue>gint8</returnvalue></link>
gst_byte_reader_peek_int8_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an signed 8 bit integer without checking if there are enough bytes
available in the byte reader, but do not advance the current read position.</para>
<refsect3 id="gst-byte-reader-peek-int8-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int8-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 8 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int16-be-unchecked" role="function">
<title>gst_byte_reader_peek_int16_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int16-be-unchecked"><primary>gst_byte_reader_peek_int16_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
gst_byte_reader_peek_int16_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 16 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int16-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int16-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int16-le-unchecked" role="function">
<title>gst_byte_reader_peek_int16_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int16-le-unchecked"><primary>gst_byte_reader_peek_int16_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
gst_byte_reader_peek_int16_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 16 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int16-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int16-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int24-be-unchecked" role="function">
<title>gst_byte_reader_peek_int24_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int24-be-unchecked"><primary>gst_byte_reader_peek_int24_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_peek_int24_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 24 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int24-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int24-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 24 bit integer (as gint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int24-le-unchecked" role="function">
<title>gst_byte_reader_peek_int24_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int24-le-unchecked"><primary>gst_byte_reader_peek_int24_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_peek_int24_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 24 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int24-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int24-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 24 bit integer (as gint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int32-be-unchecked" role="function">
<title>gst_byte_reader_peek_int32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int32-be-unchecked"><primary>gst_byte_reader_peek_int32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_peek_int32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 32 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int32-le-unchecked" role="function">
<title>gst_byte_reader_peek_int32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int32-le-unchecked"><primary>gst_byte_reader_peek_int32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
gst_byte_reader_peek_int32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 32 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int64-be-unchecked" role="function">
<title>gst_byte_reader_peek_int64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int64-be-unchecked"><primary>gst_byte_reader_peek_int64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
gst_byte_reader_peek_int64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 64 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-int64-le-unchecked" role="function">
<title>gst_byte_reader_peek_int64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-int64-le-unchecked"><primary>gst_byte_reader_peek_int64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
gst_byte_reader_peek_int64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a signed 64 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-int64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-int64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> signed 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint8-unchecked" role="function">
<title>gst_byte_reader_peek_uint8_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint8-unchecked"><primary>gst_byte_reader_peek_uint8_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>
gst_byte_reader_peek_uint8_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 8 bit integer without checking if there are enough bytes
available in the byte reader, but do not advance the current read position.</para>
<refsect3 id="gst-byte-reader-peek-uint8-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint8-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 8 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint16-be-unchecked" role="function">
<title>gst_byte_reader_peek_uint16_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint16-be-unchecked"><primary>gst_byte_reader_peek_uint16_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
gst_byte_reader_peek_uint16_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 16 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint16-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint16-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint16-le-unchecked" role="function">
<title>gst_byte_reader_peek_uint16_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint16-le-unchecked"><primary>gst_byte_reader_peek_uint16_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
gst_byte_reader_peek_uint16_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 16 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint16-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint16-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 16 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint24-be-unchecked" role="function">
<title>gst_byte_reader_peek_uint24_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint24-be-unchecked"><primary>gst_byte_reader_peek_uint24_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_peek_uint24_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 24 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint24-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint24-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 24 bit integer (as guint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint24-le-unchecked" role="function">
<title>gst_byte_reader_peek_uint24_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint24-le-unchecked"><primary>gst_byte_reader_peek_uint24_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_peek_uint24_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 24 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint24-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint24-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 24 bit integer (as guint32)</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint32-be-unchecked" role="function">
<title>gst_byte_reader_peek_uint32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint32-be-unchecked"><primary>gst_byte_reader_peek_uint32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_peek_uint32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 32 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint32-le-unchecked" role="function">
<title>gst_byte_reader_peek_uint32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint32-le-unchecked"><primary>gst_byte_reader_peek_uint32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_byte_reader_peek_uint32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 32 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 32 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint64-be-unchecked" role="function">
<title>gst_byte_reader_peek_uint64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint64-be-unchecked"><primary>gst_byte_reader_peek_uint64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
gst_byte_reader_peek_uint64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 64 bit integer in big endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-uint64-le-unchecked" role="function">
<title>gst_byte_reader_peek_uint64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-uint64-le-unchecked"><primary>gst_byte_reader_peek_uint64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
gst_byte_reader_peek_uint64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read an unsigned 64 bit integer in little endian format without checking
if there are enough bytes available in the byte reader, but do not advance
the current position.</para>
<refsect3 id="gst-byte-reader-peek-uint64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-uint64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> unsigned 64 bit integer.</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float32-le-unchecked" role="function">
<title>gst_byte_reader_get_float32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-float32-le-unchecked"><primary>gst_byte_reader_get_float32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
gst_byte_reader_get_float32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 32 bit little endian float without checking if there is enough
data available and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float32-be-unchecked" role="function">
<title>gst_byte_reader_get_float32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-float32-be-unchecked"><primary>gst_byte_reader_get_float32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
gst_byte_reader_get_float32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 32 bit big endian float without checking if there is enough
data available and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float64-le-unchecked" role="function">
<title>gst_byte_reader_get_float64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-float64-le-unchecked"><primary>gst_byte_reader_get_float64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
gst_byte_reader_get_float64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 64 bit little endian float without checking if there is enough
data available and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> double precision floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-float64-be-unchecked" role="function">
<title>gst_byte_reader_get_float64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-float64-be-unchecked"><primary>gst_byte_reader_get_float64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
gst_byte_reader_get_float64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 64 bit big endian float without checking if there is enough
data available and update the current position.</para>
<refsect3 id="gst-byte-reader-get-float64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-float64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> double precision floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float32-le-unchecked" role="function">
<title>gst_byte_reader_peek_float32_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float32-le-unchecked"><primary>gst_byte_reader_peek_float32_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
gst_byte_reader_peek_float32_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 32 bit little endian float without checking if there is enough
data available, but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float32-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float32-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float32-be-unchecked" role="function">
<title>gst_byte_reader_peek_float32_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float32-be-unchecked"><primary>gst_byte_reader_peek_float32_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gfloat"><returnvalue>gfloat</returnvalue></link>
gst_byte_reader_peek_float32_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 32 bit big endian float without checking if there is enough
data available, but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float32-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float32-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float64-le-unchecked" role="function">
<title>gst_byte_reader_peek_float64_le_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float64-le-unchecked"><primary>gst_byte_reader_peek_float64_le_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
gst_byte_reader_peek_float64_le_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 64 bit little endian float without checking if there is enough
data available, but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float64-le-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float64-le-unchecked.returns" role="returns">
<title>Returns</title>
<para> double precision floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-float64-be-unchecked" role="function">
<title>gst_byte_reader_peek_float64_be_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-float64-be-unchecked"><primary>gst_byte_reader_peek_float64_be_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gdouble"><returnvalue>gdouble</returnvalue></link>
gst_byte_reader_peek_float64_be_unchecked
                               (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<para>Read a 64 bit big endian float without checking if there is enough
data available, but keep the current position.</para>
<refsect3 id="gst-byte-reader-peek-float64-be-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-float64-be-unchecked.returns" role="returns">
<title>Returns</title>
<para> double precision floating point value read</para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-dup-data-unchecked" role="function">
<title>gst_byte_reader_dup_data_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-dup-data-unchecked"><primary>gst_byte_reader_dup_data_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_byte_reader_dup_data_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Returns a newly-allocated copy of the data at the current data position
without checking if at least <parameter>size</parameter>
 bytes are left. Advances the current read
position by <parameter>size</parameter>
 bytes.</para>
<para>Free-function: g_free</para>
<refsect3 id="gst-byte-reader-dup-data-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-dup-data-unchecked.returns" role="returns">
<title>Returns</title>
<para> a newly-allocated copy of the
data <parameter>size</parameter>
bytes in size. Free with <link linkend="g-free"><function>g_free()</function></link> when no longer needed. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>array</acronym> length=size]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-get-data-unchecked" role="function">
<title>gst_byte_reader_get_data_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-get-data-unchecked"><primary>gst_byte_reader_get_data_unchecked</primary></indexterm>
<programlisting language="C">const <link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_byte_reader_get_data_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> size</parameter>);</programlisting>
<para>Returns a constant pointer to the current data position without checking
if at least <parameter>size</parameter>
 bytes are left. Advances the current read position by
<parameter>size</parameter>
 bytes.</para>
<refsect3 id="gst-byte-reader-get-data-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-get-data-unchecked.returns" role="returns">
<title>Returns</title>
<para> a constant pointer to the
current data position. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>array</acronym> length=size]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-byte-reader-peek-data-unchecked" role="function">
<title>gst_byte_reader_peek_data_unchecked&#160;()</title>
<indexterm zone="gst-byte-reader-peek-data-unchecked"><primary>gst_byte_reader_peek_data_unchecked</primary></indexterm>
<programlisting language="C">const <link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_byte_reader_peek_data_unchecked (<parameter><link linkend="GstByteReader"><type>GstByteReader</type></link> *reader</parameter>);</programlisting>
<refsect3 id="gst-byte-reader-peek-data-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reader</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstByteReader"><type>GstByteReader</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-byte-reader-peek-data-unchecked.returns" role="returns">
<title>Returns</title>
<para> a constant pointer to the current data position. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="gstreamer-libs-GstByteReader.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstByteReader" role="struct">
<title>GstByteReader</title>
<indexterm zone="GstByteReader"><primary>GstByteReader</primary></indexterm>
<programlisting language="C">typedef struct {
  const guint8 *data;
  guint size;

  guint byte;  /* Byte position */
} GstByteReader;
</programlisting>
<para>A byte reader instance.</para>
<refsect3 id="GstByteReader.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para>const&#160;<link linkend="guint8"><type>guint8</type></link>&#160;*<structfield id="GstByteReader.data">data</structfield>;</para></entry>
<entry role="struct_member_description"><para> Data from which the bit reader will
read. </para></entry>
<entry role="struct_member_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=size]</emphasis></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint"><type>guint</type></link>&#160;<structfield id="GstByteReader.size">size</structfield>;</para></entry>
<entry role="struct_member_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint"><type>guint</type></link>&#160;<structfield id="GstByteReader.byte">byte</structfield>;</para></entry>
<entry role="struct_member_description"><para>Current byte position</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>

</refsect1>

</refentry>
