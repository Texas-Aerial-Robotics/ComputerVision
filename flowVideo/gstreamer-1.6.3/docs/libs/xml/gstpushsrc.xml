<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstPushSrc">
<refmeta>
<refentrytitle role="top_of_page" id="GstPushSrc.top_of_page">GstPushSrc</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER-LIBS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstPushSrc</refname>
<refpurpose>Base class for push based source elements</refpurpose>
</refnamediv>

<refsect1 id="GstPushSrc.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstPushSrc-struct">GstPushSrc</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstPushSrcClass">GstPushSrcClass</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstPushSrc.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstElement">GstElement</link>
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstBaseSrc">GstBaseSrc</link>
                    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstPushSrc
</screen>
</refsect1>

<refsect1 id="GstPushSrc.includes"><title>Includes</title><synopsis>#include &lt;gst/base/gstpushsrc.h&gt;
</synopsis></refsect1>

<refsect1 id="GstPushSrc.description" role="desc">
<title role="desc.title">Description</title>
<para>This class is mostly useful for elements that cannot do
random access, or at least very slowly. The source usually
prefers to push out a fixed size buffer.</para>
<para>Subclasses usually operate in a format that is different from the
default GST_FORMAT_BYTES format of <link linkend="GstBaseSrc"><type>GstBaseSrc</type></link>.</para>
<para>Classes extending this base class will usually be scheduled
in a push based mode. If the peer accepts to operate without
offsets and within the limits of the allowed block size, this
class can operate in getrange based mode automatically. To make
this possible, the subclass should implement and override the
SCHEDULING query.</para>
<para>The subclass should extend the methods from the baseclass in
addition to the ::create method.</para>
<para>Seeking, flushing, scheduling and sync is all handled by this
base class.</para>

</refsect1>
<refsect1 id="GstPushSrc.functions_details" role="details">
<title role="details.title">Functions</title>
<para />
</refsect1>
<refsect1 id="GstPushSrc.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstPushSrc-struct" role="struct">
<title>struct GstPushSrc</title>
<indexterm zone="GstPushSrc-struct"><primary>GstPushSrc</primary></indexterm>
<programlisting language="C">struct GstPushSrc;</programlisting>
<para>The opaque <link linkend="GstPushSrc"><type>GstPushSrc</type></link> data structure.</para>
</refsect2>
<refsect2 id="GstPushSrcClass" role="struct">
<title>struct GstPushSrcClass</title>
<indexterm zone="GstPushSrcClass"><primary>GstPushSrcClass</primary></indexterm>
<programlisting language="C">struct GstPushSrcClass {
  GstBaseSrcClass parent_class;

  /* ask the subclass to create a buffer, the default implementation
   * uses alloc and fill */
  GstFlowReturn (*create) (GstPushSrc *src, GstBuffer **buf);
  /* allocate memory for a buffer */
  GstFlowReturn (*alloc)  (GstPushSrc *src, GstBuffer **buf);
  /* ask the subclass to fill a buffer */
  GstFlowReturn (*fill)   (GstPushSrc *src, GstBuffer *buf);
};
</programlisting>
<para>Subclasses can override any of the available virtual methods or not, as
needed. At the minimum, the <parameter>fill</parameter>
 method should be overridden to produce
buffers.</para>
<refsect3 id="GstPushSrcClass.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstPushSrcClass.create">create</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Ask the subclass to create a buffer. The subclass decides which
size this buffer should be. Other then that, refer to
<link linkend="GstBaseSrc"><type>GstBaseSrc</type></link><!-- -->.create() for more details. If this method is
not implemented, <parameter>alloc</parameter>
followed by <parameter>fill</parameter>
will be called.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstPushSrcClass.alloc">alloc</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Ask the subclass to allocated a buffer. The subclass decides which
size this buffer should be. The default implementation will create
a new buffer from the negotiate allcoator.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstPushSrcClass.fill">fill</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Ask the subclass to fill the buffer with data.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>

</refsect1>
<refsect1 id="GstPushSrc.see-also">
<title>See Also</title>
<para><link linkend="GstBaseSrc"><type>GstBaseSrc</type></link></para>

</refsect1>

</refentry>
