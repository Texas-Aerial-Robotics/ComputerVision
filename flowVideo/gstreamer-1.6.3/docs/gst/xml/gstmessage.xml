<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstMessage">
<refmeta>
<refentrytitle role="top_of_page" id="GstMessage.top_of_page">GstMessage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstMessage</refname>
<refpurpose>Lightweight objects to signal the application of
                    pipeline events</refpurpose>
</refnamediv>

<refsect1 id="GstMessage.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-SRC:CAPS">GST_MESSAGE_SRC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-SRC-NAME:CAPS">GST_MESSAGE_SRC_NAME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-TIMESTAMP:CAPS">GST_MESSAGE_TIMESTAMP</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-SEQNUM:CAPS">GST_MESSAGE_SEQNUM</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-TYPE:CAPS">GST_MESSAGE_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-TYPE-IS-EXTENDED:CAPS">GST_MESSAGE_TYPE_IS_EXTENDED</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MESSAGE-TYPE-NAME:CAPS">GST_MESSAGE_TYPE_NAME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-type-to-quark">gst_message_type_to_quark</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-type-get-name">gst_message_type_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-ref">gst_message_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-unref">gst_message_unref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-copy">gst_message_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-get-structure">gst_message_get_structure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-message-make-writable">gst_message_make_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-get-seqnum">gst_message_get_seqnum</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-seqnum">gst_message_set_seqnum</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-has-name">gst_message_has_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-message-is-writable">gst_message_is_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-replace">gst_message_replace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-eos">gst_message_new_eos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-error">gst_message_new_error</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-error">gst_message_parse_error</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-warning">gst_message_new_warning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-warning">gst_message_parse_warning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-info">gst_message_new_info</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-info">gst_message_parse_info</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-tag">gst_message_new_tag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-tag">gst_message_parse_tag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-buffering">gst_message_new_buffering</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-buffering">gst_message_parse_buffering</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-buffering-stats">gst_message_set_buffering_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-buffering-stats">gst_message_parse_buffering_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-state-changed">gst_message_new_state_changed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-state-changed">gst_message_parse_state_changed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-state-dirty">gst_message_new_state_dirty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-step-done">gst_message_new_step_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-step-done">gst_message_parse_step_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-clock-provide">gst_message_new_clock_provide</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-clock-provide">gst_message_parse_clock_provide</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-clock-lost">gst_message_new_clock_lost</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-clock-lost">gst_message_parse_clock_lost</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-new-clock">gst_message_new_new_clock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-new-clock">gst_message_parse_new_clock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-application">gst_message_new_application</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-element">gst_message_new_element</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-custom">gst_message_new_custom</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-segment-start">gst_message_new_segment_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-segment-start">gst_message_parse_segment_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-segment-done">gst_message_new_segment_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-segment-done">gst_message_parse_segment_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-duration-changed">gst_message_new_duration_changed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-latency">gst_message_new_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-async-start">gst_message_new_async_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-async-done">gst_message_new_async_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-async-done">gst_message_parse_async_done</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-step-start">gst_message_new_step_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-step-start">gst_message_parse_step_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-qos">gst_message_new_qos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-qos-values">gst_message_set_qos_values</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-qos-stats">gst_message_set_qos_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-qos">gst_message_parse_qos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-qos-values">gst_message_parse_qos_values</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-qos-stats">gst_message_parse_qos_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-toc">gst_message_new_toc</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-toc">gst_message_parse_toc</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-reset-time">gst_message_new_reset_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-reset-time">gst_message_parse_reset_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-stream-start">gst_message_new_stream_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-group-id">gst_message_set_group_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-group-id">gst_message_parse_group_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-structure-change">gst_message_new_structure_change</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-structure-change">gst_message_parse_structure_change</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-request-state">gst_message_new_request_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-request-state">gst_message_parse_request_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-stream-status">gst_message_new_stream_status</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-stream-status">gst_message_parse_stream_status</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-set-stream-status-object">gst_message_set_stream_status_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GValue"><returnvalue>GValue</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-get-stream-status-object">gst_message_get_stream_status_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-progress">gst_message_new_progress</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-progress">gst_message_parse_progress</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-need-context">gst_message_new_need_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-context-type">gst_message_parse_context_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-have-context">gst_message_new_have_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-have-context">gst_message_parse_have_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-device-added">gst_message_new_device_added</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-message-new-device-removed">gst_message_new_device_removed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-device-added">gst_message_parse_device_added</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-message-parse-device-removed">gst_message_parse_device_removed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstMessage.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstMessage-struct">GstMessage</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstMessageType">GstMessageType</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstStructureChangeType">GstStructureChangeType</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstStreamStatusType">GstStreamStatusType</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstProgressType">GstProgressType</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstMessage.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GBoxed">GBoxed</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstMessage
</screen>
</refsect1>

<refsect1 id="GstMessage.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstMessage.description" role="desc">
<title role="desc.title">Description</title>
<para>Messages are implemented as a subclass of <link linkend="GstMiniObject"><type>GstMiniObject</type></link> with a generic
<link linkend="GstStructure"><type>GstStructure</type></link> as the content. This allows for writing custom messages without
requiring an API change while allowing a wide range of different types
of messages.</para>
<para>Messages are posted by objects in the pipeline and are passed to the
application using the <link linkend="GstBus"><type>GstBus</type></link>.</para>
<para>The basic use pattern of posting a message on a <link linkend="GstBus"><type>GstBus</type></link> is as follows:</para>
<informalexample><programlisting><![CDATA[
  gst_bus_post (bus, gst_message_new_eos());
]]></programlisting></informalexample>
<para></para>
<para>A <link linkend="GstElement"><type>GstElement</type></link> usually posts messages on the bus provided by the parent
container using <link linkend="gst-element-post-message"><function>gst_element_post_message()</function></link>.</para>

</refsect1>
<refsect1 id="GstMessage.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="GST-MESSAGE-SRC:CAPS" role="macro">
<title>GST_MESSAGE_SRC()</title>
<indexterm zone="GST-MESSAGE-SRC:CAPS"><primary>GST_MESSAGE_SRC</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_SRC(message)        (GST_MESSAGE_CAST(message)-&gt;src)
</programlisting>
<para>Get the object that posted <parameter>message</parameter>
.</para>
<refsect3 id="GST-MESSAGE-SRC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MESSAGE-SRC-NAME:CAPS" role="macro">
<title>GST_MESSAGE_SRC_NAME()</title>
<indexterm zone="GST-MESSAGE-SRC-NAME:CAPS"><primary>GST_MESSAGE_SRC_NAME</primary></indexterm>
<programlisting language="C">#define             GST_MESSAGE_SRC_NAME(message)</programlisting>
<para>Get the name of the object that posted <parameter>message</parameter>
. Returns "(NULL)" if
the message has no source object set.</para>
<refsect3 id="GST-MESSAGE-SRC-NAME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MESSAGE-TIMESTAMP:CAPS" role="macro">
<title>GST_MESSAGE_TIMESTAMP()</title>
<indexterm zone="GST-MESSAGE-TIMESTAMP:CAPS"><primary>GST_MESSAGE_TIMESTAMP</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_TIMESTAMP(message)  (GST_MESSAGE_CAST(message)-&gt;timestamp)
</programlisting>
<para>Get the timestamp of <parameter>message</parameter>
. This is the timestamp when the message
was created.</para>
<refsect3 id="GST-MESSAGE-TIMESTAMP.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MESSAGE-SEQNUM:CAPS" role="macro">
<title>GST_MESSAGE_SEQNUM()</title>
<indexterm zone="GST-MESSAGE-SEQNUM:CAPS"><primary>GST_MESSAGE_SEQNUM</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_SEQNUM(message)     (GST_MESSAGE_CAST(message)-&gt;seqnum)
</programlisting>
<para>Get the sequence number of <parameter>message</parameter>
.</para>
<refsect3 id="GST-MESSAGE-SEQNUM.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MESSAGE-TYPE:CAPS" role="macro">
<title>GST_MESSAGE_TYPE()</title>
<indexterm zone="GST-MESSAGE-TYPE:CAPS"><primary>GST_MESSAGE_TYPE</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_TYPE(message)       (GST_MESSAGE_CAST(message)-&gt;type)
</programlisting>
<para>Get the <link linkend="GstMessageType"><type>GstMessageType</type></link> of <parameter>message</parameter>
.</para>
<refsect3 id="GST-MESSAGE-TYPE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MESSAGE-TYPE-IS-EXTENDED:CAPS" role="macro" condition="since:1.4">
<title>GST_MESSAGE_TYPE_IS_EXTENDED()</title>
<indexterm zone="GST-MESSAGE-TYPE-IS-EXTENDED:CAPS" role="1.4"><primary>GST_MESSAGE_TYPE_IS_EXTENDED</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_TYPE_IS_EXTENDED(message)       (!!(GST_MESSAGE_CAST(message)-&gt;type &amp; GST_MESSAGE_EXTENDED))
</programlisting>
<para>Check if the message is in the extended message group</para>
<refsect3 id="GST-MESSAGE-TYPE-IS-EXTENDED.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="GST-MESSAGE-TYPE-NAME:CAPS" role="macro">
<title>GST_MESSAGE_TYPE_NAME()</title>
<indexterm zone="GST-MESSAGE-TYPE-NAME:CAPS"><primary>GST_MESSAGE_TYPE_NAME</primary></indexterm>
<programlisting language="C">#define GST_MESSAGE_TYPE_NAME(message)  gst_message_type_get_name(GST_MESSAGE_TYPE(message))
</programlisting>
<para>Get a constant string representation of the <link linkend="GstMessageType"><type>GstMessageType</type></link> of <parameter>message</parameter>
.</para>
<refsect3 id="GST-MESSAGE-TYPE-NAME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-type-to-quark" role="function">
<title>gst_message_type_to_quark&#160;()</title>
<indexterm zone="gst-message-type-to-quark"><primary>gst_message_type_to_quark</primary></indexterm>
<programlisting language="C"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
gst_message_type_to_quark (<parameter><link linkend="GstMessageType"><type>GstMessageType</type></link> type</parameter>);</programlisting>
<para>Get the unique quark for the given message type.</para>
<refsect3 id="gst-message-type-to-quark.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the message type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-type-to-quark.returns" role="returns">
<title>Returns</title>
<para> the quark associated with the message type</para>
</refsect3></refsect2>
<refsect2 id="gst-message-type-get-name" role="function">
<title>gst_message_type_get_name&#160;()</title>
<indexterm zone="gst-message-type-get-name"><primary>gst_message_type_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_message_type_get_name (<parameter><link linkend="GstMessageType"><type>GstMessageType</type></link> type</parameter>);</programlisting>
<para>Get a printable name for the given message type. Do not modify or free.</para>
<refsect3 id="gst-message-type-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the message type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-type-get-name.returns" role="returns">
<title>Returns</title>
<para> a reference to the static name of the message.</para>
</refsect3></refsect2>
<refsect2 id="gst-message-ref" role="function">
<title>gst_message_ref&#160;()</title>
<indexterm zone="gst-message-ref"><primary>gst_message_ref</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_ref (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *msg</parameter>);</programlisting>
<para>Convenience macro to increase the reference count of the message.</para>
<refsect3 id="gst-message-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>the message to ref</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-ref.returns" role="returns">
<title>Returns</title>
<para> <parameter>msg</parameter>
(for convenience when doing assignments)</para>
</refsect3></refsect2>
<refsect2 id="gst-message-unref" role="function">
<title>gst_message_unref&#160;()</title>
<indexterm zone="gst-message-unref"><primary>gst_message_unref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_unref (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *msg</parameter>);</programlisting>
<para>Convenience macro to decrease the reference count of the message, possibly
freeing it.</para>
<refsect3 id="gst-message-unref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>the message to unref</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-copy" role="function">
<title>gst_message_copy&#160;()</title>
<indexterm zone="gst-message-copy"><primary>gst_message_copy</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_copy (<parameter>const <link linkend="GstMessage"><type>GstMessage</type></link> *msg</parameter>);</programlisting>
<para>Creates a copy of the message. Returns a copy of the message.</para>
<refsect3 id="gst-message-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>the message to copy</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-copy.returns" role="returns">
<title>Returns</title>
<para> a new copy of <parameter>msg</parameter>
.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-get-structure" role="function">
<title>gst_message_get_structure&#160;()</title>
<indexterm zone="gst-message-get-structure"><primary>gst_message_get_structure</primary></indexterm>
<programlisting language="C">const <link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
gst_message_get_structure (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>);</programlisting>
<para>Access the structure of the message.</para>
<refsect3 id="gst-message-get-structure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstMessage"><type>GstMessage</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-get-structure.returns" role="returns">
<title>Returns</title>
<para> The structure of the message. The structure is
still owned by the message, which means that you should not free it and
that the pointer becomes invalid when you free the message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-make-writable" role="macro">
<title>gst_message_make_writable()</title>
<indexterm zone="gst-message-make-writable"><primary>gst_message_make_writable</primary></indexterm>
<programlisting language="C">#define         gst_message_make_writable(msg)  GST_MESSAGE_CAST (gst_mini_object_make_writable (GST_MINI_OBJECT_CAST (msg)))
</programlisting>
<para>Checks if a message is writable. If not, a writable copy is made and
returned.</para>
<refsect3 id="gst-message-make-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para> the message to make writable. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-make-writable.returns" role="returns">
<title>Returns</title>
<para> a message (possibly a duplicate) that is writable.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-get-seqnum" role="function">
<title>gst_message_get_seqnum&#160;()</title>
<indexterm zone="gst-message-get-seqnum"><primary>gst_message_get_seqnum</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
gst_message_get_seqnum (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>);</programlisting>
<para>Retrieve the sequence number of a message.</para>
<para>Messages have ever-incrementing sequence numbers, which may also be set
explicitly via <link linkend="gst-message-set-seqnum"><function>gst_message_set_seqnum()</function></link>. Sequence numbers are typically used
to indicate that a message corresponds to some other set of messages or
events, for example a SEGMENT_DONE message corresponding to a SEEK event. It
is considered good practice to make this correspondence when possible, though
it is not required.</para>
<para>Note that events and messages share the same sequence number incrementor;
two events or messages will never have the same sequence number unless
that correspondence was made explicitly.</para>
<refsect3 id="gst-message-get-seqnum.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstMessage"><type>GstMessage</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-get-seqnum.returns" role="returns">
<title>Returns</title>
<para> The message's sequence number.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-message-set-seqnum" role="function">
<title>gst_message_set_seqnum&#160;()</title>
<indexterm zone="gst-message-set-seqnum"><primary>gst_message_set_seqnum</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_seqnum (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                        <parameter><link linkend="guint32"><type>guint32</type></link> seqnum</parameter>);</programlisting>
<para>Set the sequence number of a message.</para>
<para>This function might be called by the creator of a message to indicate that
the message relates to other messages or events. See <link linkend="gst-message-get-seqnum"><function>gst_message_get_seqnum()</function></link>
for more information.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-set-seqnum.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstMessage"><type>GstMessage</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>seqnum</para></entry>
<entry role="parameter_description"><para>A sequence number.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-has-name" role="function">
<title>gst_message_has_name&#160;()</title>
<indexterm zone="gst-message-has-name"><primary>gst_message_has_name</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_message_has_name (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Checks if <parameter>message</parameter>
 has the given <parameter>name</parameter>
. This function is usually used to
check the name of a custom message.</para>
<refsect3 id="gst-message-has-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstMessage"><type>GstMessage</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>name to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-has-name.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>name</parameter>
matches the name of the message structure.</para>
</refsect3></refsect2>
<refsect2 id="gst-message-is-writable" role="macro">
<title>gst_message_is_writable()</title>
<indexterm zone="gst-message-is-writable"><primary>gst_message_is_writable</primary></indexterm>
<programlisting language="C">#define         gst_message_is_writable(msg)     gst_mini_object_is_writable (GST_MINI_OBJECT_CAST (msg))
</programlisting>
<para>Tests if you can safely write into a message's structure or validly
modify the seqnum and timestamp fields.</para>
<refsect3 id="gst-message-is-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-replace" role="function">
<title>gst_message_replace&#160;()</title>
<indexterm zone="gst-message-replace"><primary>gst_message_replace</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_message_replace (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> **old_message</parameter>,
                     <parameter><link linkend="GstMessage"><type>GstMessage</type></link> *new_message</parameter>);</programlisting>
<para>Modifies a pointer to a <link linkend="GstMessage"><type>GstMessage</type></link> to point to a different <link linkend="GstMessage"><type>GstMessage</type></link>. The
modification is done atomically (so this is useful for ensuring thread safety
in some cases), and the reference counts are updated appropriately (the old
message is unreffed, the new one is reffed).</para>
<para>Either <parameter>new_message</parameter>
 or the <link linkend="GstMessage"><type>GstMessage</type></link> pointed to by <parameter>old_message</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-message-replace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>old_message</para></entry>
<entry role="parameter_description"><para> pointer to a
pointer to a <link linkend="GstMessage"><type>GstMessage</type></link> to be replaced. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>][<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>new_message</para></entry>
<entry role="parameter_description"><para> pointer to a <link linkend="GstMessage"><type>GstMessage</type></link> that will
replace the message pointed to by <parameter>old_message</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-replace.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>new_message</parameter>
was different from <parameter>old_message</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-eos" role="function">
<title>gst_message_new_eos&#160;()</title>
<indexterm zone="gst-message-new-eos"><primary>gst_message_new_eos</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_eos (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>Create a new eos message. This message is generated and posted in
the sink elements of a GstBin. The bin will only forward the EOS
message to the application if all sinks have posted an EOS message.</para>
<refsect3 id="gst-message-new-eos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-eos.returns" role="returns">
<title>Returns</title>
<para> The new eos message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-error" role="function">
<title>gst_message_new_error&#160;()</title>
<indexterm zone="gst-message-new-error"><primary>gst_message_new_error</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_error (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                       <parameter><link linkend="GError"><type>GError</type></link> *error</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *debug</parameter>);</programlisting>
<para>Create a new error message. The message will copy <parameter>error</parameter>
 and
<parameter>debug</parameter>
. This message is posted by element when a fatal event
occurred. The pipeline will probably (partially) stop. The application
receiving this message should stop the pipeline.</para>
<refsect3 id="gst-message-new-error.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para> The GError for this message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>A debugging string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-error.returns" role="returns">
<title>Returns</title>
<para> the new error message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-error" role="function">
<title>gst_message_parse_error&#160;()</title>
<indexterm zone="gst-message-parse-error"><primary>gst_message_parse_error</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_error (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                         <parameter><link linkend="GError"><type>GError</type></link> **gerror</parameter>,
                         <parameter><link linkend="gchar"><type>gchar</type></link> **debug</parameter>);</programlisting>
<para>Extracts the GError and debug string from the GstMessage. The values returned
in the output arguments are copies; the caller must free them when done.</para>
<para>Typical usage of this function might be:</para>
<informalexample><programlisting><![CDATA[
  ...
  switch (GST_MESSAGE_TYPE (msg)) {
    case GST_MESSAGE_ERROR: {
      GError *err = NULL;
      gchar *dbg_info = NULL;
      
      gst_message_parse_error (msg, &err, &dbg_info);
      g_printerr ("ERROR from element %s: %s\n",
          GST_OBJECT_NAME (msg->src), err->message);
      g_printerr ("Debugging info: %s\n", (dbg_info) ? dbg_info : "none");
      g_error_free (err);
      g_free (dbg_info);
      break;
    }
    ...
  }
  ...
]]></programlisting></informalexample>
<para></para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-error.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_ERROR.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>gerror</para></entry>
<entry role="parameter_description"><para> location for the GError. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para> location for the debug message,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-warning" role="function">
<title>gst_message_new_warning&#160;()</title>
<indexterm zone="gst-message-new-warning"><primary>gst_message_new_warning</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_warning (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                         <parameter><link linkend="GError"><type>GError</type></link> *error</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *debug</parameter>);</programlisting>
<para>Create a new warning message. The message will make copies of <parameter>error</parameter>
 and
<parameter>debug</parameter>
.</para>
<refsect3 id="gst-message-new-warning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para> The GError for this message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>A debugging string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-warning.returns" role="returns">
<title>Returns</title>
<para> The new warning message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-warning" role="function">
<title>gst_message_parse_warning&#160;()</title>
<indexterm zone="gst-message-parse-warning"><primary>gst_message_parse_warning</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_warning (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                           <parameter><link linkend="GError"><type>GError</type></link> **gerror</parameter>,
                           <parameter><link linkend="gchar"><type>gchar</type></link> **debug</parameter>);</programlisting>
<para>Extracts the GError and debug string from the GstMessage. The values returned
in the output arguments are copies; the caller must free them when done.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-warning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_WARNING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>gerror</para></entry>
<entry role="parameter_description"><para> location for the GError. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para> location for the debug message,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-info" role="function">
<title>gst_message_new_info&#160;()</title>
<indexterm zone="gst-message-new-info"><primary>gst_message_new_info</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_info (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                      <parameter><link linkend="GError"><type>GError</type></link> *error</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *debug</parameter>);</programlisting>
<para>Create a new info message. The message will make copies of <parameter>error</parameter>
 and
<parameter>debug</parameter>
.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-new-info.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para> The GError for this message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>A debugging string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-info.returns" role="returns">
<title>Returns</title>
<para> the new info message. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-info" role="function">
<title>gst_message_parse_info&#160;()</title>
<indexterm zone="gst-message-parse-info"><primary>gst_message_parse_info</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_info (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                        <parameter><link linkend="GError"><type>GError</type></link> **gerror</parameter>,
                        <parameter><link linkend="gchar"><type>gchar</type></link> **debug</parameter>);</programlisting>
<para>Extracts the GError and debug string from the GstMessage. The values returned
in the output arguments are copies; the caller must free them when done.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-info.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_INFO.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>gerror</para></entry>
<entry role="parameter_description"><para> location for the GError. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para> location for the debug message,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-tag" role="function">
<title>gst_message_new_tag&#160;()</title>
<indexterm zone="gst-message-new-tag"><primary>gst_message_new_tag</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_tag (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                     <parameter><link linkend="GstTagList"><type>GstTagList</type></link> *tag_list</parameter>);</programlisting>
<para>Create a new tag message. The message will take ownership of the tag list.
The message is posted by elements that discovered a new taglist.</para>
<refsect3 id="gst-message-new-tag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>tag_list</para></entry>
<entry role="parameter_description"><para> the tag list for the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-tag.returns" role="returns">
<title>Returns</title>
<para> the new tag message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-tag" role="function">
<title>gst_message_parse_tag&#160;()</title>
<indexterm zone="gst-message-parse-tag"><primary>gst_message_parse_tag</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_tag (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                       <parameter><link linkend="GstTagList"><type>GstTagList</type></link> **tag_list</parameter>);</programlisting>
<para>Extracts the tag list from the GstMessage. The tag list returned in the
output argument is a copy; the caller must free it when done.</para>
<para>Typical usage of this function might be:</para>
<informalexample><programlisting><![CDATA[
  ...
  switch (GST_MESSAGE_TYPE (msg)) {
    case GST_MESSAGE_TAG: {
      GstTagList *tags = NULL;
      
      gst_message_parse_tag (msg, &tags);
      g_print ("Got tags from element %s\n", GST_OBJECT_NAME (msg->src));
      handle_tags (tags);
      gst_tag_list_unref (tags);
      break;
    }
    ...
  }
  ...
]]></programlisting></informalexample>
<para></para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-tag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_TAG.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tag_list</para></entry>
<entry role="parameter_description"><para> return location for the tag-list. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out callee-allocates</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-buffering" role="function">
<title>gst_message_new_buffering&#160;()</title>
<indexterm zone="gst-message-new-buffering"><primary>gst_message_new_buffering</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_buffering (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                           <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);</programlisting>
<para>Create a new buffering message. This message can be posted by an element that
needs to buffer data before it can continue processing. <parameter>percent</parameter>
 should be a
value between 0 and 100. A value of 100 means that the buffering completed.</para>
<para>When <parameter>percent</parameter>
 is &lt; 100 the application should PAUSE a PLAYING pipeline. When
<parameter>percent</parameter>
 is 100, the application can set the pipeline (back) to PLAYING.
The application must be prepared to receive BUFFERING messages in the
PREROLLING state and may only set the pipeline to PLAYING after receiving a
message with <parameter>percent</parameter>
 set to 100, which can happen after the pipeline
completed prerolling.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-new-buffering.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>percent</para></entry>
<entry role="parameter_description"><para>The buffering percent</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-buffering.returns" role="returns">
<title>Returns</title>
<para> The new buffering message. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-buffering" role="function">
<title>gst_message_parse_buffering&#160;()</title>
<indexterm zone="gst-message-parse-buffering"><primary>gst_message_parse_buffering</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_buffering (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                             <parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);</programlisting>
<para>Extracts the buffering percent from the GstMessage. see also
<link linkend="gst-message-new-buffering"><function>gst_message_new_buffering()</function></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-buffering.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>percent</para></entry>
<entry role="parameter_description"><para> Return location for the percent. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-set-buffering-stats" role="function">
<title>gst_message_set_buffering_stats&#160;()</title>
<indexterm zone="gst-message-set-buffering-stats"><primary>gst_message_set_buffering_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_buffering_stats (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstBufferingMode"><type>GstBufferingMode</type></link> mode</parameter>,
                                 <parameter><link linkend="gint"><type>gint</type></link> avg_in</parameter>,
                                 <parameter><link linkend="gint"><type>gint</type></link> avg_out</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> buffering_left</parameter>);</programlisting>
<para>Configures the buffering stats values in <parameter>message</parameter>
.</para>
<refsect3 id="gst-message-set-buffering-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>a buffering mode </para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>avg_in</para></entry>
<entry role="parameter_description"><para>the average input rate</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>avg_out</para></entry>
<entry role="parameter_description"><para>the average output rate</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffering_left</para></entry>
<entry role="parameter_description"><para>amount of buffering time left in milliseconds</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-buffering-stats" role="function">
<title>gst_message_parse_buffering_stats&#160;()</title>
<indexterm zone="gst-message-parse-buffering-stats"><primary>gst_message_parse_buffering_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_buffering_stats (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                   <parameter><link linkend="GstBufferingMode"><type>GstBufferingMode</type></link> *mode</parameter>,
                                   <parameter><link linkend="gint"><type>gint</type></link> *avg_in</parameter>,
                                   <parameter><link linkend="gint"><type>gint</type></link> *avg_out</parameter>,
                                   <parameter><link linkend="gint64"><type>gint64</type></link> *buffering_left</parameter>);</programlisting>
<para>Extracts the buffering stats values from <parameter>message</parameter>
.</para>
<refsect3 id="gst-message-parse-buffering-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para> a buffering mode, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>avg_in</para></entry>
<entry role="parameter_description"><para> the average input rate, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>avg_out</para></entry>
<entry role="parameter_description"><para> the average output rate, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buffering_left</para></entry>
<entry role="parameter_description"><para> amount of buffering time left in
milliseconds, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-state-changed" role="function">
<title>gst_message_new_state_changed&#160;()</title>
<indexterm zone="gst-message-new-state-changed"><primary>gst_message_new_state_changed</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_state_changed (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                               <parameter><link linkend="GstState"><type>GstState</type></link> oldstate</parameter>,
                               <parameter><link linkend="GstState"><type>GstState</type></link> newstate</parameter>,
                               <parameter><link linkend="GstState"><type>GstState</type></link> pending</parameter>);</programlisting>
<para>Create a state change message. This message is posted whenever an element
changed its state.</para>
<refsect3 id="gst-message-new-state-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>oldstate</para></entry>
<entry role="parameter_description"><para>the previous state</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>newstate</para></entry>
<entry role="parameter_description"><para>the new (current) state</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pending</para></entry>
<entry role="parameter_description"><para>the pending (target) state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-state-changed.returns" role="returns">
<title>Returns</title>
<para> the new state change message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-state-changed" role="function">
<title>gst_message_parse_state_changed&#160;()</title>
<indexterm zone="gst-message-parse-state-changed"><primary>gst_message_parse_state_changed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_state_changed (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstState"><type>GstState</type></link> *oldstate</parameter>,
                                 <parameter><link linkend="GstState"><type>GstState</type></link> *newstate</parameter>,
                                 <parameter><link linkend="GstState"><type>GstState</type></link> *pending</parameter>);</programlisting>
<para>Extracts the old and new states from the GstMessage.</para>
<para>Typical usage of this function might be:</para>
<informalexample><programlisting><![CDATA[
  ...
  switch (GST_MESSAGE_TYPE (msg)) {
    case GST_MESSAGE_STATE_CHANGED: {
      GstState old_state, new_state;
      
      gst_message_parse_state_changed (msg, &old_state, &new_state, NULL);
      g_print ("Element %s changed state from %s to %s.\n",
          GST_OBJECT_NAME (msg->src),
          gst_element_state_get_name (old_state),
          gst_element_state_get_name (new_state));
      break;
    }
    ...
  }
  ...
]]></programlisting></informalexample>
<para></para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-state-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STATE_CHANGED</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>oldstate</para></entry>
<entry role="parameter_description"><para> the previous state, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>newstate</para></entry>
<entry role="parameter_description"><para> the new (current) state, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>pending</para></entry>
<entry role="parameter_description"><para> the pending (target) state, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-state-dirty" role="function">
<title>gst_message_new_state_dirty&#160;()</title>
<indexterm zone="gst-message-new-state-dirty"><primary>gst_message_new_state_dirty</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_state_dirty (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>Create a state dirty message. This message is posted whenever an element
changed its state asynchronously and is used internally to update the
states of container objects.</para>
<refsect3 id="gst-message-new-state-dirty.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-state-dirty.returns" role="returns">
<title>Returns</title>
<para> the new state dirty message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-step-done" role="function">
<title>gst_message_new_step_done&#160;()</title>
<indexterm zone="gst-message-new-step-done"><primary>gst_message_new_step_done</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_step_done (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                           <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> amount</parameter>,
                           <parameter><link linkend="gdouble"><type>gdouble</type></link> rate</parameter>,
                           <parameter><link linkend="gboolean"><type>gboolean</type></link> flush</parameter>,
                           <parameter><link linkend="gboolean"><type>gboolean</type></link> intermediate</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> duration</parameter>,
                           <parameter><link linkend="gboolean"><type>gboolean</type></link> eos</parameter>);</programlisting>
<para>This message is posted by elements when they complete a part, when <parameter>intermediate</parameter>
 set
to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, or a complete step operation.</para>
<para><parameter>duration</parameter>
 will contain the amount of time (in GST_FORMAT_TIME) of the stepped
<parameter>amount</parameter>
 of media in format <parameter>format</parameter>
.</para>
<refsect3 id="gst-message-new-step-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the format of <parameter>amount</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>amount</para></entry>
<entry role="parameter_description"><para>the amount of stepped data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para>the rate of the stepped amount</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flush</para></entry>
<entry role="parameter_description"><para>is this an flushing step</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>intermediate</para></entry>
<entry role="parameter_description"><para>is this an intermediate step</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para>the duration of the data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>eos</para></entry>
<entry role="parameter_description"><para>the step caused EOS</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-step-done.returns" role="returns">
<title>Returns</title>
<para> the new step_done message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-step-done" role="function">
<title>gst_message_parse_step_done&#160;()</title>
<indexterm zone="gst-message-parse-step-done"><primary>gst_message_parse_step_done</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_step_done (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                             <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                             <parameter><link linkend="guint64"><type>guint64</type></link> *amount</parameter>,
                             <parameter><link linkend="gdouble"><type>gdouble</type></link> *rate</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> *flush</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> *intermediate</parameter>,
                             <parameter><link linkend="guint64"><type>guint64</type></link> *duration</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> *eos</parameter>);</programlisting>
<para>Extract the values the step_done message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-step-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STEP_DONE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> result location for the format. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>amount</para></entry>
<entry role="parameter_description"><para> result location for the amount. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para> result location for the rate. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flush</para></entry>
<entry role="parameter_description"><para> result location for the flush flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>intermediate</para></entry>
<entry role="parameter_description"><para> result location for the intermediate flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> result location for the duration. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>eos</para></entry>
<entry role="parameter_description"><para> result location for the EOS flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-clock-provide" role="function">
<title>gst_message_new_clock_provide&#160;()</title>
<indexterm zone="gst-message-new-clock-provide"><primary>gst_message_new_clock_provide</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_clock_provide (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                               <parameter><link linkend="GstClock"><type>GstClock</type></link> *clock</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> ready</parameter>);</programlisting>
<para>Create a clock provide message. This message is posted whenever an
element is ready to provide a clock or lost its ability to provide
a clock (maybe because it paused or became EOS).</para>
<para>This message is mainly used internally to manage the clock
selection.</para>
<refsect3 id="gst-message-new-clock-provide.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> the clock it provides. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>ready</para></entry>
<entry role="parameter_description"><para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the sender can provide a clock</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-clock-provide.returns" role="returns">
<title>Returns</title>
<para> the new provide clock message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-clock-provide" role="function">
<title>gst_message_parse_clock_provide&#160;()</title>
<indexterm zone="gst-message-parse-clock-provide"><primary>gst_message_parse_clock_provide</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_clock_provide (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstClock"><type>GstClock</type></link> **clock</parameter>,
                                 <parameter><link linkend="gboolean"><type>gboolean</type></link> *ready</parameter>);</programlisting>
<para>Extracts the clock and ready flag from the GstMessage.
The clock object returned remains valid until the message is freed.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-clock-provide.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_CLOCK_PROVIDE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> a pointer to  hold a clock
object, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>ready</para></entry>
<entry role="parameter_description"><para> a pointer to hold the ready flag, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-clock-lost" role="function">
<title>gst_message_new_clock_lost&#160;()</title>
<indexterm zone="gst-message-new-clock-lost"><primary>gst_message_new_clock_lost</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_clock_lost (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                            <parameter><link linkend="GstClock"><type>GstClock</type></link> *clock</parameter>);</programlisting>
<para>Create a clock lost message. This message is posted whenever the
clock is not valid anymore.</para>
<para>If this message is posted by the pipeline, the pipeline will
select a new clock again when it goes to PLAYING. It might therefore
be needed to set the pipeline to PAUSED and PLAYING again.</para>
<refsect3 id="gst-message-new-clock-lost.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> the clock that was lost. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-clock-lost.returns" role="returns">
<title>Returns</title>
<para> The new clock lost message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-clock-lost" role="function">
<title>gst_message_parse_clock_lost&#160;()</title>
<indexterm zone="gst-message-parse-clock-lost"><primary>gst_message_parse_clock_lost</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_clock_lost (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                              <parameter><link linkend="GstClock"><type>GstClock</type></link> **clock</parameter>);</programlisting>
<para>Extracts the lost clock from the GstMessage.
The clock object returned remains valid until the message is freed.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-clock-lost.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_CLOCK_LOST.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> a pointer to hold the lost clock. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-new-clock" role="function">
<title>gst_message_new_new_clock&#160;()</title>
<indexterm zone="gst-message-new-new-clock"><primary>gst_message_new_new_clock</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_new_clock (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                           <parameter><link linkend="GstClock"><type>GstClock</type></link> *clock</parameter>);</programlisting>
<para>Create a new clock message. This message is posted whenever the
pipeline selects a new clock for the pipeline.</para>
<refsect3 id="gst-message-new-new-clock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> the new selected clock. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-new-clock.returns" role="returns">
<title>Returns</title>
<para> The new new clock message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-new-clock" role="function">
<title>gst_message_parse_new_clock&#160;()</title>
<indexterm zone="gst-message-parse-new-clock"><primary>gst_message_parse_new_clock</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_new_clock (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                             <parameter><link linkend="GstClock"><type>GstClock</type></link> **clock</parameter>);</programlisting>
<para>Extracts the new clock from the GstMessage.
The clock object returned remains valid until the message is freed.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-new-clock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_NEW_CLOCK.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para> a pointer to hold the selected
new clock. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-application" role="function">
<title>gst_message_new_application&#160;()</title>
<indexterm zone="gst-message-new-application"><primary>gst_message_new_application</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_application (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                             <parameter><link linkend="GstStructure"><type>GstStructure</type></link> *structure</parameter>);</programlisting>
<para>Create a new application-typed message. GStreamer will never create these
messages; they are a gift from us to you. Enjoy.</para>
<refsect3 id="gst-message-new-application.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>structure</para></entry>
<entry role="parameter_description"><para> the structure for the message. The message
will take ownership of the structure. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-application.returns" role="returns">
<title>Returns</title>
<para> The new application message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-element" role="function">
<title>gst_message_new_element&#160;()</title>
<indexterm zone="gst-message-new-element"><primary>gst_message_new_element</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_element (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                         <parameter><link linkend="GstStructure"><type>GstStructure</type></link> *structure</parameter>);</programlisting>
<para>Create a new element-specific message. This is meant as a generic way of
allowing one-way communication from an element to an application, for example
"the firewire cable was unplugged". The format of the message should be
documented in the element's documentation. The structure field can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-message-new-element.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>structure</para></entry>
<entry role="parameter_description"><para> The structure for the
message. The message will take ownership of the structure. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-element.returns" role="returns">
<title>Returns</title>
<para> The new element message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-custom" role="function">
<title>gst_message_new_custom&#160;()</title>
<indexterm zone="gst-message-new-custom"><primary>gst_message_new_custom</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_custom (<parameter><link linkend="GstMessageType"><type>GstMessageType</type></link> type</parameter>,
                        <parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                        <parameter><link linkend="GstStructure"><type>GstStructure</type></link> *structure</parameter>);</programlisting>
<para>Create a new custom-typed message. This can be used for anything not
handled by other message-specific functions to pass a message to the
app. The structure field can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-message-new-custom.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstMessageType"><type>GstMessageType</type></link> to distinguish messages</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>structure</para></entry>
<entry role="parameter_description"><para> the structure for the
message. The message will take ownership of the structure. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-custom.returns" role="returns">
<title>Returns</title>
<para> The new message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-segment-start" role="function">
<title>gst_message_new_segment_start&#160;()</title>
<indexterm zone="gst-message-new-segment-start"><primary>gst_message_new_segment_start</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_segment_start (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                               <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> position</parameter>);</programlisting>
<para>Create a new segment message. This message is posted by elements that
start playback of a segment as a result of a segment seek. This message
is not received by the application but is used for maintenance reasons in
container elements.</para>
<refsect3 id="gst-message-new-segment-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>The format of the position being played</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>position</para></entry>
<entry role="parameter_description"><para>The position of the segment being played</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-segment-start.returns" role="returns">
<title>Returns</title>
<para> the new segment start message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-segment-start" role="function">
<title>gst_message_parse_segment_start&#160;()</title>
<indexterm zone="gst-message-parse-segment-start"><primary>gst_message_parse_segment_start</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_segment_start (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> *position</parameter>);</programlisting>
<para>Extracts the position and format from the segment start message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-segment-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_SEGMENT_START.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> Result location for the format, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>position</para></entry>
<entry role="parameter_description"><para> Result location for the position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-segment-done" role="function">
<title>gst_message_new_segment_done&#160;()</title>
<indexterm zone="gst-message-new-segment-done"><primary>gst_message_new_segment_done</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_segment_done (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                              <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                              <parameter><link linkend="gint64"><type>gint64</type></link> position</parameter>);</programlisting>
<para>Create a new segment done message. This message is posted by elements that
finish playback of a segment as a result of a segment seek. This message
is received by the application after all elements that posted a segment_start
have posted the segment_done.</para>
<refsect3 id="gst-message-new-segment-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>The format of the position being done</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>position</para></entry>
<entry role="parameter_description"><para>The position of the segment being done</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-segment-done.returns" role="returns">
<title>Returns</title>
<para> the new segment done message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-segment-done" role="function">
<title>gst_message_parse_segment_done&#160;()</title>
<indexterm zone="gst-message-parse-segment-done"><primary>gst_message_parse_segment_done</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_segment_done (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                                <parameter><link linkend="gint64"><type>gint64</type></link> *position</parameter>);</programlisting>
<para>Extracts the position and format from the segment done message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-segment-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_SEGMENT_DONE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> Result location for the format, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>position</para></entry>
<entry role="parameter_description"><para> Result location for the position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-duration-changed" role="function">
<title>gst_message_new_duration_changed&#160;()</title>
<indexterm zone="gst-message-new-duration-changed"><primary>gst_message_new_duration_changed</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_duration_changed (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>Create a new duration changed message. This message is posted by elements
that know the duration of a stream when the duration changes. This message
is received by bins and is used to calculate the total duration of a
pipeline. Elements may post a duration message with a duration of
GST_CLOCK_TIME_NONE to indicate that the duration has changed and the 
cached duration should be discarded. The new duration can then be 
retrieved via a query.</para>
<refsect3 id="gst-message-new-duration-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-duration-changed.returns" role="returns">
<title>Returns</title>
<para> The new duration-changed message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-latency" role="function">
<title>gst_message_new_latency&#160;()</title>
<indexterm zone="gst-message-new-latency"><primary>gst_message_new_latency</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_latency (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>This message can be posted by elements when their latency requirements have
changed.</para>
<refsect3 id="gst-message-new-latency.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-latency.returns" role="returns">
<title>Returns</title>
<para> The new latency message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-async-start" role="function">
<title>gst_message_new_async_start&#160;()</title>
<indexterm zone="gst-message-new-async-start"><primary>gst_message_new_async_start</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_async_start (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>This message is posted by elements when they start an ASYNC state change.</para>
<refsect3 id="gst-message-new-async-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-async-start.returns" role="returns">
<title>Returns</title>
<para> The new async_start message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-async-done" role="function">
<title>gst_message_new_async_done&#160;()</title>
<indexterm zone="gst-message-new-async-done"><primary>gst_message_new_async_done</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_async_done (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                            <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> running_time</parameter>);</programlisting>
<para>The message is posted when elements completed an ASYNC state change.
<parameter>running_time</parameter>
 contains the time of the desired running_time when this
elements goes to PLAYING. A value of <link linkend="GST-CLOCK-TIME-NONE:CAPS"><type>GST_CLOCK_TIME_NONE</type></link> for <parameter>running_time</parameter>

means that the element has no clock interaction and thus doesn't care about
the running_time of the pipeline.</para>
<refsect3 id="gst-message-new-async-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para>the desired running_time</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-async-done.returns" role="returns">
<title>Returns</title>
<para> The new async_done message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-async-done" role="function">
<title>gst_message_parse_async_done&#160;()</title>
<indexterm zone="gst-message-parse-async-done"><primary>gst_message_parse_async_done</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_async_done (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                              <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> *running_time</parameter>);</programlisting>
<para>Extract the running_time from the async_done message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-async-done.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_ASYNC_DONE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para> Result location for the running_time or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-step-start" role="function">
<title>gst_message_new_step_start&#160;()</title>
<indexterm zone="gst-message-new-step-start"><primary>gst_message_new_step_start</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_step_start (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> active</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                            <parameter><link linkend="guint64"><type>guint64</type></link> amount</parameter>,
                            <parameter><link linkend="gdouble"><type>gdouble</type></link> rate</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> flush</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> intermediate</parameter>);</programlisting>
<para>This message is posted by elements when they accept or activate a new step
event for <parameter>amount</parameter>
 in <parameter>format</parameter>
. </para>
<para><parameter>active</parameter>
 is set to <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> when the element accepted the new step event and has
queued it for execution in the streaming threads.</para>
<para><parameter>active</parameter>
 is set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when the element has activated the step operation and
is now ready to start executing the step in the streaming thread. After this
message is emitted, the application can queue a new step operation in the
element.</para>
<refsect3 id="gst-message-new-step-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>active</para></entry>
<entry role="parameter_description"><para>if the step is active or queued</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the format of <parameter>amount</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>amount</para></entry>
<entry role="parameter_description"><para>the amount of stepped data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para>the rate of the stepped amount</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flush</para></entry>
<entry role="parameter_description"><para>is this an flushing step</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>intermediate</para></entry>
<entry role="parameter_description"><para>is this an intermediate step</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-step-start.returns" role="returns">
<title>Returns</title>
<para> The new step_start message. </para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-step-start" role="function">
<title>gst_message_parse_step_start&#160;()</title>
<indexterm zone="gst-message-parse-step-start"><primary>gst_message_parse_step_start</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_step_start (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> *active</parameter>,
                              <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                              <parameter><link linkend="guint64"><type>guint64</type></link> *amount</parameter>,
                              <parameter><link linkend="gdouble"><type>gdouble</type></link> *rate</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> *flush</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> *intermediate</parameter>);</programlisting>
<para>Extract the values from step_start message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-step-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STEP_DONE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>active</para></entry>
<entry role="parameter_description"><para> result location for the active flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> result location for the format. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>amount</para></entry>
<entry role="parameter_description"><para> result location for the amount. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para> result location for the rate. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flush</para></entry>
<entry role="parameter_description"><para> result location for the flush flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>intermediate</para></entry>
<entry role="parameter_description"><para> result location for the intermediate flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-qos" role="function">
<title>gst_message_new_qos&#160;()</title>
<indexterm zone="gst-message-new-qos"><primary>gst_message_new_qos</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_qos (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                     <parameter><link linkend="gboolean"><type>gboolean</type></link> live</parameter>,
                     <parameter><link linkend="guint64"><type>guint64</type></link> running_time</parameter>,
                     <parameter><link linkend="guint64"><type>guint64</type></link> stream_time</parameter>,
                     <parameter><link linkend="guint64"><type>guint64</type></link> timestamp</parameter>,
                     <parameter><link linkend="guint64"><type>guint64</type></link> duration</parameter>);</programlisting>
<para>A QOS message is posted on the bus whenever an element decides to drop a
buffer because of QoS reasons or whenever it changes its processing strategy
because of QoS reasons (quality adjustments such as processing at lower
accuracy).</para>
<para>This message can be posted by an element that performs synchronisation against the
clock (live) or it could be dropped by an element that performs QoS because of QOS
events received from a downstream element (!live).</para>
<para><parameter>running_time</parameter>
, <parameter>stream_time</parameter>
, <parameter>timestamp</parameter>
, <parameter>duration</parameter>
 should be set to the
respective running-time, stream-time, timestamp and duration of the (dropped)
buffer that generated the QoS event. Values can be left to
GST_CLOCK_TIME_NONE when unknown.</para>
<refsect3 id="gst-message-new-qos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>live</para></entry>
<entry role="parameter_description"><para>if the message was generated by a live element</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para>the running time of the buffer that generated the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stream_time</para></entry>
<entry role="parameter_description"><para>the stream time of the buffer that generated the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timestamp</para></entry>
<entry role="parameter_description"><para>the timestamps of the buffer that generated the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para>the duration of the buffer that generated the message</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-qos.returns" role="returns">
<title>Returns</title>
<para> The new qos message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-set-qos-values" role="function">
<title>gst_message_set_qos_values&#160;()</title>
<indexterm zone="gst-message-set-qos-values"><primary>gst_message_set_qos_values</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_qos_values (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                            <parameter><link linkend="gint64"><type>gint64</type></link> jitter</parameter>,
                            <parameter><link linkend="gdouble"><type>gdouble</type></link> proportion</parameter>,
                            <parameter><link linkend="gint"><type>gint</type></link> quality</parameter>);</programlisting>
<para>Set the QoS values that have been calculated/analysed from the QoS data</para>
<para>MT safe.</para>
<refsect3 id="gst-message-set-qos-values.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_QOS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>jitter</para></entry>
<entry role="parameter_description"><para>The difference of the running-time against the deadline.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>proportion</para></entry>
<entry role="parameter_description"><para>Long term prediction of the ideal rate relative to normal rate
to get optimal quality.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>quality</para></entry>
<entry role="parameter_description"><para>An element dependent integer value that specifies the current
quality level of the element. The default maximum quality is 1000000.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-set-qos-stats" role="function">
<title>gst_message_set_qos_stats&#160;()</title>
<indexterm zone="gst-message-set-qos-stats"><primary>gst_message_set_qos_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_qos_stats (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                           <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> processed</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> dropped</parameter>);</programlisting>
<para>Set the QoS stats representing the history of the current continuous pipeline
playback period.</para>
<para>When <parameter>format</parameter>
 is <parameter>GST_FORMAT_UNDEFINED</parameter>
 both <parameter>dropped</parameter>
 and <parameter>processed</parameter>
 are
invalid. Values of -1 for either <parameter>processed</parameter>
 or <parameter>dropped</parameter>
 mean unknown values.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-set-qos-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_QOS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>Units of the 'processed' and 'dropped' fields. Video sinks and video
filters will use GST_FORMAT_BUFFERS (frames). Audio sinks and audio filters
will likely use GST_FORMAT_DEFAULT (samples).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>processed</para></entry>
<entry role="parameter_description"><para>Total number of units correctly processed since the last state
change to READY or a flushing operation.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dropped</para></entry>
<entry role="parameter_description"><para>Total number of units dropped since the last state change to READY
or a flushing operation.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-qos" role="function">
<title>gst_message_parse_qos&#160;()</title>
<indexterm zone="gst-message-parse-qos"><primary>gst_message_parse_qos</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_qos (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                       <parameter><link linkend="gboolean"><type>gboolean</type></link> *live</parameter>,
                       <parameter><link linkend="guint64"><type>guint64</type></link> *running_time</parameter>,
                       <parameter><link linkend="guint64"><type>guint64</type></link> *stream_time</parameter>,
                       <parameter><link linkend="guint64"><type>guint64</type></link> *timestamp</parameter>,
                       <parameter><link linkend="guint64"><type>guint64</type></link> *duration</parameter>);</programlisting>
<para>Extract the timestamps and live status from the QoS message.</para>
<para>The returned values give the running_time, stream_time, timestamp and
duration of the dropped buffer. Values of GST_CLOCK_TIME_NONE mean unknown
values.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-qos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_QOS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>live</para></entry>
<entry role="parameter_description"><para> if the message was generated by a live element. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para> the running time of the buffer that
generated the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>stream_time</para></entry>
<entry role="parameter_description"><para> the stream time of the buffer that
generated the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>timestamp</para></entry>
<entry role="parameter_description"><para> the timestamps of the buffer that
generated the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> the duration of the buffer that
generated the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-qos-values" role="function">
<title>gst_message_parse_qos_values&#160;()</title>
<indexterm zone="gst-message-parse-qos-values"><primary>gst_message_parse_qos_values</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_qos_values (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                              <parameter><link linkend="gint64"><type>gint64</type></link> *jitter</parameter>,
                              <parameter><link linkend="gdouble"><type>gdouble</type></link> *proportion</parameter>,
                              <parameter><link linkend="gint"><type>gint</type></link> *quality</parameter>);</programlisting>
<para>Extract the QoS values that have been calculated/analysed from the QoS data</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-qos-values.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_QOS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>jitter</para></entry>
<entry role="parameter_description"><para> The difference of the running-time against
the deadline. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>proportion</para></entry>
<entry role="parameter_description"><para> Long term prediction of the ideal rate
relative to normal rate to get optimal quality. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>quality</para></entry>
<entry role="parameter_description"><para> An element dependent integer value that
specifies the current quality level of the element. The default
maximum quality is 1000000. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-qos-stats" role="function">
<title>gst_message_parse_qos_stats&#160;()</title>
<indexterm zone="gst-message-parse-qos-stats"><primary>gst_message_parse_qos_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_qos_stats (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                             <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                             <parameter><link linkend="guint64"><type>guint64</type></link> *processed</parameter>,
                             <parameter><link linkend="guint64"><type>guint64</type></link> *dropped</parameter>);</programlisting>
<para>Extract the QoS stats representing the history of the current continuous
pipeline playback period.</para>
<para>When <parameter>format</parameter>
 is <parameter>GST_FORMAT_UNDEFINED</parameter>
 both <parameter>dropped</parameter>
 and <parameter>processed</parameter>
 are
invalid. Values of -1 for either <parameter>processed</parameter>
 or <parameter>dropped</parameter>
 mean unknown values.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-qos-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_QOS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> Units of the 'processed' and 'dropped' fields.
Video sinks and video filters will use GST_FORMAT_BUFFERS (frames).
Audio sinks and audio filters will likely use GST_FORMAT_DEFAULT
(samples). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>processed</para></entry>
<entry role="parameter_description"><para> Total number of units correctly processed
since the last state change to READY or a flushing operation. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dropped</para></entry>
<entry role="parameter_description"><para> Total number of units dropped since the last
state change to READY or a flushing operation. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-toc" role="function">
<title>gst_message_new_toc&#160;()</title>
<indexterm zone="gst-message-new-toc"><primary>gst_message_new_toc</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_toc (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                     <parameter><link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>,
                     <parameter><link linkend="gboolean"><type>gboolean</type></link> updated</parameter>);</programlisting>
<para>Create a new TOC message. The message is posted by elements
that discovered or updated a TOC.</para>
<refsect3 id="gst-message-new-toc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>the object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para> <link linkend="GstToc"><type>GstToc</type></link> structure for the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>updated</para></entry>
<entry role="parameter_description"><para>whether TOC was updated or not.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-toc.returns" role="returns">
<title>Returns</title>
<para> a new TOC message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-toc" role="function">
<title>gst_message_parse_toc&#160;()</title>
<indexterm zone="gst-message-parse-toc"><primary>gst_message_parse_toc</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_toc (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                       <parameter><link linkend="GstToc"><type>GstToc</type></link> **toc</parameter>,
                       <parameter><link linkend="gboolean"><type>gboolean</type></link> *updated</parameter>);</programlisting>
<para>Extract the TOC from the <link linkend="GstMessage"><type>GstMessage</type></link>. The TOC returned in the
output argument is a copy; the caller must free it with
<link linkend="gst-toc-unref"><function>gst_toc_unref()</function></link> when done.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-toc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_TOC.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para> return location for the TOC. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>updated</para></entry>
<entry role="parameter_description"><para> return location for the updated flag. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-reset-time" role="function">
<title>gst_message_new_reset_time&#160;()</title>
<indexterm zone="gst-message-new-reset-time"><primary>gst_message_new_reset_time</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_reset_time (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                            <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> running_time</parameter>);</programlisting>
<para>This message is posted when the pipeline running-time should be reset to
<parameter>running_time</parameter>
, like after a flushing seek.</para>
<refsect3 id="gst-message-new-reset-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para>the requested running-time</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-reset-time.returns" role="returns">
<title>Returns</title>
<para> The new reset_time message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-reset-time" role="function">
<title>gst_message_parse_reset_time&#160;()</title>
<indexterm zone="gst-message-parse-reset-time"><primary>gst_message_parse_reset_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_reset_time (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                              <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> *running_time</parameter>);</programlisting>
<para>Extract the running-time from the RESET_TIME message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-reset-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_RESET_TIME.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>running_time</para></entry>
<entry role="parameter_description"><para> Result location for the running_time or
<link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-stream-start" role="function">
<title>gst_message_new_stream_start&#160;()</title>
<indexterm zone="gst-message-new-stream-start"><primary>gst_message_new_stream_start</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_stream_start (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>);</programlisting>
<para>Create a new stream_start message. This message is generated and posted in
the sink elements of a GstBin. The bin will only forward the STREAM_START
message to the application if all sinks have posted an STREAM_START message.</para>
<refsect3 id="gst-message-new-stream-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-stream-start.returns" role="returns">
<title>Returns</title>
<para> The new stream_start message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-set-group-id" role="function" condition="since:1.2">
<title>gst_message_set_group_id&#160;()</title>
<indexterm zone="gst-message-set-group-id" role="1.2"><primary>gst_message_set_group_id</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_group_id (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> group_id</parameter>);</programlisting>
<para>Sets the group id on the stream-start message.</para>
<para>All streams that have the same group id are supposed to be played
together, i.e. all streams inside a container file should have the
same group id but different stream ids. The group id should change
each time the stream is started, resulting in different group ids
each time a file is played for example.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-set-group-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>group_id</para></entry>
<entry role="parameter_description"><para>the group id</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-parse-group-id" role="function" condition="since:1.2">
<title>gst_message_parse_group_id&#160;()</title>
<indexterm zone="gst-message-parse-group-id" role="1.2"><primary>gst_message_parse_group_id</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_message_parse_group_id (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                            <parameter><link linkend="guint"><type>guint</type></link> *group_id</parameter>);</programlisting>
<para>Extract the group from the STREAM_START message.</para>
<refsect3 id="gst-message-parse-group-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STREAM_START.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>group_id</para></entry>
<entry role="parameter_description"><para> Result location for the group id or
<link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-parse-group-id.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the message had a group id set, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise</para>
<para>MT safe.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-new-structure-change" role="function">
<title>gst_message_new_structure_change&#160;()</title>
<indexterm zone="gst-message-new-structure-change"><primary>gst_message_new_structure_change</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_structure_change (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                                  <parameter><link linkend="GstStructureChangeType"><type>GstStructureChangeType</type></link> type</parameter>,
                                  <parameter><link linkend="GstElement"><type>GstElement</type></link> *owner</parameter>,
                                  <parameter><link linkend="gboolean"><type>gboolean</type></link> busy</parameter>);</programlisting>
<para>Create a new structure change message. This message is posted when the
structure of a pipeline is in the process of being changed, for example
when pads are linked or unlinked.</para>
<para><parameter>src</parameter>
 should be the sinkpad that unlinked or linked.</para>
<refsect3 id="gst-message-new-structure-change.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>The change type.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>owner</para></entry>
<entry role="parameter_description"><para> The owner element of <parameter>src</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>busy</para></entry>
<entry role="parameter_description"><para>Whether the structure change is busy.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-structure-change.returns" role="returns">
<title>Returns</title>
<para> the new structure change message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-structure-change" role="function">
<title>gst_message_parse_structure_change&#160;()</title>
<indexterm zone="gst-message-parse-structure-change"><primary>gst_message_parse_structure_change</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_structure_change (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                    <parameter><link linkend="GstStructureChangeType"><type>GstStructureChangeType</type></link> *type</parameter>,
                                    <parameter><link linkend="GstElement"><type>GstElement</type></link> **owner</parameter>,
                                    <parameter><link linkend="gboolean"><type>gboolean</type></link> *busy</parameter>);</programlisting>
<para>Extracts the change type and completion status from the GstMessage.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-structure-change.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STRUCTURE_CHANGE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para> A pointer to hold the change type. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>owner</para></entry>
<entry role="parameter_description"><para> The owner element of the
message source. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>busy</para></entry>
<entry role="parameter_description"><para> a pointer to hold whether the change is in
progress or has been completed. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-request-state" role="function">
<title>gst_message_new_request_state&#160;()</title>
<indexterm zone="gst-message-new-request-state"><primary>gst_message_new_request_state</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_request_state (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                               <parameter><link linkend="GstState"><type>GstState</type></link> state</parameter>);</programlisting>
<para>This message can be posted by elements when they want to have their state
changed. A typical use case would be an audio server that wants to pause the
pipeline because a higher priority stream is being played.</para>
<refsect3 id="gst-message-new-request-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para>The new requested state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-request-state.returns" role="returns">
<title>Returns</title>
<para> the new request state message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-request-state" role="function">
<title>gst_message_parse_request_state&#160;()</title>
<indexterm zone="gst-message-parse-request-state"><primary>gst_message_parse_request_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_request_state (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstState"><type>GstState</type></link> *state</parameter>);</programlisting>
<para>Extract the requested state from the request_state message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-request-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_REQUEST_STATE.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para> Result location for the requested state or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-stream-status" role="function">
<title>gst_message_new_stream_status&#160;()</title>
<indexterm zone="gst-message-new-stream-status"><primary>gst_message_new_stream_status</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_stream_status (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                               <parameter><link linkend="GstStreamStatusType"><type>GstStreamStatusType</type></link> type</parameter>,
                               <parameter><link linkend="GstElement"><type>GstElement</type></link> *owner</parameter>);</programlisting>
<para>Create a new stream status message. This message is posted when a streaming
thread is created/destroyed or when the state changed.</para>
<refsect3 id="gst-message-new-stream-status.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>The stream status type.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>owner</para></entry>
<entry role="parameter_description"><para> the owner element of <parameter>src</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-stream-status.returns" role="returns">
<title>Returns</title>
<para> the new stream status message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-stream-status" role="function">
<title>gst_message_parse_stream_status&#160;()</title>
<indexterm zone="gst-message-parse-stream-status"><primary>gst_message_parse_stream_status</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_stream_status (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                 <parameter><link linkend="GstStreamStatusType"><type>GstStreamStatusType</type></link> *type</parameter>,
                                 <parameter><link linkend="GstElement"><type>GstElement</type></link> **owner</parameter>);</programlisting>
<para>Extracts the stream status type and owner the GstMessage. The returned
owner remains valid for as long as the reference to <parameter>message</parameter>
 is valid and
should thus not be unreffed.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-stream-status.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STREAM_STATUS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para> A pointer to hold the status type. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>owner</para></entry>
<entry role="parameter_description"><para> The owner element of the message source. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-set-stream-status-object" role="function">
<title>gst_message_set_stream_status_object&#160;()</title>
<indexterm zone="gst-message-set-stream-status-object"><primary>gst_message_set_stream_status_object</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_set_stream_status_object (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                      <parameter>const <link linkend="GValue"><type>GValue</type></link> *object</parameter>);</programlisting>
<para>Configures the object handling the streaming thread. This is usually a
GstTask object but other objects might be added in the future.</para>
<refsect3 id="gst-message-set-stream-status-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STREAM_STATUS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>the object controlling the streaming</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-get-stream-status-object" role="function">
<title>gst_message_get_stream_status_object&#160;()</title>
<indexterm zone="gst-message-get-stream-status-object"><primary>gst_message_get_stream_status_object</primary></indexterm>
<programlisting language="C">const <link linkend="GValue"><returnvalue>GValue</returnvalue></link>&#160;*
gst_message_get_stream_status_object (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>);</programlisting>
<para>Extracts the object managing the streaming thread from <parameter>message</parameter>
.</para>
<refsect3 id="gst-message-get-stream-status-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_STREAM_STATUS.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-get-stream-status-object.returns" role="returns">
<title>Returns</title>
<para> a GValue containing the object that manages the streaming thread.
This object is usually of type GstTask but other types can be added in the
future. The object remains valid as long as <parameter>message</parameter>
is valid.</para>
</refsect3></refsect2>
<refsect2 id="gst-message-new-progress" role="function">
<title>gst_message_new_progress&#160;()</title>
<indexterm zone="gst-message-new-progress"><primary>gst_message_new_progress</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_progress (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                          <parameter><link linkend="GstProgressType"><type>GstProgressType</type></link> type</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *code</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *text</parameter>);</programlisting>
<para>Progress messages are posted by elements when they use an asynchronous task
to perform actions triggered by a state change.</para>
<para><parameter>code</parameter>
 contains a well defined string describing the action.
<parameter>test</parameter>
 should contain a user visible string detailing the current action.</para>
<refsect3 id="gst-message-new-progress.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The object originating the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstProgressType"><type>GstProgressType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para>a progress code</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>free, user visible text describing the progress</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-progress.returns" role="returns">
<title>Returns</title>
<para> The new qos message. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-message-parse-progress" role="function">
<title>gst_message_parse_progress&#160;()</title>
<indexterm zone="gst-message-parse-progress"><primary>gst_message_parse_progress</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_progress (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                            <parameter><link linkend="GstProgressType"><type>GstProgressType</type></link> *type</parameter>,
                            <parameter><link linkend="gchar"><type>gchar</type></link> **code</parameter>,
                            <parameter><link linkend="gchar"><type>gchar</type></link> **text</parameter>);</programlisting>
<para>Parses the progress <parameter>type</parameter>
, <parameter>code</parameter>
 and <parameter>text</parameter>
.</para>
<refsect3 id="gst-message-parse-progress.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_PROGRESS.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para> location for the type. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para> location for the code. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para> location for the text. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-message-new-need-context" role="function" condition="since:1.2">
<title>gst_message_new_need_context&#160;()</title>
<indexterm zone="gst-message-new-need-context" role="1.2"><primary>gst_message_new_need_context</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_need_context (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *context_type</parameter>);</programlisting>
<para>This message is posted when an element needs a specific <link linkend="GstContext"><type>GstContext</type></link>.</para>
<refsect3 id="gst-message-new-need-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>context_type</para></entry>
<entry role="parameter_description"><para>The context type that is needed</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-need-context.returns" role="returns">
<title>Returns</title>
<para> The new need-context message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-parse-context-type" role="function" condition="since:1.2">
<title>gst_message_parse_context_type&#160;()</title>
<indexterm zone="gst-message-parse-context-type" role="1.2"><primary>gst_message_parse_context_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_message_parse_context_type (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> **context_type</parameter>);</programlisting>
<para>Parse a context type from an existing GST_MESSAGE_NEED_CONTEXT message.</para>
<refsect3 id="gst-message-parse-context-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a GST_MESSAGE_NEED_CONTEXT type message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context_type</para></entry>
<entry role="parameter_description"><para> the context type, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-parse-context-type.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> indicating if the parsing succeeded.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-new-have-context" role="function" condition="since:1.2">
<title>gst_message_new_have_context&#160;()</title>
<indexterm zone="gst-message-new-have-context" role="1.2"><primary>gst_message_new_have_context</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_have_context (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                              <parameter><link linkend="GstContext"><type>GstContext</type></link> *context</parameter>);</programlisting>
<para>This message is posted when an element has a new local <link linkend="GstContext"><type>GstContext</type></link>.</para>
<refsect3 id="gst-message-new-have-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> The object originating the message. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para> the context. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-have-context.returns" role="returns">
<title>Returns</title>
<para> The new have-context message.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-parse-have-context" role="function" condition="since:1.2">
<title>gst_message_parse_have_context&#160;()</title>
<indexterm zone="gst-message-parse-have-context" role="1.2"><primary>gst_message_parse_have_context</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_have_context (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GstContext"><type>GstContext</type></link> **context</parameter>);</programlisting>
<para>Extract the context from the HAVE_CONTEXT message.</para>
<para>MT safe.</para>
<refsect3 id="gst-message-parse-have-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstMessage"><type>GstMessage</type></link> of type GST_MESSAGE_HAVE_CONTEXT.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para> Result location for the
context or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-message-new-device-added" role="function" condition="since:1.4">
<title>gst_message_new_device_added&#160;()</title>
<indexterm zone="gst-message-new-device-added" role="1.4"><primary>gst_message_new_device_added</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_device_added (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                              <parameter><link linkend="GstDevice"><type>GstDevice</type></link> *device</parameter>);</programlisting>
<para>Creates a new device-added message. The device-added message is produced by
<link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> or a <link linkend="GstDeviceMonitor"><type>GstDeviceMonitor</type></link>. They announce the appearance
of monitored devices.</para>
<refsect3 id="gst-message-new-device-added.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstObject"><type>GstObject</type></link> that created the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para> The new <link linkend="GstDevice"><type>GstDevice</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-device-added.returns" role="returns">
<title>Returns</title>
<para> a newly allocated <link linkend="GstMessage"><type>GstMessage</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-message-new-device-removed" role="function" condition="since:1.4">
<title>gst_message_new_device_removed&#160;()</title>
<indexterm zone="gst-message-new-device-removed" role="1.4"><primary>gst_message_new_device_removed</primary></indexterm>
<programlisting language="C"><link linkend="GstMessage"><returnvalue>GstMessage</returnvalue></link>&#160;*
gst_message_new_device_removed (<parameter><link linkend="GstObject"><type>GstObject</type></link> *src</parameter>,
                                <parameter><link linkend="GstDevice"><type>GstDevice</type></link> *device</parameter>);</programlisting>
<para>Creates a new device-removed message. The device-removed message is produced
by <link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> or a <link linkend="GstDeviceMonitor"><type>GstDeviceMonitor</type></link>. They announce the
disappearance of monitored devices.</para>
<refsect3 id="gst-message-new-device-removed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstObject"><type>GstObject</type></link> that created the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para> The removed <link linkend="GstDevice"><type>GstDevice</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-message-new-device-removed.returns" role="returns">
<title>Returns</title>
<para> a newly allocated <link linkend="GstMessage"><type>GstMessage</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-message-parse-device-added" role="function" condition="since:1.4">
<title>gst_message_parse_device_added&#160;()</title>
<indexterm zone="gst-message-parse-device-added" role="1.4"><primary>gst_message_parse_device_added</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_device_added (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GstDevice"><type>GstDevice</type></link> **device</parameter>);</programlisting>
<para>Parses a device-added message. The device-added message is produced by
<link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> or a <link linkend="GstDeviceMonitor"><type>GstDeviceMonitor</type></link>. It announces the appearance
of monitored devices.</para>
<refsect3 id="gst-message-parse-device-added.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link> of type <link linkend="GST-MESSAGE-DEVICE-ADDED:CAPS"><literal>GST_MESSAGE_DEVICE_ADDED</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para> A location where to store a
pointer to the new <link linkend="GstDevice"><type>GstDevice</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-message-parse-device-removed" role="function" condition="since:1.4">
<title>gst_message_parse_device_removed&#160;()</title>
<indexterm zone="gst-message-parse-device-removed" role="1.4"><primary>gst_message_parse_device_removed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_message_parse_device_removed (<parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>,
                                  <parameter><link linkend="GstDevice"><type>GstDevice</type></link> **device</parameter>);</programlisting>
<para>Parses a device-removed message. The device-removed message is produced by
<link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> or a <link linkend="GstDeviceMonitor"><type>GstDeviceMonitor</type></link>. It announces the
disappearance of monitored devices.</para>
<refsect3 id="gst-message-parse-device-removed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMessage"><type>GstMessage</type></link> of type <link linkend="GST-MESSAGE-DEVICE-REMOVED:CAPS"><literal>GST_MESSAGE_DEVICE_REMOVED</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para> A location where to store a
pointer to the removed <link linkend="GstDevice"><type>GstDevice</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>

</refsect1>
<refsect1 id="GstMessage.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstMessage-struct" role="struct">
<title>struct GstMessage</title>
<indexterm zone="GstMessage-struct"><primary>GstMessage</primary></indexterm>
<programlisting language="C">struct GstMessage {
  GstMiniObject   mini_object;

  GstMessageType  type;
  guint64         timestamp;
  GstObject      *src;
  guint32         seqnum;
};
</programlisting>
<para>A <link linkend="GstMessage"><type>GstMessage</type></link>.</para>
<refsect3 id="GstMessage.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMiniObject"><type>GstMiniObject</type></link>&#160;<structfield id="GstMessage-struct.mini-object">mini_object</structfield>;</para></entry>
<entry role="struct_member_description"><para>the parent structure</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMessageType"><type>GstMessageType</type></link>&#160;<structfield id="GstMessage-struct.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="GstMessageType"><type>GstMessageType</type></link> of the message</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint64"><type>guint64</type></link>&#160;<structfield id="GstMessage-struct.timestamp">timestamp</structfield>;</para></entry>
<entry role="struct_member_description"><para>the timestamp of the message</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstObject"><type>GstObject</type></link>&#160;*<structfield id="GstMessage-struct.src">src</structfield>;</para></entry>
<entry role="struct_member_description"><para>the src of the message</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint32"><type>guint32</type></link>&#160;<structfield id="GstMessage-struct.seqnum">seqnum</structfield>;</para></entry>
<entry role="struct_member_description"><para>the sequence number of the message</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstMessageType" role="enum">
<title>enum GstMessageType</title>
<indexterm zone="GstMessageType"><primary>GstMessageType</primary></indexterm>
<para>The different message types that are available.</para>
<refsect3 id="GstMessageType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-UNKNOWN:CAPS">GST_MESSAGE_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>an undefined message</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-EOS:CAPS">GST_MESSAGE_EOS</para></entry>
<entry role="enum_member_description"><para>end-of-stream reached in a pipeline. The application will
only receive this message in the PLAYING state and every time it sets a
pipeline to PLAYING that is in the EOS state. The application can perform a
flushing seek in the pipeline, which will undo the EOS state again.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-ERROR:CAPS">GST_MESSAGE_ERROR</para></entry>
<entry role="enum_member_description"><para>an error occurred. When the application receives an error
message it should stop playback of the pipeline and not assume that more
data will be played.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-WARNING:CAPS">GST_MESSAGE_WARNING</para></entry>
<entry role="enum_member_description"><para>a warning occurred.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-INFO:CAPS">GST_MESSAGE_INFO</para></entry>
<entry role="enum_member_description"><para>an info message occurred</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-TAG:CAPS">GST_MESSAGE_TAG</para></entry>
<entry role="enum_member_description"><para>a tag was found.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-BUFFERING:CAPS">GST_MESSAGE_BUFFERING</para></entry>
<entry role="enum_member_description"><para>the pipeline is buffering. When the application
receives a buffering message in the PLAYING state for a non-live pipeline it
must PAUSE the pipeline until the buffering completes, when the percentage
field in the message is 100%. For live pipelines, no action must be
performed and the buffering percentage can be used to inform the user about
the progress.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STATE-CHANGED:CAPS">GST_MESSAGE_STATE_CHANGED</para></entry>
<entry role="enum_member_description"><para>a state change happened</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STATE-DIRTY:CAPS">GST_MESSAGE_STATE_DIRTY</para></entry>
<entry role="enum_member_description"><para>an element changed state in a streaming thread.
This message is deprecated.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STEP-DONE:CAPS">GST_MESSAGE_STEP_DONE</para></entry>
<entry role="enum_member_description"><para>a stepping operation finished.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-CLOCK-PROVIDE:CAPS">GST_MESSAGE_CLOCK_PROVIDE</para></entry>
<entry role="enum_member_description"><para>an element notifies its capability of providing
                            a clock. This message is used internally and
                            never forwarded to the application.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-CLOCK-LOST:CAPS">GST_MESSAGE_CLOCK_LOST</para></entry>
<entry role="enum_member_description"><para>The current clock as selected by the pipeline became
                         unusable. The pipeline will select a new clock on
                         the next PLAYING state change. The application
                         should set the pipeline to PAUSED and back to
                         PLAYING when this message is received.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-NEW-CLOCK:CAPS">GST_MESSAGE_NEW_CLOCK</para></entry>
<entry role="enum_member_description"><para>a new clock was selected in the pipeline.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STRUCTURE-CHANGE:CAPS">GST_MESSAGE_STRUCTURE_CHANGE</para></entry>
<entry role="enum_member_description"><para>the structure of the pipeline changed. This
message is used internally and never forwarded to the application.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STREAM-STATUS:CAPS">GST_MESSAGE_STREAM_STATUS</para></entry>
<entry role="enum_member_description"><para>status about a stream, emitted when it starts,
                            stops, errors, etc..</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-APPLICATION:CAPS">GST_MESSAGE_APPLICATION</para></entry>
<entry role="enum_member_description"><para>message posted by the application, possibly
                          via an application-specific element.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-ELEMENT:CAPS">GST_MESSAGE_ELEMENT</para></entry>
<entry role="enum_member_description"><para>element-specific message, see the specific element's
                      documentation</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-SEGMENT-START:CAPS">GST_MESSAGE_SEGMENT_START</para></entry>
<entry role="enum_member_description"><para>pipeline started playback of a segment. This
message is used internally and never forwarded to the application.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-SEGMENT-DONE:CAPS">GST_MESSAGE_SEGMENT_DONE</para></entry>
<entry role="enum_member_description"><para>pipeline completed playback of a segment. This
message is forwarded to the application after all elements that posted
<parameter>GST_MESSAGE_SEGMENT_START</parameter>
 posted a GST_MESSAGE_SEGMENT_DONE message.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-DURATION-CHANGED:CAPS">GST_MESSAGE_DURATION_CHANGED</para></entry>
<entry role="enum_member_description"><para>The duration of a pipeline changed. The
application can get the new duration with a duration query.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-LATENCY:CAPS">GST_MESSAGE_LATENCY</para></entry>
<entry role="enum_member_description"><para>Posted by elements when their latency changes. The
application should recalculate and distribute a new latency.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-ASYNC-START:CAPS">GST_MESSAGE_ASYNC_START</para></entry>
<entry role="enum_member_description"><para>Posted by elements when they start an ASYNC
<link linkend="GstStateChange"><type>GstStateChange</type></link>. This message is not forwarded to the application but is used
internally.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-ASYNC-DONE:CAPS">GST_MESSAGE_ASYNC_DONE</para></entry>
<entry role="enum_member_description"><para>Posted by elements when they complete an ASYNC
<link linkend="GstStateChange"><type>GstStateChange</type></link>. The application will only receive this message from the toplevel
pipeline.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-REQUEST-STATE:CAPS">GST_MESSAGE_REQUEST_STATE</para></entry>
<entry role="enum_member_description"><para>Posted by elements when they want the pipeline to
change state. This message is a suggestion to the application which can
decide to perform the state change on (part of) the pipeline.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STEP-START:CAPS">GST_MESSAGE_STEP_START</para></entry>
<entry role="enum_member_description"><para>A stepping operation was started.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-QOS:CAPS">GST_MESSAGE_QOS</para></entry>
<entry role="enum_member_description"><para>A buffer was dropped or an element changed its processing
strategy for Quality of Service reasons.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-PROGRESS:CAPS">GST_MESSAGE_PROGRESS</para></entry>
<entry role="enum_member_description"><para>A progress message.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-TOC:CAPS">GST_MESSAGE_TOC</para></entry>
<entry role="enum_member_description"><para>A new table of contents (TOC) was found or previously found TOC
was updated.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-RESET-TIME:CAPS">GST_MESSAGE_RESET_TIME</para></entry>
<entry role="enum_member_description"><para>Message to request resetting the pipeline's
    running time from the pipeline. This is an internal message which
    applications will likely never receive.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-STREAM-START:CAPS">GST_MESSAGE_STREAM_START</para></entry>
<entry role="enum_member_description"><para>Message indicating start of a new stream. Useful
    e.g. when using playbin in gapless playback mode, to get notified when
    the next title actually starts playing (which will be some time after
    the URI for the next title has been set).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-NEED-CONTEXT:CAPS">GST_MESSAGE_NEED_CONTEXT</para></entry>
<entry role="enum_member_description"><para>Message indicating that an element wants a specific context (Since 1.2)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-HAVE-CONTEXT:CAPS">GST_MESSAGE_HAVE_CONTEXT</para></entry>
<entry role="enum_member_description"><para>Message indicating that an element created a context (Since 1.2)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-EXTENDED:CAPS">GST_MESSAGE_EXTENDED</para></entry>
<entry role="enum_member_description"><para>Message is an extended message type (see below).
    These extended message IDs can't be used directly with mask-based API
    like <link linkend="gst-bus-poll"><function>gst_bus_poll()</function></link> or <link linkend="gst-bus-timed-pop-filtered"><function>gst_bus_timed_pop_filtered()</function></link>, but you can still
    filter for GST_MESSAGE_EXTENDED and then check the result for the
    specific type. (Since 1.4)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-DEVICE-ADDED:CAPS">GST_MESSAGE_DEVICE_ADDED</para></entry>
<entry role="enum_member_description"><para>Message indicating a <link linkend="GstDevice"><type>GstDevice</type></link> was added to
    a <link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> (Since 1.4)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-DEVICE-REMOVED:CAPS">GST_MESSAGE_DEVICE_REMOVED</para></entry>
<entry role="enum_member_description"><para>Message indicating a <link linkend="GstDevice"><type>GstDevice</type></link> was removed
    from a <link linkend="GstDeviceProvider"><type>GstDeviceProvider</type></link> (Since 1.4)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MESSAGE-ANY:CAPS">GST_MESSAGE_ANY</para></entry>
<entry role="enum_member_description"><para>mask for all of the above messages.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstStructureChangeType" role="enum">
<title>enum GstStructureChangeType</title>
<indexterm zone="GstStructureChangeType"><primary>GstStructureChangeType</primary></indexterm>
<para>The type of a <link linkend="GST-MESSAGE-STRUCTURE-CHANGE:CAPS"><literal>GST_MESSAGE_STRUCTURE_CHANGE</literal></link>.</para>
<refsect3 id="GstStructureChangeType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-STRUCTURE-CHANGE-TYPE-PAD-LINK:CAPS">GST_STRUCTURE_CHANGE_TYPE_PAD_LINK</para></entry>
<entry role="enum_member_description"><para>Pad linking is starting or done.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STRUCTURE-CHANGE-TYPE-PAD-UNLINK:CAPS">GST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK</para></entry>
<entry role="enum_member_description"><para>Pad unlinking is starting or done.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstStreamStatusType" role="enum">
<title>enum GstStreamStatusType</title>
<indexterm zone="GstStreamStatusType"><primary>GstStreamStatusType</primary></indexterm>
<para>The type of a <link linkend="GST-MESSAGE-STREAM-STATUS:CAPS"><literal>GST_MESSAGE_STREAM_STATUS</literal></link>. The stream status messages inform the
application of new streaming threads and their status.</para>
<refsect3 id="GstStreamStatusType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-CREATE:CAPS">GST_STREAM_STATUS_TYPE_CREATE</para></entry>
<entry role="enum_member_description"><para>A new thread need to be created.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-ENTER:CAPS">GST_STREAM_STATUS_TYPE_ENTER</para></entry>
<entry role="enum_member_description"><para>a thread entered its loop function</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-LEAVE:CAPS">GST_STREAM_STATUS_TYPE_LEAVE</para></entry>
<entry role="enum_member_description"><para>a thread left its loop function</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-DESTROY:CAPS">GST_STREAM_STATUS_TYPE_DESTROY</para></entry>
<entry role="enum_member_description"><para>a thread is destroyed</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-START:CAPS">GST_STREAM_STATUS_TYPE_START</para></entry>
<entry role="enum_member_description"><para>a thread is started</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-PAUSE:CAPS">GST_STREAM_STATUS_TYPE_PAUSE</para></entry>
<entry role="enum_member_description"><para>a thread is paused</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STREAM-STATUS-TYPE-STOP:CAPS">GST_STREAM_STATUS_TYPE_STOP</para></entry>
<entry role="enum_member_description"><para>a thread is stopped</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstProgressType" role="enum">
<title>enum GstProgressType</title>
<indexterm zone="GstProgressType"><primary>GstProgressType</primary></indexterm>
<para>The type of a <link linkend="GST-MESSAGE-PROGRESS:CAPS"><literal>GST_MESSAGE_PROGRESS</literal></link>. The progress messages inform the
application of the status of asynchronous tasks.</para>
<refsect3 id="GstProgressType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PROGRESS-TYPE-START:CAPS">GST_PROGRESS_TYPE_START</para></entry>
<entry role="enum_member_description"><para>A new task started.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PROGRESS-TYPE-CONTINUE:CAPS">GST_PROGRESS_TYPE_CONTINUE</para></entry>
<entry role="enum_member_description"><para>A task completed and a new one continues.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PROGRESS-TYPE-COMPLETE:CAPS">GST_PROGRESS_TYPE_COMPLETE</para></entry>
<entry role="enum_member_description"><para>A task completed.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PROGRESS-TYPE-CANCELED:CAPS">GST_PROGRESS_TYPE_CANCELED</para></entry>
<entry role="enum_member_description"><para>A task was canceled.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PROGRESS-TYPE-ERROR:CAPS">GST_PROGRESS_TYPE_ERROR</para></entry>
<entry role="enum_member_description"><para>A task caused an error. An error message is also
         posted on the bus.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GstMessage.see-also">
<title>See Also</title>
<para><link linkend="GstBus"><type>GstBus</type></link>, <link linkend="GstMiniObject"><type>GstMiniObject</type></link>, <link linkend="GstElement"><type>GstElement</type></link></para>

</refsect1>

</refentry>
