<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstQuery">
<refmeta>
<refentrytitle role="top_of_page" id="GstQuery.top_of_page">GstQuery</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstQuery</refname>
<refpurpose>Provide functions to create queries, and to set and parse
                    values in them.</refpurpose>
</refnamediv>

<refsect1 id="GstQuery.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-MAKE-TYPE:CAPS">GST_QUERY_MAKE_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-TYPE:CAPS">GST_QUERY_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-TYPE-NAME:CAPS">GST_QUERY_TYPE_NAME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-IS-UPSTREAM:CAPS">GST_QUERY_IS_UPSTREAM</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-IS-DOWNSTREAM:CAPS">GST_QUERY_IS_DOWNSTREAM</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-IS-SERIALIZED:CAPS">GST_QUERY_IS_SERIALIZED</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQueryTypeFlags"><returnvalue>GstQueryTypeFlags</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-type-get-flags">gst_query_type_get_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-type-get-name">gst_query_type_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-type-to-quark">gst_query_type_to_quark</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-ref">gst_query_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-unref">gst_query_unref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-copy">gst_query_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-query-make-writable">gst_query_make_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-query-is-writable">gst_query_is_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-replace">gst_query_replace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-writable-structure">gst_query_writable_structure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-custom">gst_query_new_custom</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-get-structure">gst_query_get_structure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-convert">gst_query_new_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-convert">gst_query_set_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-convert">gst_query_parse_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-position">gst_query_new_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-position">gst_query_set_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-position">gst_query_parse_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-duration">gst_query_new_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-duration">gst_query_set_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-duration">gst_query_parse_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-latency">gst_query_new_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-latency">gst_query_parse_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-latency">gst_query_set_latency</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-seeking">gst_query_new_seeking</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-seeking">gst_query_set_seeking</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-seeking">gst_query_parse_seeking</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-formats">gst_query_new_formats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-formats">gst_query_set_formats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-formatsv">gst_query_set_formatsv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-n-formats">gst_query_parse_n_formats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-format">gst_query_parse_nth_format</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-segment">gst_query_new_segment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-segment">gst_query_set_segment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-segment">gst_query_parse_segment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-caps">gst_query_new_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-caps">gst_query_parse_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-caps-result">gst_query_set_caps_result</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-caps-result">gst_query_parse_caps_result</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-accept-caps">gst_query_new_accept_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-accept-caps">gst_query_parse_accept_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-accept-caps-result">gst_query_set_accept_caps_result</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-accept-caps-result">gst_query_parse_accept_caps_result</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-buffering">gst_query_new_buffering</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-buffering-percent">gst_query_set_buffering_percent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-buffering-percent">gst_query_parse_buffering_percent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-buffering-stats">gst_query_set_buffering_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-buffering-stats">gst_query_parse_buffering_stats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-buffering-range">gst_query_set_buffering_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-buffering-range">gst_query_parse_buffering_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-add-buffering-range">gst_query_add_buffering_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-get-n-buffering-ranges">gst_query_get_n_buffering_ranges</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-buffering-range">gst_query_parse_nth_buffering_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-uri">gst_query_new_uri</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-uri">gst_query_parse_uri</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-uri">gst_query_set_uri</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-uri-redirection">gst_query_parse_uri_redirection</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-uri-redirection">gst_query_set_uri_redirection</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-uri-redirection-permanent">gst_query_parse_uri_redirection_permanent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-uri-redirection-permanent">gst_query_set_uri_redirection_permanent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-allocation">gst_query_new_allocation</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-allocation">gst_query_parse_allocation</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-add-allocation-pool">gst_query_add_allocation_pool</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-get-n-allocation-pools">gst_query_get_n_allocation_pools</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-allocation-pool">gst_query_parse_nth_allocation_pool</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-nth-allocation-pool">gst_query_set_nth_allocation_pool</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-remove-nth-allocation-pool">gst_query_remove_nth_allocation_pool</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-add-allocation-param">gst_query_add_allocation_param</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-get-n-allocation-params">gst_query_get_n_allocation_params</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-allocation-param">gst_query_parse_nth_allocation_param</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-nth-allocation-param">gst_query_set_nth_allocation_param</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-remove-nth-allocation-param">gst_query_remove_nth_allocation_param</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-add-allocation-meta">gst_query_add_allocation_meta</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-get-n-allocation-metas">gst_query_get_n_allocation_metas</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GType"><returnvalue>GType</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-allocation-meta">gst_query_parse_nth_allocation_meta</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-remove-nth-allocation-meta">gst_query_remove_nth_allocation_meta</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-find-allocation-meta">gst_query_find_allocation_meta</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-scheduling">gst_query_new_scheduling</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-scheduling">gst_query_parse_scheduling</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-scheduling">gst_query_set_scheduling</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-add-scheduling-mode">gst_query_add_scheduling_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-get-n-scheduling-modes">gst_query_get_n_scheduling_modes</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadMode"><returnvalue>GstPadMode</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-nth-scheduling-mode">gst_query_parse_nth_scheduling_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-has-scheduling-mode">gst_query_has_scheduling_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-has-scheduling-mode-with-flags">gst_query_has_scheduling_mode_with_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-drain">gst_query_new_drain</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-query-new-context">gst_query_new_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-set-context">gst_query_set_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-context">gst_query_parse_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-query-parse-context-type">gst_query_parse_context_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstQuery.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstQuery-struct">GstQuery</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstQueryTypeFlags">GstQueryTypeFlags</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-QUERY-TYPE-BOTH:CAPS">GST_QUERY_TYPE_BOTH</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstQueryType">GstQueryType</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstBufferingMode">GstBufferingMode</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstSchedulingFlags">GstSchedulingFlags</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstQuery.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GBoxed">GBoxed</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstQuery
</screen>
</refsect1>

<refsect1 id="GstQuery.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstQuery.description" role="desc">
<title role="desc.title">Description</title>
<para>Queries can be performed on pads (<link linkend="gst-pad-query"><function>gst_pad_query()</function></link>) and elements
(<link linkend="gst-element-query"><function>gst_element_query()</function></link>). Please note that some queries might need a running
pipeline to work.</para>
<para>Queries can be created using the gst_query_new_*() functions.
Query values can be set using gst_query_set_*(), and parsed using
gst_query_parse_*() helpers.</para>
<para>The following example shows how to query the duration of a pipeline:</para>
<informalexample><programlisting><![CDATA[
  GstQuery *query;
  gboolean res;
  query = gst_query_new_duration (GST_FORMAT_TIME);
  res = gst_element_query (pipeline, query);
  if (res) {
    gint64 duration;
    gst_query_parse_duration (query, NULL, &duration);
    g_print ("duration = %"GST_TIME_FORMAT, GST_TIME_ARGS (duration));
  } else {
    g_print ("duration query failed...");
  }
  gst_query_unref (query);
]]></programlisting></informalexample>
<para></para>

</refsect1>
<refsect1 id="GstQuery.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="GST-QUERY-MAKE-TYPE:CAPS" role="macro">
<title>GST_QUERY_MAKE_TYPE()</title>
<indexterm zone="GST-QUERY-MAKE-TYPE:CAPS"><primary>GST_QUERY_MAKE_TYPE</primary></indexterm>
<programlisting language="C">#define             GST_QUERY_MAKE_TYPE(num,flags)</programlisting>
<para>when making custom query types, use this macro with the num and
the given flags</para>
<refsect3 id="GST-QUERY-MAKE-TYPE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>num</para></entry>
<entry role="parameter_description"><para>the query number to create</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the query flags</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-TYPE:CAPS" role="macro">
<title>GST_QUERY_TYPE()</title>
<indexterm zone="GST-QUERY-TYPE:CAPS"><primary>GST_QUERY_TYPE</primary></indexterm>
<programlisting language="C">#define GST_QUERY_TYPE(query)  (((GstQuery*)(query))-&gt;type)
</programlisting>
<para>Get the <link linkend="GstQueryType"><type>GstQueryType</type></link> of the query.</para>
<refsect3 id="GST-QUERY-TYPE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>the query to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-TYPE-NAME:CAPS" role="macro">
<title>GST_QUERY_TYPE_NAME()</title>
<indexterm zone="GST-QUERY-TYPE-NAME:CAPS"><primary>GST_QUERY_TYPE_NAME</primary></indexterm>
<programlisting language="C">#define GST_QUERY_TYPE_NAME(query) (gst_query_type_get_name(GST_QUERY_TYPE(query)))
</programlisting>
<para>Get a constant string representation of the <link linkend="GstQueryType"><type>GstQueryType</type></link> of the query.</para>
<refsect3 id="GST-QUERY-TYPE-NAME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>the query to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-IS-UPSTREAM:CAPS" role="macro">
<title>GST_QUERY_IS_UPSTREAM()</title>
<indexterm zone="GST-QUERY-IS-UPSTREAM:CAPS"><primary>GST_QUERY_IS_UPSTREAM</primary></indexterm>
<programlisting language="C">#define GST_QUERY_IS_UPSTREAM(ev)       !!(GST_QUERY_TYPE (ev) &amp; GST_QUERY_TYPE_UPSTREAM)
</programlisting>
<para>Check if an query can travel upstream.</para>
<refsect3 id="GST-QUERY-IS-UPSTREAM.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ev</para></entry>
<entry role="parameter_description"><para>the query to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-IS-DOWNSTREAM:CAPS" role="macro">
<title>GST_QUERY_IS_DOWNSTREAM()</title>
<indexterm zone="GST-QUERY-IS-DOWNSTREAM:CAPS"><primary>GST_QUERY_IS_DOWNSTREAM</primary></indexterm>
<programlisting language="C">#define GST_QUERY_IS_DOWNSTREAM(ev)     !!(GST_QUERY_TYPE (ev) &amp; GST_QUERY_TYPE_DOWNSTREAM)
</programlisting>
<para>Check if an query can travel downstream.</para>
<refsect3 id="GST-QUERY-IS-DOWNSTREAM.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ev</para></entry>
<entry role="parameter_description"><para>the query to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-IS-SERIALIZED:CAPS" role="macro">
<title>GST_QUERY_IS_SERIALIZED()</title>
<indexterm zone="GST-QUERY-IS-SERIALIZED:CAPS"><primary>GST_QUERY_IS_SERIALIZED</primary></indexterm>
<programlisting language="C">#define GST_QUERY_IS_SERIALIZED(ev)     !!(GST_QUERY_TYPE (ev) &amp; GST_QUERY_TYPE_SERIALIZED)
</programlisting>
<para>Check if an query is serialized with the data stream.</para>
<refsect3 id="GST-QUERY-IS-SERIALIZED.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ev</para></entry>
<entry role="parameter_description"><para>the query to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-type-get-flags" role="function">
<title>gst_query_type_get_flags&#160;()</title>
<indexterm zone="gst-query-type-get-flags"><primary>gst_query_type_get_flags</primary></indexterm>
<programlisting language="C"><link linkend="GstQueryTypeFlags"><returnvalue>GstQueryTypeFlags</returnvalue></link>
gst_query_type_get_flags (<parameter><link linkend="GstQueryType"><type>GstQueryType</type></link> type</parameter>);</programlisting>
<para>Gets the <link linkend="GstQueryTypeFlags"><type>GstQueryTypeFlags</type></link> associated with <parameter>type</parameter>
.</para>
<refsect3 id="gst-query-type-get-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQueryType"><type>GstQueryType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-type-get-flags.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstQueryTypeFlags"><type>GstQueryTypeFlags</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-type-get-name" role="function">
<title>gst_query_type_get_name&#160;()</title>
<indexterm zone="gst-query-type-get-name"><primary>gst_query_type_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_query_type_get_name (<parameter><link linkend="GstQueryType"><type>GstQueryType</type></link> type</parameter>);</programlisting>
<para>Get a printable name for the given query type. Do not modify or free.</para>
<refsect3 id="gst-query-type-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the query type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-type-get-name.returns" role="returns">
<title>Returns</title>
<para> a reference to the static name of the query.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-type-to-quark" role="function">
<title>gst_query_type_to_quark&#160;()</title>
<indexterm zone="gst-query-type-to-quark"><primary>gst_query_type_to_quark</primary></indexterm>
<programlisting language="C"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
gst_query_type_to_quark (<parameter><link linkend="GstQueryType"><type>GstQueryType</type></link> type</parameter>);</programlisting>
<para>Get the unique quark for the given query type.</para>
<refsect3 id="gst-query-type-to-quark.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the query type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-type-to-quark.returns" role="returns">
<title>Returns</title>
<para> the quark associated with the query type</para>
</refsect3></refsect2>
<refsect2 id="gst-query-ref" role="function">
<title>gst_query_ref&#160;()</title>
<indexterm zone="gst-query-ref"><primary>gst_query_ref</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_ref (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *q</parameter>);</programlisting>
<para>Increases the refcount of the given query by one.</para>
<refsect3 id="gst-query-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>q</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> to increase the refcount of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-ref.returns" role="returns">
<title>Returns</title>
<para> <parameter>q</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-query-unref" role="function">
<title>gst_query_unref&#160;()</title>
<indexterm zone="gst-query-unref"><primary>gst_query_unref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_unref (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *q</parameter>);</programlisting>
<para>Decreases the refcount of the query. If the refcount reaches 0, the query
will be freed.</para>
<refsect3 id="gst-query-unref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>q</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> to decrease the refcount of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-copy" role="function">
<title>gst_query_copy&#160;()</title>
<indexterm zone="gst-query-copy"><primary>gst_query_copy</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_copy (<parameter>const <link linkend="GstQuery"><type>GstQuery</type></link> *q</parameter>);</programlisting>
<para>Copies the given query using the copy function of the parent <link linkend="GstStructure"><type>GstStructure</type></link>.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>q</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> to copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-copy.returns" role="returns">
<title>Returns</title>
<para> a new copy of <parameter>q</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-make-writable" role="macro">
<title>gst_query_make_writable()</title>
<indexterm zone="gst-query-make-writable"><primary>gst_query_make_writable</primary></indexterm>
<programlisting language="C">#define         gst_query_make_writable(q)      GST_QUERY_CAST (gst_mini_object_make_writable (GST_MINI_OBJECT_CAST (q)))
</programlisting>
<para>Makes a writable query from the given query.</para>
<refsect3 id="gst-query-make-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>q</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstQuery"><type>GstQuery</type></link> to make writable. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-make-writable.returns" role="returns">
<title>Returns</title>
<para> a new writable query (possibly same as <parameter>q</parameter>
). </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-is-writable" role="macro">
<title>gst_query_is_writable()</title>
<indexterm zone="gst-query-is-writable"><primary>gst_query_is_writable</primary></indexterm>
<programlisting language="C">#define         gst_query_is_writable(q)     gst_mini_object_is_writable (GST_MINI_OBJECT_CAST (q))
</programlisting>
<para>Tests if you can safely write data into a query's structure.</para>
<refsect3 id="gst-query-is-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>q</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-replace" role="function">
<title>gst_query_replace&#160;()</title>
<indexterm zone="gst-query-replace"><primary>gst_query_replace</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_replace (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> **old_query</parameter>,
                   <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *new_query</parameter>);</programlisting>
<para>Modifies a pointer to a <link linkend="GstQuery"><type>GstQuery</type></link> to point to a different <link linkend="GstQuery"><type>GstQuery</type></link>. The
modification is done atomically (so this is useful for ensuring thread safety
in some cases), and the reference counts are updated appropriately (the old
query is unreffed, the new one is reffed).</para>
<para>Either <parameter>new_query</parameter>
 or the <link linkend="GstQuery"><type>GstQuery</type></link> pointed to by <parameter>old_query</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-query-replace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>old_query</para></entry>
<entry role="parameter_description"><para> pointer to a pointer to a
<link linkend="GstQuery"><type>GstQuery</type></link> to be replaced. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>][<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>new_query</para></entry>
<entry role="parameter_description"><para> pointer to a <link linkend="GstQuery"><type>GstQuery</type></link> that will
replace the query pointed to by <parameter>old_query</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-replace.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>new_query</parameter>
was different from <parameter>old_query</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-query-writable-structure" role="function">
<title>gst_query_writable_structure&#160;()</title>
<indexterm zone="gst-query-writable-structure"><primary>gst_query_writable_structure</primary></indexterm>
<programlisting language="C"><link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
gst_query_writable_structure (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Get the structure of a query. This method should be called with a writable
<parameter>query</parameter>
 so that the returned structure is guaranteed to be writable.</para>
<refsect3 id="gst-query-writable-structure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-writable-structure.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstStructure"><type>GstStructure</type></link> of the query. The structure is
still owned by the query and will therefore be freed when the query
is unreffed. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-custom" role="function">
<title>gst_query_new_custom&#160;()</title>
<indexterm zone="gst-query-new-custom"><primary>gst_query_new_custom</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_custom (<parameter><link linkend="GstQueryType"><type>GstQueryType</type></link> type</parameter>,
                      <parameter><link linkend="GstStructure"><type>GstStructure</type></link> *structure</parameter>);</programlisting>
<para>Constructs a new custom query object. Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link>
when done with it.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-custom.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the query type</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>structure</para></entry>
<entry role="parameter_description"><para> a structure for the query. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-custom.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-get-structure" role="function">
<title>gst_query_get_structure&#160;()</title>
<indexterm zone="gst-query-get-structure"><primary>gst_query_get_structure</primary></indexterm>
<programlisting language="C">const <link linkend="GstStructure"><returnvalue>GstStructure</returnvalue></link>&#160;*
gst_query_get_structure (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Get the structure of a query.</para>
<refsect3 id="gst-query-get-structure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-structure.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstStructure"><type>GstStructure</type></link> of the query. The structure is
still owned by the query and will therefore be freed when the query
is unreffed. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-convert" role="function">
<title>gst_query_new_convert&#160;()</title>
<indexterm zone="gst-query-new-convert"><primary>gst_query_new_convert</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_convert (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> src_format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> value</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> dest_format</parameter>);</programlisting>
<para>Constructs a new convert query object. Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link>
when done with it. A convert query is used to ask for a conversion between
one format and another.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstFormat"><type>GstFormat</type></link> for the new query</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the value to convert</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para>the target <link linkend="GstFormat"><type>GstFormat</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-convert.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-convert" role="function">
<title>gst_query_set_convert&#160;()</title>
<indexterm zone="gst-query-set-convert"><primary>gst_query_set_convert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_convert (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> src_format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> src_value</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> dest_format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> dest_value</parameter>);</programlisting>
<para>Answer a convert query by setting the requested values.</para>
<refsect3 id="gst-query-set-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstFormat"><type>GstFormat</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_value</para></entry>
<entry role="parameter_description"><para>the source value</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para>the destination <link linkend="GstFormat"><type>GstFormat</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_value</para></entry>
<entry role="parameter_description"><para>the destination value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-convert" role="function">
<title>gst_query_parse_convert&#160;()</title>
<indexterm zone="gst-query-parse-convert"><primary>gst_query_parse_convert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_convert (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                         <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *src_format</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *src_value</parameter>,
                         <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *dest_format</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *dest_value</parameter>);</programlisting>
<para>Parse a convert query answer. Any of <parameter>src_format</parameter>
, <parameter>src_value</parameter>
, <parameter>dest_format</parameter>
,
and <parameter>dest_value</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>, in which case that value is omitted.</para>
<refsect3 id="gst-query-parse-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para> the storage for the <link linkend="GstFormat"><type>GstFormat</type></link> of the
source value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>src_value</para></entry>
<entry role="parameter_description"><para> the storage for the source value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para> the storage for the <link linkend="GstFormat"><type>GstFormat</type></link> of the
destination value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest_value</para></entry>
<entry role="parameter_description"><para> the storage for the destination value,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-position" role="function">
<title>gst_query_new_position&#160;()</title>
<indexterm zone="gst-query-new-position"><primary>gst_query_new_position</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_position (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>);</programlisting>
<para>Constructs a new query stream position query object. Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link>
when done with it. A position query is used to query the current position
of playback in the streams, in some format.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the default <link linkend="GstFormat"><type>GstFormat</type></link> for the new query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-position.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-position" role="function">
<title>gst_query_set_position&#160;()</title>
<indexterm zone="gst-query-set-position"><primary>gst_query_set_position</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_position (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                        <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                        <parameter><link linkend="gint64"><type>gint64</type></link> cur</parameter>);</programlisting>
<para>Answer a position query by setting the requested value in the given format.</para>
<refsect3 id="gst-query-set-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> with query type GST_QUERY_POSITION</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the requested <link linkend="GstFormat"><type>GstFormat</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>the position to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-position" role="function">
<title>gst_query_parse_position&#160;()</title>
<indexterm zone="gst-query-parse-position"><primary>gst_query_parse_position</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_position (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                          <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                          <parameter><link linkend="gint64"><type>gint64</type></link> *cur</parameter>);</programlisting>
<para>Parse a position query, writing the format into <parameter>format</parameter>
, and the position
into <parameter>cur</parameter>
, if the respective parameters are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-query-parse-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> the storage for the <link linkend="GstFormat"><type>GstFormat</type></link> of the
position values (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para> the storage for the current position (may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-duration" role="function">
<title>gst_query_new_duration&#160;()</title>
<indexterm zone="gst-query-new-duration"><primary>gst_query_new_duration</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_duration (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>);</programlisting>
<para>Constructs a new stream duration query object to query in the given format.
Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link> when done with it. A duration query will give the
total length of the stream.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> for this duration query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-duration.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-duration" role="function">
<title>gst_query_set_duration&#160;()</title>
<indexterm zone="gst-query-set-duration"><primary>gst_query_set_duration</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_duration (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                        <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                        <parameter><link linkend="gint64"><type>gint64</type></link> duration</parameter>);</programlisting>
<para>Answer a duration query by setting the requested value in the given format.</para>
<refsect3 id="gst-query-set-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> for the duration</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para>the duration of the stream</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-duration" role="function">
<title>gst_query_parse_duration&#160;()</title>
<indexterm zone="gst-query-parse-duration"><primary>gst_query_parse_duration</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_duration (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                          <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                          <parameter><link linkend="gint64"><type>gint64</type></link> *duration</parameter>);</programlisting>
<para>Parse a duration query answer. Write the format of the duration into <parameter>format</parameter>
,
and the value into <parameter>duration</parameter>
, if the respective variables are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-query-parse-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> the storage for the <link linkend="GstFormat"><type>GstFormat</type></link> of the duration
value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> the storage for the total duration, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-latency" role="function">
<title>gst_query_new_latency&#160;()</title>
<indexterm zone="gst-query-new-latency"><primary>gst_query_new_latency</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_latency (<parameter><type>void</type></parameter>);</programlisting>
<para>Constructs a new latency query object.
Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link> when done with it. A latency query is usually performed
by sinks to compensate for additional latency introduced by elements in the
pipeline.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-latency.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-latency" role="function">
<title>gst_query_parse_latency&#160;()</title>
<indexterm zone="gst-query-parse-latency"><primary>gst_query_parse_latency</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_latency (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                         <parameter><link linkend="gboolean"><type>gboolean</type></link> *live</parameter>,
                         <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> *min_latency</parameter>,
                         <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> *max_latency</parameter>);</programlisting>
<para>Parse a latency query answer.</para>
<refsect3 id="gst-query-parse-latency.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>live</para></entry>
<entry role="parameter_description"><para> storage for live or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>min_latency</para></entry>
<entry role="parameter_description"><para> the storage for the min latency or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>max_latency</para></entry>
<entry role="parameter_description"><para> the storage for the max latency or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-latency" role="function">
<title>gst_query_set_latency&#160;()</title>
<indexterm zone="gst-query-set-latency"><primary>gst_query_set_latency</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_latency (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="gboolean"><type>gboolean</type></link> live</parameter>,
                       <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> min_latency</parameter>,
                       <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> max_latency</parameter>);</programlisting>
<para>Answer a latency query by setting the requested values in the given format.</para>
<refsect3 id="gst-query-set-latency.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>live</para></entry>
<entry role="parameter_description"><para>if there is a live element upstream</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>min_latency</para></entry>
<entry role="parameter_description"><para>the minimal latency of the upstream elements</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>max_latency</para></entry>
<entry role="parameter_description"><para>the maximal latency of the upstream elements</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-seeking" role="function">
<title>gst_query_new_seeking&#160;()</title>
<indexterm zone="gst-query-new-seeking"><primary>gst_query_new_seeking</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_seeking (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>);</programlisting>
<para>Constructs a new query object for querying seeking properties of
the stream.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-seeking.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the default <link linkend="GstFormat"><type>GstFormat</type></link> for the new query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-seeking.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-seeking" role="function">
<title>gst_query_set_seeking&#160;()</title>
<indexterm zone="gst-query-set-seeking"><primary>gst_query_set_seeking</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_seeking (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                       <parameter><link linkend="gboolean"><type>gboolean</type></link> seekable</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> segment_start</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> segment_end</parameter>);</programlisting>
<para>Set the seeking query result fields in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-seeking.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the format to set for the <parameter>segment_start</parameter>
and <parameter>segment_end</parameter>
values</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>seekable</para></entry>
<entry role="parameter_description"><para>the seekable flag to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>segment_start</para></entry>
<entry role="parameter_description"><para>the segment_start to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>segment_end</para></entry>
<entry role="parameter_description"><para>the segment_end to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-seeking" role="function">
<title>gst_query_parse_seeking&#160;()</title>
<indexterm zone="gst-query-parse-seeking"><primary>gst_query_parse_seeking</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_seeking (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                         <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                         <parameter><link linkend="gboolean"><type>gboolean</type></link> *seekable</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *segment_start</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *segment_end</parameter>);</programlisting>
<para>Parse a seeking query, writing the format into <parameter>format</parameter>
, and
other results into the passed parameters, if the respective parameters
are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link></para>
<refsect3 id="gst-query-parse-seeking.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SEEKING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> the format to set for the <parameter>segment_start</parameter>
and <parameter>segment_end</parameter>
values, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>seekable</para></entry>
<entry role="parameter_description"><para> the seekable flag to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>segment_start</para></entry>
<entry role="parameter_description"><para> the segment_start to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>segment_end</para></entry>
<entry role="parameter_description"><para> the segment_end to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-formats" role="function">
<title>gst_query_new_formats&#160;()</title>
<indexterm zone="gst-query-new-formats"><primary>gst_query_new_formats</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_formats (<parameter><type>void</type></parameter>);</programlisting>
<para>Constructs a new query object for querying formats of
the stream.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-formats.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-formats" role="function">
<title>gst_query_set_formats&#160;()</title>
<indexterm zone="gst-query-set-formats"><primary>gst_query_set_formats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_formats (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="gint"><type>gint</type></link> n_formats</parameter>,
                       <parameter>...</parameter>);</programlisting>
<para>Set the formats query result fields in <parameter>query</parameter>
. The number of formats passed
must be equal to <parameter>n_formats</parameter>
.</para>
<refsect3 id="gst-query-set-formats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_formats</para></entry>
<entry role="parameter_description"><para>the number of formats to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>A number of <parameter>GstFormats</parameter>
equal to <parameter>n_formats</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-formatsv" role="function">
<title>gst_query_set_formatsv&#160;()</title>
<indexterm zone="gst-query-set-formatsv"><primary>gst_query_set_formatsv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_formatsv (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                        <parameter><link linkend="gint"><type>gint</type></link> n_formats</parameter>,
                        <parameter>const <link linkend="GstFormat"><type>GstFormat</type></link> *formats</parameter>);</programlisting>
<para>Set the formats query result fields in <parameter>query</parameter>
. The number of formats passed
in the <parameter>formats</parameter>
 array must be equal to <parameter>n_formats</parameter>
.</para>
<refsect3 id="gst-query-set-formatsv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_formats</para></entry>
<entry role="parameter_description"><para>the number of formats to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>formats</para></entry>
<entry role="parameter_description"><para> an array containing <parameter>n_formats</parameter>
<parameter>GstFormat</parameter>
values. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>array</acronym> length=n_formats]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-n-formats" role="function">
<title>gst_query_parse_n_formats&#160;()</title>
<indexterm zone="gst-query-parse-n-formats"><primary>gst_query_parse_n_formats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_n_formats (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                           <parameter><link linkend="guint"><type>guint</type></link> *n_formats</parameter>);</programlisting>
<para>Parse the number of formats in the formats <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-parse-n-formats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_formats</para></entry>
<entry role="parameter_description"><para> the number of formats in this query. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-format" role="function">
<title>gst_query_parse_nth_format&#160;()</title>
<indexterm zone="gst-query-parse-nth-format"><primary>gst_query_parse_nth_format</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_nth_format (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                            <parameter><link linkend="guint"><type>guint</type></link> nth</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>);</programlisting>
<para>Parse the format query and retrieve the <parameter>nth</parameter>
 format from it into
<parameter>format</parameter>
. If the list contains less elements than <parameter>nth</parameter>
, <parameter>format</parameter>
 will be
set to GST_FORMAT_UNDEFINED.</para>
<refsect3 id="gst-query-parse-nth-format.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nth</para></entry>
<entry role="parameter_description"><para> the nth format to retrieve. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> a pointer to store the nth format. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-segment" role="function">
<title>gst_query_new_segment&#160;()</title>
<indexterm zone="gst-query-new-segment"><primary>gst_query_new_segment</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_segment (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>);</programlisting>
<para>Constructs a new segment query object. Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link>
when done with it. A segment query is used to discover information about the
currently configured segment for playback.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-segment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> for the new query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-segment.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-segment" role="function">
<title>gst_query_set_segment&#160;()</title>
<indexterm zone="gst-query-set-segment"><primary>gst_query_set_segment</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_segment (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="gdouble"><type>gdouble</type></link> rate</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> start_value</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> stop_value</parameter>);</programlisting>
<para>Answer a segment query by setting the requested values. The normal
playback segment of a pipeline is 0 to duration at the default rate of
1.0. If a seek was performed on the pipeline to play a different
segment, this query will return the range specified in the last seek.</para>
<para><parameter>start_value</parameter>
 and <parameter>stop_value</parameter>
 will respectively contain the configured
playback range start and stop values expressed in <parameter>format</parameter>
.
The values are always between 0 and the duration of the media and
<parameter>start_value</parameter>
 &lt;= <parameter>stop_value</parameter>
. <parameter>rate</parameter>
 will contain the playback rate. For
negative rates, playback will actually happen from <parameter>stop_value</parameter>
 to
<parameter>start_value</parameter>
.</para>
<refsect3 id="gst-query-set-segment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para>the rate of the segment</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> of the segment values (<parameter>start_value</parameter>
and <parameter>stop_value</parameter>
)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start_value</para></entry>
<entry role="parameter_description"><para>the start value</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_value</para></entry>
<entry role="parameter_description"><para>the stop value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-segment" role="function">
<title>gst_query_parse_segment&#160;()</title>
<indexterm zone="gst-query-parse-segment"><primary>gst_query_parse_segment</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_segment (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                         <parameter><link linkend="gdouble"><type>gdouble</type></link> *rate</parameter>,
                         <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *start_value</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> *stop_value</parameter>);</programlisting>
<para>Parse a segment query answer. Any of <parameter>rate</parameter>
, <parameter>format</parameter>
, <parameter>start_value</parameter>
, and
<parameter>stop_value</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>, which will cause this value to be omitted.</para>
<para>See <link linkend="gst-query-set-segment"><function>gst_query_set_segment()</function></link> for an explanation of the function arguments.</para>
<refsect3 id="gst-query-parse-segment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para> the storage for the rate of the segment, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> the storage for the <link linkend="GstFormat"><type>GstFormat</type></link> of the values,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>start_value</para></entry>
<entry role="parameter_description"><para> the storage for the start value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>stop_value</para></entry>
<entry role="parameter_description"><para> the storage for the stop value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-caps" role="function">
<title>gst_query_new_caps&#160;()</title>
<indexterm zone="gst-query-new-caps"><primary>gst_query_new_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_caps (<parameter><link linkend="GstCaps"><type>GstCaps</type></link> *filter</parameter>);</programlisting>
<para>Constructs a new query object for querying the caps.</para>
<para>The CAPS query should return the allowable caps for a pad in the context
of the element's state, its link to other elements, and the devices or files
it has opened. These caps must be a subset of the pad template caps. In the
NULL state with no links, the CAPS query should ideally return the same caps
as the pad template. In rare circumstances, an object property can affect
the caps returned by the CAPS query, but this is discouraged.</para>
<para>For most filters, the caps returned by CAPS query is directly affected by the
allowed caps on other pads. For demuxers and decoders, the caps returned by
the srcpad's getcaps function is directly related to the stream data. Again,
the CAPS query should return the most specific caps it reasonably can, since this
helps with autoplugging.</para>
<para>The <parameter>filter</parameter>
 is used to restrict the result caps, only the caps matching
<parameter>filter</parameter>
 should be returned from the CAPS query. Specifying a filter might
greatly reduce the amount of processing an element needs to do.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para>a filter</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-caps.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-caps" role="function">
<title>gst_query_parse_caps&#160;()</title>
<indexterm zone="gst-query-parse-caps"><primary>gst_query_parse_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_caps (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                      <parameter><link linkend="GstCaps"><type>GstCaps</type></link> **filter</parameter>);</programlisting>
<para>Get the filter from the caps <parameter>query</parameter>
. The caps remains valid as long as
<parameter>query</parameter>
 remains valid.</para>
<refsect3 id="gst-query-parse-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>The query to parse</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para> A pointer to the caps filter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-caps-result" role="function">
<title>gst_query_set_caps_result&#160;()</title>
<indexterm zone="gst-query-set-caps-result"><primary>gst_query_set_caps_result</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_caps_result (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                           <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Set the <parameter>caps</parameter>
 result in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-caps-result.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>The query to use</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> A pointer to the caps. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-caps-result" role="function">
<title>gst_query_parse_caps_result&#160;()</title>
<indexterm zone="gst-query-parse-caps-result"><primary>gst_query_parse_caps_result</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_caps_result (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                             <parameter><link linkend="GstCaps"><type>GstCaps</type></link> **caps</parameter>);</programlisting>
<para>Get the caps result from <parameter>query</parameter>
. The caps remains valid as long as
<parameter>query</parameter>
 remains valid.</para>
<refsect3 id="gst-query-parse-caps-result.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>The query to parse</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> A pointer to the caps. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-accept-caps" role="function">
<title>gst_query_new_accept_caps&#160;()</title>
<indexterm zone="gst-query-new-accept-caps"><primary>gst_query_new_accept_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_accept_caps (<parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Constructs a new query object for querying if <parameter>caps</parameter>
 are accepted.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-accept-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a fixed <link linkend="GstCaps"><type>GstCaps</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-accept-caps.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-accept-caps" role="function">
<title>gst_query_parse_accept_caps&#160;()</title>
<indexterm zone="gst-query-parse-accept-caps"><primary>gst_query_parse_accept_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_accept_caps (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                             <parameter><link linkend="GstCaps"><type>GstCaps</type></link> **caps</parameter>);</programlisting>
<para>Get the caps from <parameter>query</parameter>
. The caps remains valid as long as <parameter>query</parameter>
 remains
valid.</para>
<refsect3 id="gst-query-parse-accept-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>The query to parse</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> A pointer to the caps. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-accept-caps-result" role="function">
<title>gst_query_set_accept_caps_result&#160;()</title>
<indexterm zone="gst-query-set-accept-caps-result"><primary>gst_query_set_accept_caps_result</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_accept_caps_result (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                  <parameter><link linkend="gboolean"><type>gboolean</type></link> result</parameter>);</programlisting>
<para>Set <parameter>result</parameter>
 as the result for the <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-accept-caps-result.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ACCEPT_CAPS type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>the result to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-accept-caps-result" role="function">
<title>gst_query_parse_accept_caps_result&#160;()</title>
<indexterm zone="gst-query-parse-accept-caps-result"><primary>gst_query_parse_accept_caps_result</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_accept_caps_result (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                    <parameter><link linkend="gboolean"><type>gboolean</type></link> *result</parameter>);</programlisting>
<para>Parse the result from <parameter>query</parameter>
 and store in <parameter>result</parameter>
.</para>
<refsect3 id="gst-query-parse-accept-caps-result.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ACCEPT_CAPS type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>location for the result</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-new-buffering" role="function">
<title>gst_query_new_buffering&#160;()</title>
<indexterm zone="gst-query-new-buffering"><primary>gst_query_new_buffering</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_buffering (<parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>);</programlisting>
<para>Constructs a new query object for querying the buffering status of
a stream.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-buffering.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the default <link linkend="GstFormat"><type>GstFormat</type></link> for the new query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-buffering.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-set-buffering-percent" role="function">
<title>gst_query_set_buffering_percent&#160;()</title>
<indexterm zone="gst-query-set-buffering-percent"><primary>gst_query_set_buffering_percent</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_buffering_percent (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                 <parameter><link linkend="gboolean"><type>gboolean</type></link> busy</parameter>,
                                 <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);</programlisting>
<para>Set the percentage of buffered data. This is a value between 0 and 100.
The <parameter>busy</parameter>
 indicator is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when the buffering is in progress.</para>
<refsect3 id="gst-query-set-buffering-percent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>busy</para></entry>
<entry role="parameter_description"><para>if buffering is busy</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>percent</para></entry>
<entry role="parameter_description"><para>a buffering percent</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-buffering-percent" role="function">
<title>gst_query_parse_buffering_percent&#160;()</title>
<indexterm zone="gst-query-parse-buffering-percent"><primary>gst_query_parse_buffering_percent</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_buffering_percent (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                   <parameter><link linkend="gboolean"><type>gboolean</type></link> *busy</parameter>,
                                   <parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);</programlisting>
<para>Get the percentage of buffered data. This is a value between 0 and 100.
The <parameter>busy</parameter>
 indicator is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when the buffering is in progress.</para>
<refsect3 id="gst-query-parse-buffering-percent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>busy</para></entry>
<entry role="parameter_description"><para> if buffering is busy, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>percent</para></entry>
<entry role="parameter_description"><para> a buffering percent, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-buffering-stats" role="function">
<title>gst_query_set_buffering_stats&#160;()</title>
<indexterm zone="gst-query-set-buffering-stats"><primary>gst_query_set_buffering_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_buffering_stats (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GstBufferingMode"><type>GstBufferingMode</type></link> mode</parameter>,
                               <parameter><link linkend="gint"><type>gint</type></link> avg_in</parameter>,
                               <parameter><link linkend="gint"><type>gint</type></link> avg_out</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> buffering_left</parameter>);</programlisting>
<para>Configures the buffering stats values in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-buffering-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>a buffering mode</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>avg_in</para></entry>
<entry role="parameter_description"><para>the average input rate</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>avg_out</para></entry>
<entry role="parameter_description"><para>the average output rate</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffering_left</para></entry>
<entry role="parameter_description"><para>amount of buffering time left in milliseconds</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-buffering-stats" role="function">
<title>gst_query_parse_buffering_stats&#160;()</title>
<indexterm zone="gst-query-parse-buffering-stats"><primary>gst_query_parse_buffering_stats</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_buffering_stats (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                 <parameter><link linkend="GstBufferingMode"><type>GstBufferingMode</type></link> *mode</parameter>,
                                 <parameter><link linkend="gint"><type>gint</type></link> *avg_in</parameter>,
                                 <parameter><link linkend="gint"><type>gint</type></link> *avg_out</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> *buffering_left</parameter>);</programlisting>
<para>Extracts the buffering stats values from <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-parse-buffering-stats.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_BUFFERING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para> a buffering mode, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>avg_in</para></entry>
<entry role="parameter_description"><para> the average input rate, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>avg_out</para></entry>
<entry role="parameter_description"><para> the average output rat, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buffering_left</para></entry>
<entry role="parameter_description"><para> amount of buffering time left in
milliseconds, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-buffering-range" role="function">
<title>gst_query_set_buffering_range&#160;()</title>
<indexterm zone="gst-query-set-buffering-range"><primary>gst_query_set_buffering_range</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_buffering_range (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> start</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> stop</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> estimated_total</parameter>);</programlisting>
<para>Set the available query result fields in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-buffering-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the format to set for the <parameter>start</parameter>
and <parameter>stop</parameter>
values</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>the start to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para>the stop to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>estimated_total</para></entry>
<entry role="parameter_description"><para>estimated total amount of download time remaining in
milliseconds</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-buffering-range" role="function">
<title>gst_query_parse_buffering_range&#160;()</title>
<indexterm zone="gst-query-parse-buffering-range"><primary>gst_query_parse_buffering_range</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_buffering_range (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                 <parameter><link linkend="GstFormat"><type>GstFormat</type></link> *format</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> *start</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> *stop</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> *estimated_total</parameter>);</programlisting>
<para>Parse an available query, writing the format into <parameter>format</parameter>
, and
other results into the passed parameters, if the respective parameters
are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link></para>
<refsect3 id="gst-query-parse-buffering-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_BUFFERING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para> the format to set for the <parameter>segment_start</parameter>
and <parameter>segment_end</parameter>
values, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para> the start to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para> the stop to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>estimated_total</para></entry>
<entry role="parameter_description"><para> estimated total amount of download
time remaining in milliseconds, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-add-buffering-range" role="function">
<title>gst_query_add_buffering_range&#160;()</title>
<indexterm zone="gst-query-add-buffering-range"><primary>gst_query_add_buffering_range</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_add_buffering_range (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> start</parameter>,
                               <parameter><link linkend="gint64"><type>gint64</type></link> stop</parameter>);</programlisting>
<para>Set the buffering-ranges array field in <parameter>query</parameter>
. The current last
start position of the array should be inferior to <parameter>start</parameter>
.</para>
<refsect3 id="gst-query-add-buffering-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_BUFFERING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>start position of the range</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para>stop position of the range</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-add-buffering-range.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> indicating if the range was added or not.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-get-n-buffering-ranges" role="function">
<title>gst_query_get_n_buffering_ranges&#160;()</title>
<indexterm zone="gst-query-get-n-buffering-ranges"><primary>gst_query_get_n_buffering_ranges</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_query_get_n_buffering_ranges (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Retrieve the number of values currently stored in the
buffered-ranges array of the query's structure.</para>
<refsect3 id="gst-query-get-n-buffering-ranges.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_BUFFERING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-n-buffering-ranges.returns" role="returns">
<title>Returns</title>
<para> the range array size as a <link linkend="guint"><type>guint</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-buffering-range" role="function">
<title>gst_query_parse_nth_buffering_range&#160;()</title>
<indexterm zone="gst-query-parse-nth-buffering-range"><primary>gst_query_parse_nth_buffering_range</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_parse_nth_buffering_range (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                     <parameter><link linkend="gint64"><type>gint64</type></link> *start</parameter>,
                                     <parameter><link linkend="gint64"><type>gint64</type></link> *stop</parameter>);</programlisting>
<para>Parse an available query and get the start and stop values stored
at the <parameter>index</parameter>
 of the buffered ranges array.</para>
<refsect3 id="gst-query-parse-nth-buffering-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_BUFFERING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the buffered-ranges array to read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para> the start position to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para> the stop position to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-parse-nth-buffering-range.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> indicating if the parsing succeeded.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-uri" role="function">
<title>gst_query_new_uri&#160;()</title>
<indexterm zone="gst-query-new-uri"><primary>gst_query_new_uri</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_uri (<parameter><type>void</type></parameter>);</programlisting>
<para>Constructs a new query URI query object. Use <link linkend="gst-query-unref"><function>gst_query_unref()</function></link>
when done with it. An URI query is used to query the current URI
that is used by the source or sink.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-uri.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-uri" role="function">
<title>gst_query_parse_uri&#160;()</title>
<indexterm zone="gst-query-parse-uri"><primary>gst_query_parse_uri</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_uri (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                     <parameter><link linkend="gchar"><type>gchar</type></link> **uri</parameter>);</programlisting>
<para>Parse an URI query, writing the URI into <parameter>uri</parameter>
 as a newly
allocated string, if the respective parameters are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>.
Free the string with <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
<refsect3 id="gst-query-parse-uri.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para> the storage for the current URI
(may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-uri" role="function">
<title>gst_query_set_uri&#160;()</title>
<indexterm zone="gst-query-set-uri"><primary>gst_query_set_uri</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_uri (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                   <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>Answer a URI query by setting the requested URI.</para>
<refsect3 id="gst-query-set-uri.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> with query type GST_QUERY_URI</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URI to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-uri-redirection" role="function" condition="since:1.2">
<title>gst_query_parse_uri_redirection&#160;()</title>
<indexterm zone="gst-query-parse-uri-redirection" role="1.2"><primary>gst_query_parse_uri_redirection</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_uri_redirection (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                 <parameter><link linkend="gchar"><type>gchar</type></link> **uri</parameter>);</programlisting>
<para>Parse an URI query, writing the URI into <parameter>uri</parameter>
 as a newly
allocated string, if the respective parameters are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>.
Free the string with <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
<refsect3 id="gst-query-parse-uri-redirection.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para> the storage for the redirect URI
(may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-set-uri-redirection" role="function" condition="since:1.2">
<title>gst_query_set_uri_redirection&#160;()</title>
<indexterm zone="gst-query-set-uri-redirection" role="1.2"><primary>gst_query_set_uri_redirection</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_uri_redirection (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>Answer a URI query by setting the requested URI redirection.</para>
<refsect3 id="gst-query-set-uri-redirection.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> with query type GST_QUERY_URI</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URI to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-parse-uri-redirection-permanent" role="function" condition="since:1.4">
<title>gst_query_parse_uri_redirection_permanent&#160;()</title>
<indexterm zone="gst-query-parse-uri-redirection-permanent" role="1.4"><primary>gst_query_parse_uri_redirection_permanent</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_uri_redirection_permanent
                               (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                <parameter><link linkend="gboolean"><type>gboolean</type></link> *permanent</parameter>);</programlisting>
<para>Parse an URI query, and set <parameter>permanent</parameter>
 to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if there is a redirection
and it should be considered permanent. If a redirection is permanent,
applications should update their internal storage of the URI, otherwise
they should make all future requests to the original URI.</para>
<refsect3 id="gst-query-parse-uri-redirection-permanent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>permanent</para></entry>
<entry role="parameter_description"><para> if the URI redirection is permanent
(may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-query-set-uri-redirection-permanent" role="function" condition="since:1.4">
<title>gst_query_set_uri_redirection_permanent&#160;()</title>
<indexterm zone="gst-query-set-uri-redirection-permanent" role="1.4"><primary>gst_query_set_uri_redirection_permanent</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_uri_redirection_permanent
                               (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                <parameter><link linkend="gboolean"><type>gboolean</type></link> permanent</parameter>);</programlisting>
<para>Answer a URI query by setting the requested URI redirection
to permanent or not.</para>
<refsect3 id="gst-query-set-uri-redirection-permanent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> with query type <link linkend="GST-QUERY-URI:CAPS"><literal>GST_QUERY_URI</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>permanent</para></entry>
<entry role="parameter_description"><para>whether the redirect is permanent or not</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-query-new-allocation" role="function">
<title>gst_query_new_allocation&#160;()</title>
<indexterm zone="gst-query-new-allocation"><primary>gst_query_new_allocation</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_allocation (<parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>,
                          <parameter><link linkend="gboolean"><type>gboolean</type></link> need_pool</parameter>);</programlisting>
<para>Constructs a new query object for querying the allocation properties.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-allocation.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>the negotiated caps</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>need_pool</para></entry>
<entry role="parameter_description"><para>return a pool</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-allocation.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-allocation" role="function">
<title>gst_query_parse_allocation&#160;()</title>
<indexterm zone="gst-query-parse-allocation"><primary>gst_query_parse_allocation</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_allocation (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                            <parameter><link linkend="GstCaps"><type>GstCaps</type></link> **caps</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> *need_pool</parameter>);</programlisting>
<para>Parse an allocation query, writing the requested caps in <parameter>caps</parameter>
 and
whether a pool is needed in <parameter>need_pool</parameter>
, if the respective parameters
are non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-query-parse-allocation.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> The <link linkend="GstCaps"><type>GstCaps</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>need_pool</para></entry>
<entry role="parameter_description"><para> Whether a <link linkend="GstBufferPool"><type>GstBufferPool</type></link> is needed. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-add-allocation-pool" role="function">
<title>gst_query_add_allocation_pool&#160;()</title>
<indexterm zone="gst-query-add-allocation-pool"><primary>gst_query_add_allocation_pool</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_add_allocation_pool (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GstBufferPool"><type>GstBufferPool</type></link> *pool</parameter>,
                               <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                               <parameter><link linkend="guint"><type>guint</type></link> min_buffers</parameter>,
                               <parameter><link linkend="guint"><type>guint</type></link> max_buffers</parameter>);</programlisting>
<para>Set the pool parameters in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-add-allocation-pool.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_ALLOCATION.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pool</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferPool"><type>GstBufferPool</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the size</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>min_buffers</para></entry>
<entry role="parameter_description"><para>the min buffers</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>max_buffers</para></entry>
<entry role="parameter_description"><para>the max buffers</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-get-n-allocation-pools" role="function">
<title>gst_query_get_n_allocation_pools&#160;()</title>
<indexterm zone="gst-query-get-n-allocation-pools"><primary>gst_query_get_n_allocation_pools</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_query_get_n_allocation_pools (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Retrieve the number of values currently stored in the
pool array of the query's structure.</para>
<refsect3 id="gst-query-get-n-allocation-pools.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-n-allocation-pools.returns" role="returns">
<title>Returns</title>
<para> the pool array size as a <link linkend="guint"><type>guint</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-allocation-pool" role="function">
<title>gst_query_parse_nth_allocation_pool&#160;()</title>
<indexterm zone="gst-query-parse-nth-allocation-pool"><primary>gst_query_parse_nth_allocation_pool</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_nth_allocation_pool (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                     <parameter><link linkend="GstBufferPool"><type>GstBufferPool</type></link> **pool</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> *size</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> *min_buffers</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> *max_buffers</parameter>);</programlisting>
<para>Get the pool parameters in <parameter>query</parameter>
.</para>
<para>Unref <parameter>pool</parameter>
 with <link linkend="gst-object-unref"><function>gst_object_unref()</function></link> when it's not needed any more.</para>
<refsect3 id="gst-query-parse-nth-allocation-pool.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_ALLOCATION.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>index to parse</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pool</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferPool"><type>GstBufferPool</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para> the size. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>min_buffers</para></entry>
<entry role="parameter_description"><para> the min buffers. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>max_buffers</para></entry>
<entry role="parameter_description"><para> the max buffers. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-nth-allocation-pool" role="function">
<title>gst_query_set_nth_allocation_pool&#160;()</title>
<indexterm zone="gst-query-set-nth-allocation-pool"><primary>gst_query_set_nth_allocation_pool</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_nth_allocation_pool (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                   <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                   <parameter><link linkend="GstBufferPool"><type>GstBufferPool</type></link> *pool</parameter>,
                                   <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                                   <parameter><link linkend="guint"><type>guint</type></link> min_buffers</parameter>,
                                   <parameter><link linkend="guint"><type>guint</type></link> max_buffers</parameter>);</programlisting>
<para>Set the pool parameters in <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-set-nth-allocation-pool.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>index to modify</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_ALLOCATION.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pool</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferPool"><type>GstBufferPool</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the size</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>min_buffers</para></entry>
<entry role="parameter_description"><para>the min buffers</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>max_buffers</para></entry>
<entry role="parameter_description"><para>the max buffers</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-remove-nth-allocation-pool" role="function" condition="since:1.2">
<title>gst_query_remove_nth_allocation_pool&#160;()</title>
<indexterm zone="gst-query-remove-nth-allocation-pool" role="1.2"><primary>gst_query_remove_nth_allocation_pool</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_remove_nth_allocation_pool (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                      <parameter><link linkend="guint"><type>guint</type></link> index</parameter>);</programlisting>
<para>Remove the allocation pool at <parameter>index</parameter>
 of the allocation pool array.</para>
<refsect3 id="gst-query-remove-nth-allocation-pool.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the allocation pool array to remove</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-add-allocation-param" role="function">
<title>gst_query_add_allocation_param&#160;()</title>
<indexterm zone="gst-query-add-allocation-param"><primary>gst_query_add_allocation_param</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_add_allocation_param (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                <parameter><link linkend="GstAllocator"><type>GstAllocator</type></link> *allocator</parameter>,
                                <parameter>const <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> *params</parameter>);</programlisting>
<para>Add <parameter>allocator</parameter>
 and its <parameter>params</parameter>
 as a supported memory allocator.</para>
<refsect3 id="gst-query-add-allocation-param.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>allocator</para></entry>
<entry role="parameter_description"><para> the memory allocator. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-get-n-allocation-params" role="function">
<title>gst_query_get_n_allocation_params&#160;()</title>
<indexterm zone="gst-query-get-n-allocation-params"><primary>gst_query_get_n_allocation_params</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_query_get_n_allocation_params (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Retrieve the number of values currently stored in the
allocator params array of the query's structure.</para>
<para>If no memory allocator is specified, the downstream element can handle
the default memory allocator. The first memory allocator in the query
should be generic and allow mapping to system memory, all following
allocators should be ordered by preference with the preferred one first.</para>
<refsect3 id="gst-query-get-n-allocation-params.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-n-allocation-params.returns" role="returns">
<title>Returns</title>
<para> the allocator array size as a <link linkend="guint"><type>guint</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-allocation-param" role="function">
<title>gst_query_parse_nth_allocation_param&#160;()</title>
<indexterm zone="gst-query-parse-nth-allocation-param"><primary>gst_query_parse_nth_allocation_param</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_nth_allocation_param (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                      <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                      <parameter><link linkend="GstAllocator"><type>GstAllocator</type></link> **allocator</parameter>,
                                      <parameter><link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> *params</parameter>);</programlisting>
<para>Parse an available query and get the allocator and its params
at <parameter>index</parameter>
 of the allocator array.</para>
<refsect3 id="gst-query-parse-nth-allocation-param.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the allocator array to read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>allocator</para></entry>
<entry role="parameter_description"><para> variable to hold the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer full</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> parameters for the allocator. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-nth-allocation-param" role="function">
<title>gst_query_set_nth_allocation_param&#160;()</title>
<indexterm zone="gst-query-set-nth-allocation-param"><primary>gst_query_set_nth_allocation_param</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_nth_allocation_param (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                    <parameter><link linkend="GstAllocator"><type>GstAllocator</type></link> *allocator</parameter>,
                                    <parameter>const <link linkend="GstAllocationParams"><type>GstAllocationParams</type></link> *params</parameter>);</programlisting>
<para>Parse an available query and get the allocator and its params
at <parameter>index</parameter>
 of the allocator array.</para>
<refsect3 id="gst-query-set-nth-allocation-param.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the allocator array to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>allocator</para></entry>
<entry role="parameter_description"><para> new allocator to set. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> parameters for the allocator. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-remove-nth-allocation-param" role="function" condition="since:1.2">
<title>gst_query_remove_nth_allocation_param&#160;()</title>
<indexterm zone="gst-query-remove-nth-allocation-param" role="1.2"><primary>gst_query_remove_nth_allocation_param</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_remove_nth_allocation_param (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                       <parameter><link linkend="guint"><type>guint</type></link> index</parameter>);</programlisting>
<para>Remove the allocation param at <parameter>index</parameter>
 of the allocation param array.</para>
<refsect3 id="gst-query-remove-nth-allocation-param.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the allocation param array to remove</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-add-allocation-meta" role="function">
<title>gst_query_add_allocation_meta&#160;()</title>
<indexterm zone="gst-query-add-allocation-meta"><primary>gst_query_add_allocation_meta</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_add_allocation_meta (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GType"><type>GType</type></link> api</parameter>,
                               <parameter>const <link linkend="GstStructure"><type>GstStructure</type></link> *params</parameter>);</programlisting>
<para>Add <parameter>api</parameter>
 with <parameter>params</parameter>
 as one of the supported metadata API to <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-add-allocation-meta.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>api</para></entry>
<entry role="parameter_description"><para>the metadata API</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> API specific parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-get-n-allocation-metas" role="function">
<title>gst_query_get_n_allocation_metas&#160;()</title>
<indexterm zone="gst-query-get-n-allocation-metas"><primary>gst_query_get_n_allocation_metas</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_query_get_n_allocation_metas (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Retrieve the number of values currently stored in the
meta API array of the query's structure.</para>
<refsect3 id="gst-query-get-n-allocation-metas.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-n-allocation-metas.returns" role="returns">
<title>Returns</title>
<para> the metadata API array size as a <link linkend="guint"><type>guint</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-allocation-meta" role="function">
<title>gst_query_parse_nth_allocation_meta&#160;()</title>
<indexterm zone="gst-query-parse-nth-allocation-meta"><primary>gst_query_parse_nth_allocation_meta</primary></indexterm>
<programlisting language="C"><link linkend="GType"><returnvalue>GType</returnvalue></link>
gst_query_parse_nth_allocation_meta (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> index</parameter>,
                                     <parameter>const <link linkend="GstStructure"><type>GstStructure</type></link> **params</parameter>);</programlisting>
<para>Parse an available query and get the metadata API
at <parameter>index</parameter>
 of the metadata API array.</para>
<refsect3 id="gst-query-parse-nth-allocation-meta.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the metadata API array to read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>params</para></entry>
<entry role="parameter_description"><para> API specific flags. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-parse-nth-allocation-meta.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GType"><type>GType</type></link> of the metadata API at <parameter>index</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-remove-nth-allocation-meta" role="function">
<title>gst_query_remove_nth_allocation_meta&#160;()</title>
<indexterm zone="gst-query-remove-nth-allocation-meta"><primary>gst_query_remove_nth_allocation_meta</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_remove_nth_allocation_meta (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                      <parameter><link linkend="guint"><type>guint</type></link> index</parameter>);</programlisting>
<para>Remove the metadata API at <parameter>index</parameter>
 of the metadata API array.</para>
<refsect3 id="gst-query-remove-nth-allocation-meta.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the metadata API array to remove</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-find-allocation-meta" role="function">
<title>gst_query_find_allocation_meta&#160;()</title>
<indexterm zone="gst-query-find-allocation-meta"><primary>gst_query_find_allocation_meta</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_find_allocation_meta (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                <parameter><link linkend="GType"><type>GType</type></link> api</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> *index</parameter>);</programlisting>
<para>Check if <parameter>query</parameter>
 has metadata <parameter>api</parameter>
 set. When this function returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>,
<parameter>index</parameter>
 will contain the index where the requested API and the flags can be
found.</para>
<refsect3 id="gst-query-find-allocation-meta.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_ALLOCATION type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>api</para></entry>
<entry role="parameter_description"><para>the metadata API</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para> the index. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-find-allocation-meta.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when <parameter>api</parameter>
is in the list of metadata.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-scheduling" role="function">
<title>gst_query_new_scheduling&#160;()</title>
<indexterm zone="gst-query-new-scheduling"><primary>gst_query_new_scheduling</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_scheduling (<parameter><type>void</type></parameter>);</programlisting>
<para>Constructs a new query object for querying the scheduling properties.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-scheduling.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-scheduling" role="function">
<title>gst_query_parse_scheduling&#160;()</title>
<indexterm zone="gst-query-parse-scheduling"><primary>gst_query_parse_scheduling</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_scheduling (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                            <parameter><link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link> *flags</parameter>,
                            <parameter><link linkend="gint"><type>gint</type></link> *minsize</parameter>,
                            <parameter><link linkend="gint"><type>gint</type></link> *maxsize</parameter>,
                            <parameter><link linkend="gint"><type>gint</type></link> *align</parameter>);</programlisting>
<para>Set the scheduling properties.</para>
<refsect3 id="gst-query-parse-scheduling.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_SCHEDULING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para> <link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>minsize</para></entry>
<entry role="parameter_description"><para> the suggested minimum size of pull requests. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>maxsize</para></entry>
<entry role="parameter_description"><para> the suggested maximum size of pull requests:. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>align</para></entry>
<entry role="parameter_description"><para> the suggested alignment of pull requests. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-set-scheduling" role="function">
<title>gst_query_set_scheduling&#160;()</title>
<indexterm zone="gst-query-set-scheduling"><primary>gst_query_set_scheduling</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_scheduling (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                          <parameter><link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link> flags</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> minsize</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> maxsize</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> align</parameter>);</programlisting>
<para>Set the scheduling properties.</para>
<refsect3 id="gst-query-set-scheduling.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="GstQuery"><type>GstQuery</type></link> of type GST_QUERY_SCHEDULING.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para><link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>minsize</para></entry>
<entry role="parameter_description"><para>the suggested minimum size of pull requests</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>maxsize</para></entry>
<entry role="parameter_description"><para>the suggested maximum size of pull requests</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>align</para></entry>
<entry role="parameter_description"><para>the suggested alignment of pull requests</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-add-scheduling-mode" role="function">
<title>gst_query_add_scheduling_mode&#160;()</title>
<indexterm zone="gst-query-add-scheduling-mode"><primary>gst_query_add_scheduling_mode</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_add_scheduling_mode (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>);</programlisting>
<para>Add <parameter>mode</parameter>
 as one of the supported scheduling modes to <parameter>query</parameter>
.</para>
<refsect3 id="gst-query-add-scheduling-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SCHEDULING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadMode"><type>GstPadMode</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-query-get-n-scheduling-modes" role="function">
<title>gst_query_get_n_scheduling_modes&#160;()</title>
<indexterm zone="gst-query-get-n-scheduling-modes"><primary>gst_query_get_n_scheduling_modes</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_query_get_n_scheduling_modes (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Retrieve the number of values currently stored in the
scheduling mode array of the query's structure.</para>
<refsect3 id="gst-query-get-n-scheduling-modes.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SCHEDULING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-get-n-scheduling-modes.returns" role="returns">
<title>Returns</title>
<para> the scheduling mode array size as a <link linkend="guint"><type>guint</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-parse-nth-scheduling-mode" role="function">
<title>gst_query_parse_nth_scheduling_mode&#160;()</title>
<indexterm zone="gst-query-parse-nth-scheduling-mode"><primary>gst_query_parse_nth_scheduling_mode</primary></indexterm>
<programlisting language="C"><link linkend="GstPadMode"><returnvalue>GstPadMode</returnvalue></link>
gst_query_parse_nth_scheduling_mode (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> index</parameter>);</programlisting>
<para>Parse an available query and get the scheduling mode
at <parameter>index</parameter>
 of the scheduling modes array.</para>
<refsect3 id="gst-query-parse-nth-scheduling-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SCHEDULING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>position in the scheduling modes array to read</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-parse-nth-scheduling-mode.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstPadMode"><type>GstPadMode</type></link> of the scheduling mode at <parameter>index</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-has-scheduling-mode" role="function">
<title>gst_query_has_scheduling_mode&#160;()</title>
<indexterm zone="gst-query-has-scheduling-mode"><primary>gst_query_has_scheduling_mode</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_has_scheduling_mode (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                               <parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>);</programlisting>
<para>Check if <parameter>query</parameter>
 has scheduling mode set.</para>
<note>
  <para>
    When checking if upstream supports pull mode, it is usually not
    enough to just check for GST_PAD_MODE_PULL with this function, you
    also want to check whether the scheduling flags returned by
    <link linkend="gst-query-parse-scheduling"><function>gst_query_parse_scheduling()</function></link> have the seeking flag set (meaning
    random access is supported, not only sequential pulls).
  </para>
</note>
<refsect3 id="gst-query-has-scheduling-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SCHEDULING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>the scheduling mode</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-has-scheduling-mode.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when <parameter>mode</parameter>
is in the list of scheduling modes.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-has-scheduling-mode-with-flags" role="function">
<title>gst_query_has_scheduling_mode_with_flags&#160;()</title>
<indexterm zone="gst-query-has-scheduling-mode-with-flags"><primary>gst_query_has_scheduling_mode_with_flags</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_has_scheduling_mode_with_flags
                               (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                                <parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>,
                                <parameter><link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link> flags</parameter>);</programlisting>
<para>Check if <parameter>query</parameter>
 has scheduling mode set and <parameter>flags</parameter>
 is set in
query scheduling flags.</para>
<refsect3 id="gst-query-has-scheduling-mode-with-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_SCHEDULING type query <link linkend="GstQuery"><type>GstQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>the scheduling mode</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para><link linkend="GstSchedulingFlags"><type>GstSchedulingFlags</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-has-scheduling-mode-with-flags.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when <parameter>mode</parameter>
is in the list of scheduling modes
and <parameter>flags</parameter>
are compatible with query flags.</para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-drain" role="function">
<title>gst_query_new_drain&#160;()</title>
<indexterm zone="gst-query-new-drain"><primary>gst_query_new_drain</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_drain (<parameter><type>void</type></parameter>);</programlisting>
<para>Constructs a new query object for querying the drain state.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-drain.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-query-new-context" role="function" condition="since:1.2">
<title>gst_query_new_context&#160;()</title>
<indexterm zone="gst-query-new-context" role="1.2"><primary>gst_query_new_context</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_query_new_context (<parameter>const <link linkend="gchar"><type>gchar</type></link> *context_type</parameter>);</programlisting>
<para>Constructs a new query object for querying the pipeline-local context.</para>
<para>Free-function: gst_query_unref</para>
<refsect3 id="gst-query-new-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context_type</para></entry>
<entry role="parameter_description"><para>Context type to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-new-context.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstQuery"><type>GstQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-set-context" role="function" condition="since:1.2">
<title>gst_query_set_context&#160;()</title>
<indexterm zone="gst-query-set-context" role="1.2"><primary>gst_query_set_context</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_set_context (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                       <parameter><link linkend="GstContext"><type>GstContext</type></link> *context</parameter>);</programlisting>
<para>Answer a context query by setting the requested context.</para>
<refsect3 id="gst-query-set-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstQuery"><type>GstQuery</type></link> with query type GST_QUERY_CONTEXT</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>the requested <link linkend="GstContext"><type>GstContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-parse-context" role="function" condition="since:1.2">
<title>gst_query_parse_context&#160;()</title>
<indexterm zone="gst-query-parse-context" role="1.2"><primary>gst_query_parse_context</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_query_parse_context (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                         <parameter><link linkend="GstContext"><type>GstContext</type></link> **context</parameter>);</programlisting>
<para>Get the context from the context <parameter>query</parameter>
. The context remains valid as long as
<parameter>query</parameter>
 remains valid.</para>
<refsect3 id="gst-query-parse-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>The query to parse</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para> A pointer to store the <link linkend="GstContext"><type>GstContext</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-query-parse-context-type" role="function" condition="since:1.2">
<title>gst_query_parse_context_type&#160;()</title>
<indexterm zone="gst-query-parse-context-type" role="1.2"><primary>gst_query_parse_context_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_query_parse_context_type (<parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> **context_type</parameter>);</programlisting>
<para>Parse a context type from an existing GST_QUERY_CONTEXT query.</para>
<refsect3 id="gst-query-parse-context-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a GST_QUERY_CONTEXT type query</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context_type</para></entry>
<entry role="parameter_description"><para> the context type, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-query-parse-context-type.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gboolean"><type>gboolean</type></link> indicating if the parsing succeeded.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>

</refsect1>
<refsect1 id="GstQuery.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstQuery-struct" role="struct">
<title>struct GstQuery</title>
<indexterm zone="GstQuery-struct"><primary>GstQuery</primary></indexterm>
<programlisting language="C">struct GstQuery {
  GstMiniObject mini_object;

  GstQueryType type;
};
</programlisting>
<para>The <link linkend="GstQuery"><type>GstQuery</type></link> structure.</para>
<refsect3 id="GstQuery.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMiniObject"><type>GstMiniObject</type></link>&#160;<structfield id="GstQuery-struct.mini-object">mini_object</structfield>;</para></entry>
<entry role="struct_member_description"><para>The parent <link linkend="GstMiniObject"><type>GstMiniObject</type></link> type</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstQueryType"><type>GstQueryType</type></link>&#160;<structfield id="GstQuery-struct.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="GstQueryType"><type>GstQueryType</type></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstQueryTypeFlags" role="enum">
<title>enum GstQueryTypeFlags</title>
<indexterm zone="GstQueryTypeFlags"><primary>GstQueryTypeFlags</primary></indexterm>
<para><link linkend="GstQueryTypeFlags"><type>GstQueryTypeFlags</type></link> indicate the aspects of the different <link linkend="GstQueryType"><type>GstQueryType</type></link>
values. You can get the type flags of a <link linkend="GstQueryType"><type>GstQueryType</type></link> with the
<link linkend="gst-query-type-get-flags"><function>gst_query_type_get_flags()</function></link> function.</para>
<refsect3 id="GstQueryTypeFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-TYPE-UPSTREAM:CAPS">GST_QUERY_TYPE_UPSTREAM</para></entry>
<entry role="enum_member_description"><para>Set if the query can travel upstream.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-TYPE-DOWNSTREAM:CAPS">GST_QUERY_TYPE_DOWNSTREAM</para></entry>
<entry role="enum_member_description"><para>Set if the query can travel downstream.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-TYPE-SERIALIZED:CAPS">GST_QUERY_TYPE_SERIALIZED</para></entry>
<entry role="enum_member_description"><para>Set if the query should be serialized with data
                              flow.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-QUERY-TYPE-BOTH:CAPS" role="macro">
<title>GST_QUERY_TYPE_BOTH</title>
<indexterm zone="GST-QUERY-TYPE-BOTH:CAPS"><primary>GST_QUERY_TYPE_BOTH</primary></indexterm>
<programlisting language="C">#define             GST_QUERY_TYPE_BOTH</programlisting>
<para>The same thing as <link linkend="GST-QUERY-TYPE-UPSTREAM:CAPS"><type>GST_QUERY_TYPE_UPSTREAM</type></link> | <link linkend="GST-QUERY-TYPE-DOWNSTREAM:CAPS"><type>GST_QUERY_TYPE_DOWNSTREAM</type></link>.</para>
</refsect2>
<refsect2 id="GstQueryType" role="enum">
<title>enum GstQueryType</title>
<indexterm zone="GstQueryType"><primary>GstQueryType</primary></indexterm>
<para>Standard predefined Query types</para>
<refsect3 id="GstQueryType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-UNKNOWN:CAPS">GST_QUERY_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>unknown query type</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-POSITION:CAPS">GST_QUERY_POSITION</para></entry>
<entry role="enum_member_description"><para>current position in stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-DURATION:CAPS">GST_QUERY_DURATION</para></entry>
<entry role="enum_member_description"><para>total duration of the stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-LATENCY:CAPS">GST_QUERY_LATENCY</para></entry>
<entry role="enum_member_description"><para>latency of stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-JITTER:CAPS">GST_QUERY_JITTER</para></entry>
<entry role="enum_member_description"><para>current jitter of stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-RATE:CAPS">GST_QUERY_RATE</para></entry>
<entry role="enum_member_description"><para>current rate of the stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-SEEKING:CAPS">GST_QUERY_SEEKING</para></entry>
<entry role="enum_member_description"><para>seeking capabilities</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-SEGMENT:CAPS">GST_QUERY_SEGMENT</para></entry>
<entry role="enum_member_description"><para>segment start/stop positions</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-CONVERT:CAPS">GST_QUERY_CONVERT</para></entry>
<entry role="enum_member_description"><para>convert values between formats</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-FORMATS:CAPS">GST_QUERY_FORMATS</para></entry>
<entry role="enum_member_description"><para>query supported formats for convert</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-BUFFERING:CAPS">GST_QUERY_BUFFERING</para></entry>
<entry role="enum_member_description"><para>query available media for efficient seeking.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-CUSTOM:CAPS">GST_QUERY_CUSTOM</para></entry>
<entry role="enum_member_description"><para>a custom application or element defined query.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-URI:CAPS">GST_QUERY_URI</para></entry>
<entry role="enum_member_description"><para>query the URI of the source or sink.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-ALLOCATION:CAPS">GST_QUERY_ALLOCATION</para></entry>
<entry role="enum_member_description"><para>the buffer allocation properties</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-SCHEDULING:CAPS">GST_QUERY_SCHEDULING</para></entry>
<entry role="enum_member_description"><para>the scheduling properties</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-ACCEPT-CAPS">GST_QUERY_ACCEPT_CAPS</para></entry>
<entry role="enum_member_description"><para>the accept caps query</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-CAPS">GST_QUERY_CAPS</para></entry>
<entry role="enum_member_description"><para>the caps query</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-DRAIN:CAPS">GST_QUERY_DRAIN</para></entry>
<entry role="enum_member_description"><para>wait till all serialized data is consumed downstream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-QUERY-CONTEXT:CAPS">GST_QUERY_CONTEXT</para></entry>
<entry role="enum_member_description"><para>query the pipeline-local context from
    downstream or upstream (since 1.2)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstBufferingMode" role="enum">
<title>enum GstBufferingMode</title>
<indexterm zone="GstBufferingMode"><primary>GstBufferingMode</primary></indexterm>
<para>The different types of buffering methods.</para>
<refsect3 id="GstBufferingMode.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-BUFFERING-STREAM:CAPS">GST_BUFFERING_STREAM</para></entry>
<entry role="enum_member_description"><para>a small amount of data is buffered</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-BUFFERING-DOWNLOAD:CAPS">GST_BUFFERING_DOWNLOAD</para></entry>
<entry role="enum_member_description"><para>the stream is being downloaded</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-BUFFERING-TIMESHIFT:CAPS">GST_BUFFERING_TIMESHIFT</para></entry>
<entry role="enum_member_description"><para>the stream is being downloaded in a ringbuffer</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-BUFFERING-LIVE:CAPS">GST_BUFFERING_LIVE</para></entry>
<entry role="enum_member_description"><para>the stream is a live stream</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstSchedulingFlags" role="enum">
<title>enum GstSchedulingFlags</title>
<indexterm zone="GstSchedulingFlags"><primary>GstSchedulingFlags</primary></indexterm>
<para>The different scheduling flags.</para>
<refsect3 id="GstSchedulingFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-SCHEDULING-FLAG-SEEKABLE:CAPS">GST_SCHEDULING_FLAG_SEEKABLE</para></entry>
<entry role="enum_member_description"><para>if seeking is possible</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-SCHEDULING-FLAG-SEQUENTIAL:CAPS">GST_SCHEDULING_FLAG_SEQUENTIAL</para></entry>
<entry role="enum_member_description"><para>if sequential access is recommended</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-SCHEDULING-FLAG-BANDWIDTH-LIMITED:CAPS">GST_SCHEDULING_FLAG_BANDWIDTH_LIMITED</para></entry>
<entry role="enum_member_description"><para>if bandwidth is limited and buffering possible (since 1.2)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GstQuery.see-also">
<title>See Also</title>
<para><link linkend="GstPad"><type>GstPad</type></link>, <link linkend="GstElement"><type>GstElement</type></link></para>

</refsect1>

</refentry>
