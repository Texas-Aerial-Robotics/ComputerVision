<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstToc">
<refmeta>
<refentrytitle role="top_of_page" id="GstToc.top_of_page">GstToc</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstToc</refname>
<refpurpose>Generic table of contents support</refpurpose>
</refnamediv>

<refsect1 id="GstToc.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GstToc"><returnvalue>GstToc</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-new">gst_toc_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-ref">gst_toc_ref</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-unref">gst_toc_unref</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-copy">gst_toc_copy</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-make-writable">gst_toc_make_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTocScope"><returnvalue>GstTocScope</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-get-scope">gst_toc_get_scope</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-get-entries">gst_toc_get_entries</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-append-entry">gst_toc_append_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTagList"><returnvalue>GstTagList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-get-tags">gst_toc_get_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-merge-tags">gst_toc_merge_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-set-tags">gst_toc_set_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-dump">gst_toc_dump</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-new">gst_toc_entry_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-entry-ref">gst_toc_entry_ref</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-entry-unref">gst_toc_entry_unref</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-entry-copy">gst_toc_entry_copy</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-toc-entry-make-writable">gst_toc_entry_make_writable</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-find-entry">gst_toc_find_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstToc"><returnvalue>GstToc</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-toc">gst_toc_entry_get_toc</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-uid">gst_toc_entry_get_uid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-parent">gst_toc_entry_get_parent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-sub-entries">gst_toc_entry_get_sub_entries</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-append-sub-entry">gst_toc_entry_append_sub_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-loop">gst_toc_entry_get_loop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-set-loop">gst_toc_entry_set_loop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-start-stop-times">gst_toc_entry_get_start_stop_times</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-set-start-stop-times">gst_toc_entry_set_start_stop_times</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTagList"><returnvalue>GstTagList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-tags">gst_toc_entry_get_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-merge-tags">gst_toc_entry_merge_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-set-tags">gst_toc_entry_set_tags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-toc-entry-type-get-nick">gst_toc_entry_type_get_nick</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstTocEntryType"><returnvalue>GstTocEntryType</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-get-entry-type">gst_toc_entry_get_entry_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-is-alternative">gst_toc_entry_is_alternative</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-toc-entry-is-sequence">gst_toc_entry_is_sequence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-TOC-ENTRY-TYPE-IS-ALTERNATIVE:CAPS">GST_TOC_ENTRY_TYPE_IS_ALTERNATIVE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-TOC-ENTRY-TYPE-IS-SEQUENCE:CAPS">GST_TOC_ENTRY_TYPE_IS_SEQUENCE</link><phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<anchor id="GstTocEntry"/><refsect1 id="GstToc.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GstToc-struct">GstToc</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstTocScope">GstTocScope</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GstTocEntry-struct">GstTocEntry</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstTocEntryType">GstTocEntryType</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstTocLoopType">GstTocLoopType</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-TOC-REPEAT-COUNT-INFINITE:CAPS">GST_TOC_REPEAT_COUNT_INFINITE</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstToc.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GBoxed">GBoxed</link>
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GstToc
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstTocEntry
</screen>
</refsect1>

<refsect1 id="GstToc.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstToc.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstToc"><type>GstToc</type></link> functions are used to create/free <link linkend="GstToc"><type>GstToc</type></link> and <link linkend="GstTocEntry"><type>GstTocEntry</type></link> structures.
Also they are used to convert <link linkend="GstToc"><type>GstToc</type></link> into <link linkend="GstStructure"><type>GstStructure</type></link> and vice versa.</para>
<para><link linkend="GstToc"><type>GstToc</type></link> lets you to inform other elements in pipeline or application that playing
source has some kind of table of contents (TOC). These may be chapters, editions,
angles or other types. For example: DVD chapters, Matroska chapters or cue sheet
TOC. Such TOC will be useful for applications to display instead of just a
playlist.</para>
<para>Using TOC is very easy. Firstly, create <link linkend="GstToc"><type>GstToc</type></link> structure which represents root
contents of the source. You can also attach TOC-specific tags to it. Then fill
it with <link linkend="GstTocEntry"><type>GstTocEntry</type></link> entries by appending them to the <link linkend="GstToc"><type>GstToc</type></link> using
<link linkend="gst-toc-append-entry"><function>gst_toc_append_entry()</function></link>, and appending subentries to a <link linkend="GstTocEntry"><type>GstTocEntry</type></link> using
<link linkend="gst-toc-entry-append-sub-entry"><function>gst_toc_entry_append_sub_entry()</function></link>.</para>
<para>Note that root level of the TOC can contain only either editions or chapters. You
should not mix them together at the same level. Otherwise you will get serialization
/deserialization errors. Make sure that no one of the entries has negative start and
 stop values.</para>
<para>Use <link linkend="gst-event-new-toc"><function>gst_event_new_toc()</function></link> to create a new TOC <link linkend="GstEvent"><type>GstEvent</type></link>, and <link linkend="gst-event-parse-toc"><function>gst_event_parse_toc()</function></link> to
parse received TOC event. Use <link linkend="gst-event-new-toc-select"><function>gst_event_new_toc_select()</function></link> to create a new TOC select <link linkend="GstEvent"><type>GstEvent</type></link>,
and <link linkend="gst-event-parse-toc-select"><function>gst_event_parse_toc_select()</function></link> to parse received TOC select event. The same rule for
the <link linkend="GstMessage"><type>GstMessage</type></link>: <link linkend="gst-message-new-toc"><function>gst_message_new_toc()</function></link> to create new TOC <link linkend="GstMessage"><type>GstMessage</type></link>, and
<link linkend="gst-message-parse-toc"><function>gst_message_parse_toc()</function></link> to parse received TOC message.</para>
<para>TOCs can have global scope or current scope. Global scope TOCs contain
all entries that can possibly be selected using a toc select event, and
are what an application is usually interested in. TOCs with current scope
only contain the parts of the TOC relevant to the currently selected/playing
stream; the current scope TOC is used by downstream elements such as muxers
to write correct TOC entries when transcoding files, for example. When
playing a DVD, the global TOC would contain a hierarchy of all titles,
chapters and angles, for example, while the current TOC would only contain
the chapters for the currently playing title if playback of a specific
title was requested.</para>
<para>Applications and plugins should not rely on TOCs having a certain kind of
structure, but should allow for different alternatives. For example, a
simple CUE sheet embedded in a file may be presented as a flat list of
track entries, or could have a top-level edition node (or some other
alternative type entry) with track entries underneath that node; or even
multiple top-level edition nodes (or some other alternative type entries)
each with track entries underneath, in case the source file has extracted
a track listing from different sources).</para>

</refsect1>
<refsect1 id="GstToc.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-toc-new" role="function">
<title>gst_toc_new&#160;()</title>
<indexterm zone="gst-toc-new"><primary>gst_toc_new</primary></indexterm>
<programlisting language="C"><link linkend="GstToc"><returnvalue>GstToc</returnvalue></link>&#160;*
gst_toc_new (<parameter><link linkend="GstTocScope"><type>GstTocScope</type></link> scope</parameter>);</programlisting>
<para>Create a new <link linkend="GstToc"><type>GstToc</type></link> structure.</para>
<refsect3 id="gst-toc-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>scope</para></entry>
<entry role="parameter_description"><para>scope of this TOC</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-new.returns" role="returns">
<title>Returns</title>
<para> newly allocated <link linkend="GstToc"><type>GstToc</type></link> structure, free it
with <link linkend="gst-toc-unref"><function>gst_toc_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-ref" role="macro">
<title>gst_toc_ref()</title>
<indexterm zone="gst-toc-ref"><primary>gst_toc_ref</primary></indexterm>
<programlisting language="C">#define gst_toc_ref(toc)            (GstToc*)gst_mini_object_ref(GST_MINI_OBJECT_CAST(toc))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-unref" role="macro">
<title>gst_toc_unref()</title>
<indexterm zone="gst-toc-unref"><primary>gst_toc_unref</primary></indexterm>
<programlisting language="C">#define gst_toc_unref(toc)          gst_mini_object_unref(GST_MINI_OBJECT_CAST(toc))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-copy" role="macro">
<title>gst_toc_copy()</title>
<indexterm zone="gst-toc-copy"><primary>gst_toc_copy</primary></indexterm>
<programlisting language="C">#define gst_toc_copy(toc)           (GstToc*)gst_mini_object_copy(GST_MINI_OBJECT_CAST(toc))
</programlisting>
<para>Copy <link linkend="GstToc"><type>GstToc</type></link> with all subentries (deep copy).</para>
<refsect3 id="gst-toc-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para><link linkend="GstToc"><type>GstToc</type></link> to copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-copy.returns" role="returns">
<title>Returns</title>
<para> newly allocated <link linkend="GstToc"><type>GstToc</type></link> in case of success,
<link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise; free it when done with <link linkend="gst-toc-unref"><function>gst_toc_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-make-writable" role="macro">
<title>gst_toc_make_writable()</title>
<indexterm zone="gst-toc-make-writable"><primary>gst_toc_make_writable</primary></indexterm>
<programlisting language="C">#define gst_toc_make_writable(toc)  (GstToc*)gst_mini_object_make_writable(GST_MINI_OBJECT_CAST(toc))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-get-scope" role="function">
<title>gst_toc_get_scope&#160;()</title>
<indexterm zone="gst-toc-get-scope"><primary>gst_toc_get_scope</primary></indexterm>
<programlisting language="C"><link linkend="GstTocScope"><returnvalue>GstTocScope</returnvalue></link>
gst_toc_get_scope (<parameter>const <link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>);</programlisting>
<refsect3 id="gst-toc-get-scope.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-get-scope.returns" role="returns">
<title>Returns</title>
<para> scope of <parameter>toc</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-toc-get-entries" role="function">
<title>gst_toc_get_entries&#160;()</title>
<indexterm zone="gst-toc-get-entries"><primary>gst_toc_get_entries</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
gst_toc_get_entries (<parameter>const <link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>);</programlisting>
<para>Gets the list of <link linkend="GstTocEntry"><type>GstTocEntry</type></link> of <parameter>toc</parameter>
.</para>
<refsect3 id="gst-toc-get-entries.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-get-entries.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GList"><type>GList</type></link> of <link linkend="GstTocEntry"><type>GstTocEntry</type></link> for <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>element-type</acronym> Gst.TocEntry]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-append-entry" role="function">
<title>gst_toc_append_entry&#160;()</title>
<indexterm zone="gst-toc-append-entry"><primary>gst_toc_append_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_append_entry (<parameter><link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>,
                      <parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Appends the <link linkend="GstTocEntry"><type>GstTocEntry</type></link> <parameter>entry</parameter>
 to <parameter>toc</parameter>
.</para>
<refsect3 id="gst-toc-append-entry.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTocEntry"><type>GstTocEntry</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-get-tags" role="function">
<title>gst_toc_get_tags&#160;()</title>
<indexterm zone="gst-toc-get-tags"><primary>gst_toc_get_tags</primary></indexterm>
<programlisting language="C"><link linkend="GstTagList"><returnvalue>GstTagList</returnvalue></link>&#160;*
gst_toc_get_tags (<parameter>const <link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>);</programlisting>
<para>Gets the tags for <parameter>toc</parameter>
.</para>
<refsect3 id="gst-toc-get-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-get-tags.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GstTagList"><type>GstTagList</type></link> for <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-merge-tags" role="function">
<title>gst_toc_merge_tags&#160;()</title>
<indexterm zone="gst-toc-merge-tags"><primary>gst_toc_merge_tags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_merge_tags (<parameter><link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>,
                    <parameter><link linkend="GstTagList"><type>GstTagList</type></link> *tags</parameter>,
                    <parameter><link linkend="GstTagMergeMode"><type>GstTagMergeMode</type></link> mode</parameter>);</programlisting>
<para>Merge <parameter>tags</parameter>
 into the existing tags of <parameter>toc</parameter>
 using <parameter>mode</parameter>
.</para>
<refsect3 id="gst-toc-merge-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tags</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTagList"><type>GstTagList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTagMergeMode"><type>GstTagMergeMode</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-set-tags" role="function">
<title>gst_toc_set_tags&#160;()</title>
<indexterm zone="gst-toc-set-tags"><primary>gst_toc_set_tags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_set_tags (<parameter><link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>,
                  <parameter><link linkend="GstTagList"><type>GstTagList</type></link> *tags</parameter>);</programlisting>
<para>Set a <link linkend="GstTagList"><type>GstTagList</type></link> with tags for the complete <parameter>toc</parameter>
.</para>
<refsect3 id="gst-toc-set-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstToc"><type>GstToc</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tags</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTagList"><type>GstTagList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-dump" role="function">
<title>gst_toc_dump&#160;()</title>
<indexterm zone="gst-toc-dump"><primary>gst_toc_dump</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_dump (<parameter><link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-toc-entry-new" role="function">
<title>gst_toc_entry_new&#160;()</title>
<indexterm zone="gst-toc-entry-new"><primary>gst_toc_entry_new</primary></indexterm>
<programlisting language="C"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
gst_toc_entry_new (<parameter><link linkend="GstTocEntryType"><type>GstTocEntryType</type></link> type</parameter>,
                   <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>Create new <link linkend="GstTocEntry"><type>GstTocEntry</type></link> structure.</para>
<refsect3 id="gst-toc-entry-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>entry type.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uid</para></entry>
<entry role="parameter_description"><para>unique ID (UID) in the whole TOC.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-new.returns" role="returns">
<title>Returns</title>
<para> newly allocated <link linkend="GstTocEntry"><type>GstTocEntry</type></link> structure, free it with <link linkend="gst-toc-entry-unref"><function>gst_toc_entry_unref()</function></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-ref" role="macro">
<title>gst_toc_entry_ref()</title>
<indexterm zone="gst-toc-entry-ref"><primary>gst_toc_entry_ref</primary></indexterm>
<programlisting language="C">#define gst_toc_entry_ref(entry)            (GstTocEntry*)gst_mini_object_ref(GST_MINI_OBJECT_CAST(entry))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-entry-unref" role="macro">
<title>gst_toc_entry_unref()</title>
<indexterm zone="gst-toc-entry-unref"><primary>gst_toc_entry_unref</primary></indexterm>
<programlisting language="C">#define gst_toc_entry_unref(entry)          gst_mini_object_unref(GST_MINI_OBJECT_CAST(entry))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-entry-copy" role="macro">
<title>gst_toc_entry_copy()</title>
<indexterm zone="gst-toc-entry-copy"><primary>gst_toc_entry_copy</primary></indexterm>
<programlisting language="C">#define gst_toc_entry_copy(entry)           (GstTocEntry*)gst_mini_object_copy(GST_MINI_OBJECT_CAST(entry))
</programlisting>
<para>Copy <link linkend="GstTocEntry"><type>GstTocEntry</type></link> with all subentries (deep copy).</para>
<refsect3 id="gst-toc-entry-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para><link linkend="GstTocEntry"><type>GstTocEntry</type></link> to copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-copy.returns" role="returns">
<title>Returns</title>
<para> newly allocated <link linkend="GstTocEntry"><type>GstTocEntry</type></link> in case of
success, <link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise; free it when done with
<link linkend="gst-toc-entry-unref"><function>gst_toc_entry_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-make-writable" role="macro">
<title>gst_toc_entry_make_writable()</title>
<indexterm zone="gst-toc-entry-make-writable"><primary>gst_toc_entry_make_writable</primary></indexterm>
<programlisting language="C">#define gst_toc_entry_make_writable(entry)  (GstTocEntry*)gst_mini_object_make_writable(GST_MINI_OBJECT_CAST(entry))
</programlisting>
</refsect2>
<refsect2 id="gst-toc-find-entry" role="function">
<title>gst_toc_find_entry&#160;()</title>
<indexterm zone="gst-toc-find-entry"><primary>gst_toc_find_entry</primary></indexterm>
<programlisting language="C"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
gst_toc_find_entry (<parameter>const <link linkend="GstToc"><type>GstToc</type></link> *toc</parameter>,
                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>Find <link linkend="GstTocEntry"><type>GstTocEntry</type></link> with given <parameter>uid</parameter>
 in the <parameter>toc</parameter>
.</para>
<refsect3 id="gst-toc-find-entry.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>toc</para></entry>
<entry role="parameter_description"><para><link linkend="GstToc"><type>GstToc</type></link> to search in.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uid</para></entry>
<entry role="parameter_description"><para>UID to find <link linkend="GstTocEntry"><type>GstTocEntry</type></link> with.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-find-entry.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GstTocEntry"><type>GstTocEntry</type></link> with specified
<parameter>uid</parameter>
from the <parameter>toc</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not found. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-toc" role="function">
<title>gst_toc_entry_get_toc&#160;()</title>
<indexterm zone="gst-toc-entry-get-toc"><primary>gst_toc_entry_get_toc</primary></indexterm>
<programlisting language="C"><link linkend="GstToc"><returnvalue>GstToc</returnvalue></link>&#160;*
gst_toc_entry_get_toc (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Gets the parent <link linkend="GstToc"><type>GstToc</type></link> of <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-get-toc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-toc.returns" role="returns">
<title>Returns</title>
<para> The parent <link linkend="GstToc"><type>GstToc</type></link> of <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-uid" role="function">
<title>gst_toc_entry_get_uid&#160;()</title>
<indexterm zone="gst-toc-entry-get-uid"><primary>gst_toc_entry_get_uid</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_toc_entry_get_uid (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Gets the UID of <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-get-uid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-uid.returns" role="returns">
<title>Returns</title>
<para> The UID of <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-parent" role="function">
<title>gst_toc_entry_get_parent&#160;()</title>
<indexterm zone="gst-toc-entry-get-parent"><primary>gst_toc_entry_get_parent</primary></indexterm>
<programlisting language="C"><link linkend="GstTocEntry"><returnvalue>GstTocEntry</returnvalue></link>&#160;*
gst_toc_entry_get_parent (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Gets the parent <link linkend="GstTocEntry"><type>GstTocEntry</type></link> of <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-get-parent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-parent.returns" role="returns">
<title>Returns</title>
<para> The parent <link linkend="GstTocEntry"><type>GstTocEntry</type></link> of <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-sub-entries" role="function">
<title>gst_toc_entry_get_sub_entries&#160;()</title>
<indexterm zone="gst-toc-entry-get-sub-entries"><primary>gst_toc_entry_get_sub_entries</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
gst_toc_entry_get_sub_entries (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Gets the sub-entries of <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-get-sub-entries.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-sub-entries.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GList"><type>GList</type></link> of <link linkend="GstTocEntry"><type>GstTocEntry</type></link> of <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>element-type</acronym> Gst.TocEntry]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-append-sub-entry" role="function">
<title>gst_toc_entry_append_sub_entry&#160;()</title>
<indexterm zone="gst-toc-entry-append-sub-entry"><primary>gst_toc_entry_append_sub_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_entry_append_sub_entry (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                                <parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *subentry</parameter>);</programlisting>
<para>Appends the <link linkend="GstTocEntry"><type>GstTocEntry</type></link> <parameter>subentry</parameter>
 to <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-append-sub-entry.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>subentry</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTocEntry"><type>GstTocEntry</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-loop" role="function" condition="since:1.4">
<title>gst_toc_entry_get_loop&#160;()</title>
<indexterm zone="gst-toc-entry-get-loop" role="1.4"><primary>gst_toc_entry_get_loop</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_toc_entry_get_loop (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                        <parameter><link linkend="GstTocLoopType"><type>GstTocLoopType</type></link> *loop_type</parameter>,
                        <parameter><link linkend="gint"><type>gint</type></link> *repeat_count</parameter>);</programlisting>
<para>Get <parameter>loop_type</parameter>
 and <parameter>repeat_count</parameter>
 values from the <parameter>entry</parameter>
 and write them into
appropriate storages. Loops are e.g. used by sampled instruments. GStreamer
is not automatically applying the loop. The application can process this
meta data and use it e.g. to send a seek-event to loop a section.</para>
<refsect3 id="gst-toc-entry-get-loop.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para><link linkend="GstTocEntry"><type>GstTocEntry</type></link> to get values from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>loop_type</para></entry>
<entry role="parameter_description"><para> the storage for the loop_type
value, leave <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not need. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>repeat_count</para></entry>
<entry role="parameter_description"><para> the storage for the repeat_count
value, leave <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not need. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-loop.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if all non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> storage pointers were filled with appropriate
values, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-toc-entry-set-loop" role="function" condition="since:1.4">
<title>gst_toc_entry_set_loop&#160;()</title>
<indexterm zone="gst-toc-entry-set-loop" role="1.4"><primary>gst_toc_entry_set_loop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_entry_set_loop (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                        <parameter><link linkend="GstTocLoopType"><type>GstTocLoopType</type></link> loop_type</parameter>,
                        <parameter><link linkend="gint"><type>gint</type></link> repeat_count</parameter>);</programlisting>
<para>Set <parameter>loop_type</parameter>
 and <parameter>repeat_count</parameter>
 values for the <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-set-loop.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para><link linkend="GstTocEntry"><type>GstTocEntry</type></link> to set values.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>loop_type</para></entry>
<entry role="parameter_description"><para>loop_type value to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>repeat_count</para></entry>
<entry role="parameter_description"><para>repeat_count value to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="gst-toc-entry-get-start-stop-times" role="function">
<title>gst_toc_entry_get_start_stop_times&#160;()</title>
<indexterm zone="gst-toc-entry-get-start-stop-times"><primary>gst_toc_entry_get_start_stop_times</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_toc_entry_get_start_stop_times (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                                    <parameter><link linkend="gint64"><type>gint64</type></link> *start</parameter>,
                                    <parameter><link linkend="gint64"><type>gint64</type></link> *stop</parameter>);</programlisting>
<para>Get <parameter>start</parameter>
 and <parameter>stop</parameter>
 values from the <parameter>entry</parameter>
 and write them into appropriate
storages.</para>
<refsect3 id="gst-toc-entry-get-start-stop-times.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para><link linkend="GstTocEntry"><type>GstTocEntry</type></link> to get values from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para> the storage for the start value, leave
<link linkend="NULL:CAPS"><literal>NULL</literal></link> if not need. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para> the storage for the stop value, leave
<link linkend="NULL:CAPS"><literal>NULL</literal></link> if not need. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-start-stop-times.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if all non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> storage pointers were filled with appropriate
values, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-set-start-stop-times" role="function">
<title>gst_toc_entry_set_start_stop_times&#160;()</title>
<indexterm zone="gst-toc-entry-set-start-stop-times"><primary>gst_toc_entry_set_start_stop_times</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_entry_set_start_stop_times (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                                    <parameter><link linkend="gint64"><type>gint64</type></link> start</parameter>,
                                    <parameter><link linkend="gint64"><type>gint64</type></link> stop</parameter>);</programlisting>
<para>Set <parameter>start</parameter>
 and <parameter>stop</parameter>
 values for the <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-set-start-stop-times.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para><link linkend="GstTocEntry"><type>GstTocEntry</type></link> to set values.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>start value to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para>stop value to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-tags" role="function">
<title>gst_toc_entry_get_tags&#160;()</title>
<indexterm zone="gst-toc-entry-get-tags"><primary>gst_toc_entry_get_tags</primary></indexterm>
<programlisting language="C"><link linkend="GstTagList"><returnvalue>GstTagList</returnvalue></link>&#160;*
gst_toc_entry_get_tags (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<para>Gets the tags for <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-get-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-tags.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GstTagList"><type>GstTagList</type></link> for <parameter>entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-merge-tags" role="function">
<title>gst_toc_entry_merge_tags&#160;()</title>
<indexterm zone="gst-toc-entry-merge-tags"><primary>gst_toc_entry_merge_tags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_entry_merge_tags (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                          <parameter><link linkend="GstTagList"><type>GstTagList</type></link> *tags</parameter>,
                          <parameter><link linkend="GstTagMergeMode"><type>GstTagMergeMode</type></link> mode</parameter>);</programlisting>
<para>Merge <parameter>tags</parameter>
 into the existing tags of <parameter>entry</parameter>
 using <parameter>mode</parameter>
.</para>
<refsect3 id="gst-toc-entry-merge-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tags</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTagList"><type>GstTagList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTagMergeMode"><type>GstTagMergeMode</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-set-tags" role="function">
<title>gst_toc_entry_set_tags&#160;()</title>
<indexterm zone="gst-toc-entry-set-tags"><primary>gst_toc_entry_set_tags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_toc_entry_set_tags (<parameter><link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>,
                        <parameter><link linkend="GstTagList"><type>GstTagList</type></link> *tags</parameter>);</programlisting>
<para>Set a <link linkend="GstTagList"><type>GstTagList</type></link> with tags for the complete <parameter>entry</parameter>
.</para>
<refsect3 id="gst-toc-entry-set-tags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstTocEntry"><type>GstTocEntry</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tags</para></entry>
<entry role="parameter_description"><para> A <link linkend="GstTagList"><type>GstTagList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-type-get-nick" role="function">
<title>gst_toc_entry_type_get_nick&#160;()</title>
<indexterm zone="gst-toc-entry-type-get-nick"><primary>gst_toc_entry_type_get_nick</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_toc_entry_type_get_nick (<parameter><link linkend="GstTocEntryType"><type>GstTocEntryType</type></link> type</parameter>);</programlisting>
<para>Converts <parameter>type</parameter>
 to a string representation.</para>
<refsect3 id="gst-toc-entry-type-get-nick.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstTocEntryType"><type>GstTocEntryType</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-type-get-nick.returns" role="returns">
<title>Returns</title>
<para> Returns a human-readable string for <parameter>type</parameter>
. This string is
only for debugging purpose and should not be displayed in a user
interface.</para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-get-entry-type" role="function">
<title>gst_toc_entry_get_entry_type&#160;()</title>
<indexterm zone="gst-toc-entry-get-entry-type"><primary>gst_toc_entry_get_entry_type</primary></indexterm>
<programlisting language="C"><link linkend="GstTocEntryType"><returnvalue>GstTocEntryType</returnvalue></link>
gst_toc_entry_get_entry_type (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<refsect3 id="gst-toc-entry-get-entry-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstTocEntry"><type>GstTocEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-get-entry-type.returns" role="returns">
<title>Returns</title>
<para> <parameter>entry</parameter>
's entry type</para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-is-alternative" role="function">
<title>gst_toc_entry_is_alternative&#160;()</title>
<indexterm zone="gst-toc-entry-is-alternative"><primary>gst_toc_entry_is_alternative</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_toc_entry_is_alternative (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<refsect3 id="gst-toc-entry-is-alternative.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstTocEntry"><type>GstTocEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-is-alternative.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>entry</parameter>
's type is an alternative type, otherwise <link linkend="FALSE:CAPS"><literal>FALSE</literal></link></para>
</refsect3></refsect2>
<refsect2 id="gst-toc-entry-is-sequence" role="function">
<title>gst_toc_entry_is_sequence&#160;()</title>
<indexterm zone="gst-toc-entry-is-sequence"><primary>gst_toc_entry_is_sequence</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_toc_entry_is_sequence (<parameter>const <link linkend="GstTocEntry"><type>GstTocEntry</type></link> *entry</parameter>);</programlisting>
<refsect3 id="gst-toc-entry-is-sequence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstTocEntry"><type>GstTocEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-toc-entry-is-sequence.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>entry</parameter>
's type is a sequence type, otherwise <link linkend="FALSE:CAPS"><literal>FALSE</literal></link></para>
</refsect3></refsect2>
<refsect2 id="GST-TOC-ENTRY-TYPE-IS-ALTERNATIVE:CAPS" role="macro">
<title>GST_TOC_ENTRY_TYPE_IS_ALTERNATIVE()</title>
<indexterm zone="GST-TOC-ENTRY-TYPE-IS-ALTERNATIVE:CAPS"><primary>GST_TOC_ENTRY_TYPE_IS_ALTERNATIVE</primary></indexterm>
<programlisting language="C">#define GST_TOC_ENTRY_TYPE_IS_ALTERNATIVE(entry_type)  (entry_type &lt; 0)
</programlisting>
<para>Checks if <parameter>entry_type</parameter>
 indicates that its <link linkend="GstTocEntry"><type>GstTocEntry</type></link> is an alternative.</para>
<refsect3 id="GST-TOC-ENTRY-TYPE-IS-ALTERNATIVE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry_type</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstTocEntryType"><type>GstTocEntryType</type></link> from a <link linkend="GstTocEntry"><type>GstTocEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-TOC-ENTRY-TYPE-IS-SEQUENCE:CAPS" role="macro">
<title>GST_TOC_ENTRY_TYPE_IS_SEQUENCE()</title>
<indexterm zone="GST-TOC-ENTRY-TYPE-IS-SEQUENCE:CAPS"><primary>GST_TOC_ENTRY_TYPE_IS_SEQUENCE</primary></indexterm>
<programlisting language="C">#define GST_TOC_ENTRY_TYPE_IS_SEQUENCE(entry_type)     (entry_type &gt; 0)
</programlisting>
<para>Checks if <parameter>entry_type</parameter>
 indicates that its <link linkend="GstTocEntry"><type>GstTocEntry</type></link> is a sequence.</para>
<refsect3 id="GST-TOC-ENTRY-TYPE-IS-SEQUENCE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>entry_type</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstTocEntryType"><type>GstTocEntryType</type></link> from a <link linkend="GstTocEntry"><type>GstTocEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GstToc.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstToc-struct" role="struct">
<title>GstToc</title>
<indexterm zone="GstToc-struct"><primary>GstToc</primary></indexterm>
<programlisting language="C">typedef struct _GstToc GstToc;</programlisting>
</refsect2>
<refsect2 id="GstTocScope" role="enum">
<title>enum GstTocScope</title>
<indexterm zone="GstTocScope"><primary>GstTocScope</primary></indexterm>
<para>The scope of a TOC.</para>
<refsect3 id="GstTocScope.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-SCOPE-GLOBAL:CAPS">GST_TOC_SCOPE_GLOBAL</para></entry>
<entry role="enum_member_description"><para>global TOC representing all selectable options
    (this is what applications are usually interested in)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-SCOPE-CURRENT:CAPS">GST_TOC_SCOPE_CURRENT</para></entry>
<entry role="enum_member_description"><para>TOC for the currently active/selected stream
    (this is a TOC representing the current stream from start to EOS,
    and is what a TOC writer / muxer is usually interested in; it will
    usually be a subset of the global TOC, e.g. just the chapters of
    the current title, or the chapters selected for playback from the
    current title)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstTocEntry-struct" role="struct">
<title>GstTocEntry</title>
<indexterm zone="GstTocEntry-struct"><primary>GstTocEntry</primary></indexterm>
<programlisting language="C">typedef struct _GstTocEntry GstTocEntry;</programlisting>
</refsect2>
<refsect2 id="GstTocEntryType" role="enum">
<title>enum GstTocEntryType</title>
<indexterm zone="GstTocEntryType"><primary>GstTocEntryType</primary></indexterm>
<para>The different types of TOC entries (see <link linkend="GstTocEntry"><type>GstTocEntry</type></link>).</para>
<para>There are two types of TOC entries: alternatives or parts in a sequence.</para>
<refsect3 id="GstTocEntryType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-ANGLE:CAPS">GST_TOC_ENTRY_TYPE_ANGLE</para></entry>
<entry role="enum_member_description"><para>entry is an angle (i.e. an alternative)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-VERSION:CAPS">GST_TOC_ENTRY_TYPE_VERSION</para></entry>
<entry role="enum_member_description"><para>entry is a version (i.e. alternative)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-EDITION:CAPS">GST_TOC_ENTRY_TYPE_EDITION</para></entry>
<entry role="enum_member_description"><para>entry is an edition (i.e. alternative)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-INVALID:CAPS">GST_TOC_ENTRY_TYPE_INVALID</para></entry>
<entry role="enum_member_description"><para>invalid entry type value</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-TITLE:CAPS">GST_TOC_ENTRY_TYPE_TITLE</para></entry>
<entry role="enum_member_description"><para>entry is a title (i.e. a part of a sequence)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-TRACK:CAPS">GST_TOC_ENTRY_TYPE_TRACK</para></entry>
<entry role="enum_member_description"><para>entry is a track (i.e. a part of a sequence)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-ENTRY-TYPE-CHAPTER:CAPS">GST_TOC_ENTRY_TYPE_CHAPTER</para></entry>
<entry role="enum_member_description"><para>entry is a chapter (i.e. a part of a sequence)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstTocLoopType" role="enum" condition="since:1.4">
<title>enum GstTocLoopType</title>
<indexterm zone="GstTocLoopType" role="1.4"><primary>GstTocLoopType</primary></indexterm>
<para>How a <link linkend="GstTocEntry"><type>GstTocEntry</type></link> should be repeated. By default, entries are played a
single time.</para>
<refsect3 id="GstTocLoopType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-LOOP-NONE:CAPS">GST_TOC_LOOP_NONE</para></entry>
<entry role="enum_member_description"><para>single forward playback</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-LOOP-FORWARD:CAPS">GST_TOC_LOOP_FORWARD</para></entry>
<entry role="enum_member_description"><para>repeat forward</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-LOOP-REVERSE:CAPS">GST_TOC_LOOP_REVERSE</para></entry>
<entry role="enum_member_description"><para>repeat backward</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-TOC-LOOP-PING-PONG:CAPS">GST_TOC_LOOP_PING_PONG</para></entry>
<entry role="enum_member_description"><para>repeat forward and backward</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="GST-TOC-REPEAT-COUNT-INFINITE:CAPS" role="macro" condition="since:1.4">
<title>GST_TOC_REPEAT_COUNT_INFINITE</title>
<indexterm zone="GST-TOC-REPEAT-COUNT-INFINITE:CAPS" role="1.4"><primary>GST_TOC_REPEAT_COUNT_INFINITE</primary></indexterm>
<programlisting language="C">#define GST_TOC_REPEAT_COUNT_INFINITE (-1)
</programlisting>
<para>Special value for the repeat_count set in <link linkend="gst-toc-entry-set-loop"><function>gst_toc_entry_set_loop()</function></link> or
returned by <link linkend="gst-toc-entry-set-loop"><function>gst_toc_entry_set_loop()</function></link> to indicate infinite looping.</para>
<para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>

</refsect1>
<refsect1 id="GstToc.see-also">
<title>See Also</title>
<para><link linkend="GstStructure"><type>GstStructure</type></link>, <link linkend="GstEvent"><type>GstEvent</type></link>, <link linkend="GstMessage"><type>GstMessage</type></link>, <link linkend="GstQuery"><type>GstQuery</type></link></para>

</refsect1>

</refentry>
