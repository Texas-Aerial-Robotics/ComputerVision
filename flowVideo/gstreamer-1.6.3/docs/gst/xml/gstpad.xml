<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstPad">
<refmeta>
<refentrytitle role="top_of_page" id="GstPad.top_of_page">GstPad</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstPad</refname>
<refpurpose>Object contained by elements that allows links to
                    other elements</refpurpose>
</refnamediv>

<refsect1 id="GstPad.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-link-get-name">gst_pad_link_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-LINK-FAILED:CAPS">GST_PAD_LINK_FAILED</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-LINK-SUCCESSFUL:CAPS">GST_PAD_LINK_SUCCESSFUL</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-flow-get-name">gst_flow_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-flow-to-quark">gst_flow_to_quark</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-mode-get-name">gst_pad_mode_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-store-sticky-event">gst_pad_store_sticky_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-get-name">gst_pad_get_name</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadDirection"><returnvalue>GstPadDirection</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-get-direction">gst_pad_get_direction</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-get-parent">gst_pad_get_parent</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstElement"><returnvalue>GstElement</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-parent-element">gst_pad_get_parent_element</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-pad-template">gst_pad_get_pad_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-link">gst_pad_link</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-link-full">gst_pad_link_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-unlink">gst_pad_unlink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-is-linked">gst_pad_is_linked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-can-link">gst_pad_can_link</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-allowed-caps">gst_pad_get_allowed_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-current-caps">gst_pad_get_current_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-pad-template-caps">gst_pad_get_pad_template_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-peer">gst_pad_get_peer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-use-fixed-caps">gst_pad_use_fixed_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-has-current-caps">gst_pad_has_current_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-sticky-event">gst_pad_get_sticky_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadStickyEventsForeachFunction">*GstPadStickyEventsForeachFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-sticky-events-foreach">gst_pad_sticky_events_foreach</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-is-active">gst_pad_is_active</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-get-last-flow-return">gst_pad_get_last_flow_return</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-TYPE:CAPS">GST_PAD_PROBE_INFO_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-ID:CAPS">GST_PAD_PROBE_INFO_ID</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-DATA:CAPS">GST_PAD_PROBE_INFO_DATA</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-BUFFER:CAPS">GST_PAD_PROBE_INFO_BUFFER</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-BUFFER-LIST:CAPS">GST_PAD_PROBE_INFO_BUFFER_LIST</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-EVENT:CAPS">GST_PAD_PROBE_INFO_EVENT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-QUERY:CAPS">GST_PAD_PROBE_INFO_QUERY</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-probe-info-get-buffer">gst_pad_probe_info_get_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBufferList"><returnvalue>GstBufferList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-probe-info-get-buffer-list">gst_pad_probe_info_get_buffer_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-probe-info-get-event">gst_pad_probe_info_get_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-probe-info-get-query">gst_pad_probe_info_get_query</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-OFFSET:CAPS">GST_PAD_PROBE_INFO_OFFSET</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PROBE-INFO-SIZE:CAPS">GST_PAD_PROBE_INFO_SIZE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadProbeReturn"><returnvalue>GstPadProbeReturn</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadProbeCallback">*GstPadProbeCallback</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gulong"><returnvalue>gulong</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-add-probe">gst_pad_add_probe</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-remove-probe">gst_pad_remove_probe</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-is-blocked">gst_pad_is_blocked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-is-blocking">gst_pad_is_blocking</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-get-offset">gst_pad_get_offset</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-offset">gst_pad_set_offset</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-new">gst_pad_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-new-from-template">gst_pad_new_from_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-new-from-static-template">gst_pad_new_from_static_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-chain-function">gst_pad_set_chain_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-chain-function-full">gst_pad_set_chain_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadChainFunction">*GstPadChainFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-chain-list-function">gst_pad_set_chain_list_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-chain-list-function-full">gst_pad_set_chain_list_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadChainListFunction">*GstPadChainListFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-get-range">gst_pad_get_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-getrange-function">gst_pad_set_getrange_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-getrange-function-full">gst_pad_set_getrange_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadGetRangeFunction">*GstPadGetRangeFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-event-function">gst_pad_set_event_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-event-function-full">gst_pad_set_event_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadEventFunction">*GstPadEventFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-link-function">gst_pad_set_link_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-link-function-full">gst_pad_set_link_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadLinkFunction">*GstPadLinkFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-unlink-function">gst_pad_set_unlink_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-unlink-function-full">gst_pad_set_unlink_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadUnlinkFunction">*GstPadUnlinkFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-proxy-query-caps">gst_pad_proxy_query_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-proxy-query-accept-caps">gst_pad_proxy_query_accept_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-activate-function">gst_pad_set_activate_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-activate-function-full">gst_pad_set_activate_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadActivateFunction">*GstPadActivateFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-activatemode-function">gst_pad_set_activatemode_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-activatemode-function-full">gst_pad_set_activatemode_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadActivateModeFunction">*GstPadActivateModeFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-needs-reconfigure">gst_pad_needs_reconfigure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-check-reconfigure">gst_pad_check_reconfigure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-mark-reconfigure">gst_pad_mark_reconfigure</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-push">gst_pad_push</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-push-event">gst_pad_push_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-push-list">gst_pad_push_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-pull-range">gst_pad_pull_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-activate-mode">gst_pad_activate_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-send-event">gst_pad_send_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-event-default">gst_pad_event_default</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query">gst_pad_query</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-peer-query">gst_pad_peer_query</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query-default">gst_pad_query_default</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query-position">gst_pad_query_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query-duration">gst_pad_query_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query-convert">gst_pad_query_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-query-accept-caps">gst_pad_query_accept_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-query-caps">gst_pad_query_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-peer-query-position">gst_pad_peer_query_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-peer-query-duration">gst_pad_peer_query_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-peer-query-convert">gst_pad_peer_query_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-peer-query-accept-caps">gst_pad_peer_query_accept_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-peer-query-caps">gst_pad_peer_query_caps</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-query-function">gst_pad_set_query_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-query-function-full">gst_pad_set_query_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadQueryFunction">*GstPadQueryFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-pad-set-iterate-internal-links-function">gst_pad_set_iterate_internal_links_function</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-iterate-internal-links-function-full">gst_pad_set_iterate_internal_links_function_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadIterIntLinkFunction">*GstPadIterIntLinkFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-iterate-internal-links">gst_pad_iterate_internal_links</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-iterate-internal-links-default">gst_pad_iterate_internal_links_default</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-element-private">gst_pad_set_element_private</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-get-element-private">gst_pad_get_element_private</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-create-stream-id">gst_pad_create_stream_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-create-stream-id-printf">gst_pad_create_stream_id_printf</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-create-stream-id-printf-valist">gst_pad_create_stream_id_printf_valist</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-pad-get-stream-id">gst_pad_get_stream_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstPadForwardFunction">*GstPadForwardFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-forward">gst_pad_forward</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-chain">gst_pad_chain</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-chain-list">gst_pad_chain_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-start-task">gst_pad_start_task</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-pause-task">gst_pad_pause_task</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-stop-task">gst_pad_stop_task</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-pad-set-active">gst_pad_set_active</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-GET-STREAM-LOCK:CAPS">GST_PAD_GET_STREAM_LOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-STREAM-LOCK:CAPS">GST_PAD_STREAM_LOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-STREAM-TRYLOCK:CAPS">GST_PAD_STREAM_TRYLOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-STREAM-UNLOCK:CAPS">GST_PAD_STREAM_UNLOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-NAME:CAPS">GST_PAD_NAME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PARENT:CAPS">GST_PAD_PARENT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-ELEMENT-PRIVATE:CAPS">GST_PAD_ELEMENT_PRIVATE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PAD-TEMPLATE:CAPS">GST_PAD_PAD_TEMPLATE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-DIRECTION:CAPS">GST_PAD_DIRECTION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-LAST-FLOW-RETURN:CAPS">GST_PAD_LAST_FLOW_RETURN</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-TASK:CAPS">GST_PAD_TASK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-MODE:CAPS">GST_PAD_MODE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-ACTIVATEFUNC:CAPS">GST_PAD_ACTIVATEFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-ACTIVATEMODEFUNC:CAPS">GST_PAD_ACTIVATEMODEFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-CHAINFUNC:CAPS">GST_PAD_CHAINFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-CHAINLISTFUNC:CAPS">GST_PAD_CHAINLISTFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-EVENTFUNC:CAPS">GST_PAD_EVENTFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-GETRANGEFUNC:CAPS">GST_PAD_GETRANGEFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-QUERYFUNC:CAPS">GST_PAD_QUERYFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-ITERINTLINKFUNC:CAPS">GST_PAD_ITERINTLINKFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-PEER:CAPS">GST_PAD_PEER</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-LINKFUNC:CAPS">GST_PAD_LINKFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNLINKFUNC:CAPS">GST_PAD_UNLINKFUNC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-LINKED:CAPS">GST_PAD_IS_LINKED</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-SRC:CAPS">GST_PAD_IS_SRC</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-SINK:CAPS">GST_PAD_IS_SINK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-ACTIVE:CAPS">GST_PAD_IS_ACTIVE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-BLOCKED:CAPS">GST_PAD_IS_BLOCKED</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-BLOCKING:CAPS">GST_PAD_IS_BLOCKING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-FLUSHING:CAPS">GST_PAD_IS_FLUSHING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-FLUSHING:CAPS">GST_PAD_SET_FLUSHING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-FLUSHING:CAPS">GST_PAD_UNSET_FLUSHING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-EOS:CAPS">GST_PAD_IS_EOS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-NEEDS-RECONFIGURE:CAPS">GST_PAD_NEEDS_RECONFIGURE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-HAS-PENDING-EVENTS:CAPS">GST_PAD_HAS_PENDING_EVENTS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-FIXED-CAPS">GST_PAD_IS_FIXED_CAPS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-NEEDS-PARENT:CAPS">GST_PAD_NEEDS_PARENT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-PROXY-CAPS">GST_PAD_IS_PROXY_CAPS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-PROXY-CAPS">GST_PAD_SET_PROXY_CAPS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-PROXY-CAPS">GST_PAD_UNSET_PROXY_CAPS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-PROXY-ALLOCATION:CAPS">GST_PAD_IS_PROXY_ALLOCATION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-PROXY-ALLOCATION:CAPS">GST_PAD_SET_PROXY_ALLOCATION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-PROXY-ALLOCATION:CAPS">GST_PAD_UNSET_PROXY_ALLOCATION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-PROXY-SCHEDULING:CAPS">GST_PAD_SET_PROXY_SCHEDULING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-PROXY-SCHEDULING:CAPS">GST_PAD_UNSET_PROXY_SCHEDULING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-PROXY-SCHEDULING:CAPS">GST_PAD_IS_PROXY_SCHEDULING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-ACCEPT-INTERSECT:CAPS">GST_PAD_IS_ACCEPT_INTERSECT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-ACCEPT-INTERSECT:CAPS">GST_PAD_SET_ACCEPT_INTERSECT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-ACCEPT-INTERSECT:CAPS">GST_PAD_UNSET_ACCEPT_INTERSECT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-IS-ACCEPT-TEMPLATE:CAPS">GST_PAD_IS_ACCEPT_TEMPLATE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-SET-ACCEPT-TEMPLATE:CAPS">GST_PAD_SET_ACCEPT_TEMPLATE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-PAD-UNSET-ACCEPT-TEMPLATE:CAPS">GST_PAD_UNSET_ACCEPT_TEMPLATE</link><phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstPad.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GstCaps"><type>GstCaps</type></link>&#160;*</entry><entry role="property_name"><link linkend="GstPad--caps">caps</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GstPadDirection"><type>GstPadDirection</type></link></entry><entry role="property_name"><link linkend="GstPad--direction">direction</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="gint64"><type>gint64</type></link></entry><entry role="property_name"><link linkend="GstPad--offset">offset</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>&#160;*</entry><entry role="property_name"><link linkend="GstPad--template">template</link></entry><entry role="property_flags">Read / Write</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstPad.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GstPad-linked">linked</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GstPad-unlinked">unlinked</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstPad.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstPad-struct">GstPad</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadDirection">GstPadDirection</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadFlags">GstPadFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadLinkReturn">GstPadLinkReturn</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadLinkCheck">GstPadLinkCheck</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstFlowReturn">GstFlowReturn</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadMode">GstPadMode</link></entry></row>


<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadProbeReturn">GstPadProbeReturn</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstPadProbeType">GstPadProbeType</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstPadProbeInfo">GstPadProbeInfo</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstPad.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstPad
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstProxyPad">GstProxyPad</link>
</screen>
</refsect1>

<refsect1 id="GstPad.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstPad.description" role="desc">
<title role="desc.title">Description</title>
<para>A <link linkend="GstElement"><type>GstElement</type></link> is linked to other elements via "pads", which are extremely
light-weight generic link points.</para>
<para>Pads have a <link linkend="GstPadDirection"><type>GstPadDirection</type></link>, source pads produce data, sink pads consume
data.</para>
<para>Pads are typically created from a <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> with
<link linkend="gst-pad-new-from-template"><function>gst_pad_new_from_template()</function></link> and are then added to a <link linkend="GstElement"><type>GstElement</type></link>. This usually
happens when the element is created but it can also happen dynamically based
on the data that the element is processing or based on the pads that the
application requests.</para>
<para>Pads without pad templates can be created with <link linkend="gst-pad-new"><function>gst_pad_new()</function></link>,
which takes a direction and a name as an argument.  If the name is <link linkend="NULL:CAPS"><literal>NULL</literal></link>,
then a guaranteed unique name will be assigned to it.</para>
<para>A <link linkend="GstElement"><type>GstElement</type></link> creating a pad will typically use the various
gst_pad_set_*_function() calls to register callbacks for events, queries or
dataflow on the pads.</para>
<para>gst_pad_get_parent() will retrieve the <link linkend="GstElement"><type>GstElement</type></link> that owns the pad.</para>
<para>After two pads are retrieved from an element by <link linkend="gst-element-get-static-pad"><function>gst_element_get_static_pad()</function></link>,
the pads can be linked with <link linkend="gst-pad-link"><function>gst_pad_link()</function></link>. (For quick links,
you can also use <link linkend="gst-element-link"><function>gst_element_link()</function></link>, which will make the obvious
link for you if it's straightforward.). Pads can be unlinked again with
<link linkend="gst-pad-unlink"><function>gst_pad_unlink()</function></link>. <link linkend="gst-pad-get-peer"><function>gst_pad_get_peer()</function></link> can be used to check what the pad is
linked to.</para>
<para>Before dataflow is possible on the pads, they need to be activated with
<link linkend="gst-pad-set-active"><function>gst_pad_set_active()</function></link>.</para>
<para>gst_pad_query() and <link linkend="gst-pad-peer-query"><function>gst_pad_peer_query()</function></link> can be used to query various
properties of the pad and the stream.</para>
<para>To send a <link linkend="GstEvent"><type>GstEvent</type></link> on a pad, use <link linkend="gst-pad-send-event"><function>gst_pad_send_event()</function></link> and
<link linkend="gst-pad-push-event"><function>gst_pad_push_event()</function></link>. Some events will be sticky on the pad, meaning that
after they pass on the pad they can be queried later with
<link linkend="gst-pad-get-sticky-event"><function>gst_pad_get_sticky_event()</function></link> and <link linkend="gst-pad-sticky-events-foreach"><function>gst_pad_sticky_events_foreach()</function></link>.
<link linkend="gst-pad-get-current-caps"><function>gst_pad_get_current_caps()</function></link> and <link linkend="gst-pad-has-current-caps"><function>gst_pad_has_current_caps()</function></link> are convenience
functions to query the current sticky CAPS event on a pad.</para>
<para>GstElements will use <link linkend="gst-pad-push"><function>gst_pad_push()</function></link> and <link linkend="gst-pad-pull-range"><function>gst_pad_pull_range()</function></link> to push out
or pull in a buffer.</para>
<para>The dataflow, events and queries that happen on a pad can be monitored with
probes that can be installed with <link linkend="gst-pad-add-probe"><function>gst_pad_add_probe()</function></link>. <link linkend="gst-pad-is-blocked"><function>gst_pad_is_blocked()</function></link>
can be used to check if a block probe is installed on the pad.
<link linkend="gst-pad-is-blocking"><function>gst_pad_is_blocking()</function></link> checks if the blocking probe is currently blocking the
pad. <link linkend="gst-pad-remove-probe"><function>gst_pad_remove_probe()</function></link> is used to remove a previously installed probe
and unblock blocking probes if any.</para>
<para>Pad have an offset that can be retrieved with <link linkend="gst-pad-get-offset"><function>gst_pad_get_offset()</function></link>. This
offset will be applied to the running_time of all data passing over the pad.
<link linkend="gst-pad-set-offset"><function>gst_pad_set_offset()</function></link> can be used to change the offset.</para>
<para>Convenience functions exist to start, pause and stop the task on a pad with
<link linkend="gst-pad-start-task"><function>gst_pad_start_task()</function></link>, <link linkend="gst-pad-pause-task"><function>gst_pad_pause_task()</function></link> and <link linkend="gst-pad-stop-task"><function>gst_pad_stop_task()</function></link>
respectively.</para>

</refsect1>
<refsect1 id="GstPad.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-pad-link-get-name" role="function" condition="since:1.4">
<title>gst_pad_link_get_name&#160;()</title>
<indexterm zone="gst-pad-link-get-name" role="1.4"><primary>gst_pad_link_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_link_get_name (<parameter><link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> ret</parameter>);</programlisting>
<para>Gets a string representing the given pad-link return.</para>
<refsect3 id="gst-pad-link-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> to get the name of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-link-get-name.returns" role="returns">
<title>Returns</title>
<para> a static string with the name of the pad-link return.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="GST-PAD-LINK-FAILED:CAPS" role="macro">
<title>GST_PAD_LINK_FAILED()</title>
<indexterm zone="GST-PAD-LINK-FAILED:CAPS"><primary>GST_PAD_LINK_FAILED</primary></indexterm>
<programlisting language="C">#define GST_PAD_LINK_FAILED(ret) ((ret) &lt; GST_PAD_LINK_OK)
</programlisting>
<para>Macro to test if the given <link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> value indicates a failed
link step.</para>
<refsect3 id="GST-PAD-LINK-FAILED.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-LINK-SUCCESSFUL:CAPS" role="macro">
<title>GST_PAD_LINK_SUCCESSFUL()</title>
<indexterm zone="GST-PAD-LINK-SUCCESSFUL:CAPS"><primary>GST_PAD_LINK_SUCCESSFUL</primary></indexterm>
<programlisting language="C">#define GST_PAD_LINK_SUCCESSFUL(ret) ((ret) &gt;= GST_PAD_LINK_OK)
</programlisting>
<para>Macro to test if the given <link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> value indicates a successful
link step.</para>
<refsect3 id="GST-PAD-LINK-SUCCESSFUL.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadLinkReturn"><type>GstPadLinkReturn</type></link> value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-flow-get-name" role="function">
<title>gst_flow_get_name&#160;()</title>
<indexterm zone="gst-flow-get-name"><primary>gst_flow_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_flow_get_name (<parameter><link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> ret</parameter>);</programlisting>
<para>Gets a string representing the given flow return.</para>
<refsect3 id="gst-flow-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> to get the name of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-flow-get-name.returns" role="returns">
<title>Returns</title>
<para> a static string with the name of the flow return.</para>
</refsect3></refsect2>
<refsect2 id="gst-flow-to-quark" role="function">
<title>gst_flow_to_quark&#160;()</title>
<indexterm zone="gst-flow-to-quark"><primary>gst_flow_to_quark</primary></indexterm>
<programlisting language="C"><link linkend="GQuark"><returnvalue>GQuark</returnvalue></link>
gst_flow_to_quark (<parameter><link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> ret</parameter>);</programlisting>
<para>Get the unique quark for the given GstFlowReturn.</para>
<refsect3 id="gst-flow-to-quark.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> to get the quark of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-flow-to-quark.returns" role="returns">
<title>Returns</title>
<para> the quark associated with the flow return or 0 if an
invalid return was specified.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-mode-get-name" role="function">
<title>gst_pad_mode_get_name&#160;()</title>
<indexterm zone="gst-pad-mode-get-name"><primary>gst_pad_mode_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_mode_get_name (<parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>);</programlisting>
<para>Return the name of a pad mode, for use in debug messages mostly.</para>
<refsect3 id="gst-pad-mode-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>the pad mode</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-mode-get-name.returns" role="returns">
<title>Returns</title>
<para> short mnemonic for pad mode <parameter>mode</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-store-sticky-event" role="function" condition="since:1.2">
<title>gst_pad_store_sticky_event&#160;()</title>
<indexterm zone="gst-pad-store-sticky-event" role="1.2"><primary>gst_pad_store_sticky_event</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_store_sticky_event (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                            <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Store the sticky <parameter>event</parameter>
 on <parameter>pad</parameter>
</para>
<refsect3 id="gst-pad-store-sticky-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstEvent"><type>GstEvent</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-store-sticky-event.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link> on success, <link linkend="GST-FLOW-FLUSHING:CAPS"><type>GST_FLOW_FLUSHING</type></link> when the pad
was flushing or <link linkend="GST-FLOW-EOS:CAPS"><type>GST_FLOW_EOS</type></link> when the pad was EOS.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="gst-pad-get-name" role="macro">
<title>gst_pad_get_name()</title>
<indexterm zone="gst-pad-get-name"><primary>gst_pad_get_name</primary></indexterm>
<programlisting language="C">#define gst_pad_get_name(pad) gst_object_get_name (GST_OBJECT_CAST (pad))
</programlisting>
<para>Get a copy of the name of the pad. <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
<para>MT safe.</para>
<refsect3 id="gst-pad-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the pad to get the name from</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-direction" role="function">
<title>gst_pad_get_direction&#160;()</title>
<indexterm zone="gst-pad-get-direction"><primary>gst_pad_get_direction</primary></indexterm>
<programlisting language="C"><link linkend="GstPadDirection"><returnvalue>GstPadDirection</returnvalue></link>
gst_pad_get_direction (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the direction of the pad. The direction of the pad is
decided at construction time so this function does not take
the LOCK.</para>
<refsect3 id="gst-pad-get-direction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to get the direction of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-direction.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstPadDirection"><type>GstPadDirection</type></link> of the pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-parent" role="macro">
<title>gst_pad_get_parent()</title>
<indexterm zone="gst-pad-get-parent"><primary>gst_pad_get_parent</primary></indexterm>
<programlisting language="C">#define gst_pad_get_parent(pad) gst_object_get_parent (GST_OBJECT_CAST (pad))
</programlisting>
<para>Get the parent of <parameter>pad</parameter>
. This function increases the refcount
of the parent object so you should <link linkend="gst-object-unref"><function>gst_object_unref()</function></link> it after usage.
Can return <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the pad did not have a parent.</para>
<para>MT safe.</para>
<refsect3 id="gst-pad-get-parent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the pad to get the parent of</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-parent.returns" role="returns">
<title>Returns</title>
<para> the parent. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-parent-element" role="function">
<title>gst_pad_get_parent_element&#160;()</title>
<indexterm zone="gst-pad-get-parent-element"><primary>gst_pad_get_parent_element</primary></indexterm>
<programlisting language="C"><link linkend="GstElement"><returnvalue>GstElement</returnvalue></link>&#160;*
gst_pad_get_parent_element (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the parent of <parameter>pad</parameter>
, cast to a <link linkend="GstElement"><type>GstElement</type></link>. If a <parameter>pad</parameter>
 has no parent or
its parent is not an element, return <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-pad-get-parent-element.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a pad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-parent-element.returns" role="returns">
<title>Returns</title>
<para> the parent of the pad. The
caller has a reference on the parent, so unref when you're finished
with it.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-pad-template" role="function">
<title>gst_pad_get_pad_template&#160;()</title>
<indexterm zone="gst-pad-get-pad-template"><primary>gst_pad_get_pad_template</primary></indexterm>
<programlisting language="C"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
gst_pad_get_pad_template (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the template for <parameter>pad</parameter>
.</para>
<refsect3 id="gst-pad-get-pad-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-pad-template.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> from which
this pad was instantiated, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if this pad has no
template. Unref after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-link" role="function">
<title>gst_pad_link&#160;()</title>
<indexterm zone="gst-pad-link"><primary>gst_pad_link</primary></indexterm>
<programlisting language="C"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
gst_pad_link (<parameter><link linkend="GstPad"><type>GstPad</type></link> *srcpad</parameter>,
              <parameter><link linkend="GstPad"><type>GstPad</type></link> *sinkpad</parameter>);</programlisting>
<para>Links the source pad and the sink pad.</para>
<refsect3 id="gst-pad-link.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>srcpad</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstPad"><type>GstPad</type></link> to link.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sinkpad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link> to link.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-link.returns" role="returns">
<title>Returns</title>
<para> A result code indicating if the connection worked or
what went wrong.</para>
<para>MT Safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-link-full" role="function">
<title>gst_pad_link_full&#160;()</title>
<indexterm zone="gst-pad-link-full"><primary>gst_pad_link_full</primary></indexterm>
<programlisting language="C"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
gst_pad_link_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *srcpad</parameter>,
                   <parameter><link linkend="GstPad"><type>GstPad</type></link> *sinkpad</parameter>,
                   <parameter><link linkend="GstPadLinkCheck"><type>GstPadLinkCheck</type></link> flags</parameter>);</programlisting>
<para>Links the source pad and the sink pad.</para>
<para>This variant of <link linkend="gst-pad-link"><type>gst_pad_link</type></link> provides a more granular control on the
checks being done when linking. While providing some considerable speedups
the caller of this method must be aware that wrong usage of those flags
can cause severe issues. Refer to the documentation of <link linkend="GstPadLinkCheck"><type>GstPadLinkCheck</type></link>
for more information.</para>
<para>MT Safe.</para>
<refsect3 id="gst-pad-link-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>srcpad</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstPad"><type>GstPad</type></link> to link.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sinkpad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link> to link.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the checks to validate when linking</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-link-full.returns" role="returns">
<title>Returns</title>
<para> A result code indicating if the connection worked or
what went wrong.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-unlink" role="function">
<title>gst_pad_unlink&#160;()</title>
<indexterm zone="gst-pad-unlink"><primary>gst_pad_unlink</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_unlink (<parameter><link linkend="GstPad"><type>GstPad</type></link> *srcpad</parameter>,
                <parameter><link linkend="GstPad"><type>GstPad</type></link> *sinkpad</parameter>);</programlisting>
<para>Unlinks the source pad from the sink pad. Will emit the <link linkend="GstPad-unlinked"><type>“unlinked”</type></link>
signal on both pads.</para>
<refsect3 id="gst-pad-unlink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>srcpad</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstPad"><type>GstPad</type></link> to unlink.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sinkpad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link> to unlink.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-unlink.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads were unlinked. This function returns <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if
the pads were not linked together.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-is-linked" role="function">
<title>gst_pad_is_linked&#160;()</title>
<indexterm zone="gst-pad-is-linked"><primary>gst_pad_is_linked</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_is_linked (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Checks if a <parameter>pad</parameter>
 is linked to another pad or not.</para>
<refsect3 id="gst-pad-is-linked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>pad to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-is-linked.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-can-link" role="function">
<title>gst_pad_can_link&#160;()</title>
<indexterm zone="gst-pad-can-link"><primary>gst_pad_can_link</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_can_link (<parameter><link linkend="GstPad"><type>GstPad</type></link> *srcpad</parameter>,
                  <parameter><link linkend="GstPad"><type>GstPad</type></link> *sinkpad</parameter>);</programlisting>
<para>Checks if the source pad and the sink pad are compatible so they can be
linked.</para>
<refsect3 id="gst-pad-can-link.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>srcpad</para></entry>
<entry role="parameter_description"><para>the source <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sinkpad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-can-link.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads can be linked.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-allowed-caps" role="function">
<title>gst_pad_get_allowed_caps&#160;()</title>
<indexterm zone="gst-pad-get-allowed-caps"><primary>gst_pad_get_allowed_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
gst_pad_get_allowed_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the capabilities of the allowed media types that can flow through
<parameter>pad</parameter>
 and its peer.</para>
<para>The allowed capabilities is calculated as the intersection of the results of
calling <link linkend="gst-pad-query-caps"><function>gst_pad_query_caps()</function></link> on <parameter>pad</parameter>
 and its peer. The caller owns a reference
on the resulting caps.</para>
<refsect3 id="gst-pad-get-allowed-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-allowed-caps.returns" role="returns">
<title>Returns</title>
<para> the allowed <link linkend="GstCaps"><type>GstCaps</type></link> of the
pad link. Unref the caps when you no longer need it. This
function returns <link linkend="NULL:CAPS"><literal>NULL</literal></link> when <parameter>pad</parameter>
has no peer.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-current-caps" role="function">
<title>gst_pad_get_current_caps&#160;()</title>
<indexterm zone="gst-pad-get-current-caps"><primary>gst_pad_get_current_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
gst_pad_get_current_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the capabilities currently configured on <parameter>pad</parameter>
 with the last
<link linkend="GST-EVENT-CAPS"><type>GST_EVENT_CAPS</type></link> event.</para>
<refsect3 id="gst-pad-get-current-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a  <link linkend="GstPad"><type>GstPad</type></link> to get the current capabilities of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-current-caps.returns" role="returns">
<title>Returns</title>
<para> the current caps of the pad with incremented ref-count.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-pad-template-caps" role="function">
<title>gst_pad_get_pad_template_caps&#160;()</title>
<indexterm zone="gst-pad-get-pad-template-caps"><primary>gst_pad_get_pad_template_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
gst_pad_get_pad_template_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the capabilities for <parameter>pad</parameter>
's template.</para>
<refsect3 id="gst-pad-get-pad-template-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to get the template capabilities from.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-pad-template-caps.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstCaps"><type>GstCaps</type></link> of this pad template.
Unref after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-peer" role="function">
<title>gst_pad_get_peer&#160;()</title>
<indexterm zone="gst-pad-get-peer"><primary>gst_pad_get_peer</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_pad_get_peer (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the peer of <parameter>pad</parameter>
. This function refs the peer pad so
you need to unref it after use.</para>
<refsect3 id="gst-pad-get-peer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to get the peer of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-peer.returns" role="returns">
<title>Returns</title>
<para> the peer <link linkend="GstPad"><type>GstPad</type></link>. Unref after usage.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-use-fixed-caps" role="function">
<title>gst_pad_use_fixed_caps&#160;()</title>
<indexterm zone="gst-pad-use-fixed-caps"><primary>gst_pad_use_fixed_caps</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_use_fixed_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>A helper function you can use that sets the FIXED_CAPS flag
This way the default CAPS query will always return the negotiated caps
or in case the pad is not negotiated, the padtemplate caps.</para>
<para>The negotiated caps are the caps of the last CAPS event that passed on the
pad. Use this function on a pad that, once it negotiated to a CAPS, cannot
be renegotiated to something else.</para>
<refsect3 id="gst-pad-use-fixed-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the pad to use</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-has-current-caps" role="function">
<title>gst_pad_has_current_caps&#160;()</title>
<indexterm zone="gst-pad-has-current-caps"><primary>gst_pad_has_current_caps</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_has_current_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Check if <parameter>pad</parameter>
 has caps set on it with a <link linkend="GST-EVENT-CAPS"><type>GST_EVENT_CAPS</type></link> event.</para>
<refsect3 id="gst-pad-has-current-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a  <link linkend="GstPad"><type>GstPad</type></link> to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-has-current-caps.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when <parameter>pad</parameter>
has caps associated with it.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-sticky-event" role="function">
<title>gst_pad_get_sticky_event&#160;()</title>
<indexterm zone="gst-pad-get-sticky-event"><primary>gst_pad_get_sticky_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_pad_get_sticky_event (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                          <parameter><link linkend="GstEventType"><type>GstEventType</type></link> event_type</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> idx</parameter>);</programlisting>
<para>Returns a new reference of the sticky event of type <parameter>event_type</parameter>

from the event.</para>
<refsect3 id="gst-pad-get-sticky-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to get the event from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event_type</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstEventType"><type>GstEventType</type></link> that should be retrieved.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>idx</para></entry>
<entry role="parameter_description"><para>the index of the event</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-sticky-event.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstEvent"><type>GstEvent</type></link> of type
<parameter>event_type</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> when no event of <parameter>event_type</parameter>
was on
<parameter>pad</parameter>
. Unref after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="GstPadStickyEventsForeachFunction" role="function">
<title>GstPadStickyEventsForeachFunction&#160;()</title>
<indexterm zone="GstPadStickyEventsForeachFunction"><primary>GstPadStickyEventsForeachFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadStickyEventsForeachFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                      <parameter><link linkend="GstEvent"><type>GstEvent</type></link> **event</parameter>,
                                      <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Callback used by <link linkend="gst-pad-sticky-events-foreach"><function>gst_pad_sticky_events_foreach()</function></link>.</para>
<para>When this function returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the next event will be
returned. When <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> is returned, <link linkend="gst-pad-sticky-events-foreach"><function>gst_pad_sticky_events_foreach()</function></link> will return.</para>
<para>When <parameter>event</parameter>
 is set to <link linkend="NULL:CAPS"><literal>NULL</literal></link>, the item will be removed from the list of sticky events.
<parameter>event</parameter>
 can be replaced by assigning a new reference to it.
This function is responsible for unreffing the old event when
removing or modifying.</para>
<refsect3 id="GstPadStickyEventsForeachFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> a sticky <link linkend="GstEvent"><type>GstEvent</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the <link linkend="gpointer"><type>gpointer</type></link> to optional user data.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadStickyEventsForeachFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the iteration should continue</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-sticky-events-foreach" role="function">
<title>gst_pad_sticky_events_foreach&#160;()</title>
<indexterm zone="gst-pad-sticky-events-foreach"><primary>gst_pad_sticky_events_foreach</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_sticky_events_foreach (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                               <parameter><link linkend="GstPadStickyEventsForeachFunction"><type>GstPadStickyEventsForeachFunction</type></link> foreach_func</parameter>,
                               <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Iterates all sticky events on <parameter>pad</parameter>
 and calls <parameter>foreach_func</parameter>
 for every
event. If <parameter>foreach_func</parameter>
 returns <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> the iteration is immediately stopped.</para>
<refsect3 id="gst-pad-sticky-events-foreach.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> that should be used for iteration.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>foreach_func</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstPadStickyEventsForeachFunction"><type>GstPadStickyEventsForeachFunction</type></link> that
should be called for every event. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope call</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para> the optional user data. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-is-active" role="function">
<title>gst_pad_is_active&#160;()</title>
<indexterm zone="gst-pad-is-active"><primary>gst_pad_is_active</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_is_active (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Query if a pad is active</para>
<refsect3 id="gst-pad-is-active.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-is-active.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is active.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-last-flow-return" role="function" condition="since:1.4">
<title>gst_pad_get_last_flow_return&#160;()</title>
<indexterm zone="gst-pad-get-last-flow-return" role="1.4"><primary>gst_pad_get_last_flow_return</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_get_last_flow_return (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> return from the last data passed by this pad.</para>
<refsect3 id="gst-pad-get-last-flow-return.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-TYPE:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_TYPE()</title>
<indexterm zone="GST-PAD-PROBE-INFO-TYPE:CAPS"><primary>GST_PAD_PROBE_INFO_TYPE</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_TYPE(d)         ((d)-&gt;type)
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-ID:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_ID()</title>
<indexterm zone="GST-PAD-PROBE-INFO-ID:CAPS"><primary>GST_PAD_PROBE_INFO_ID</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_ID(d)           ((d)-&gt;id)
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-DATA:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_DATA()</title>
<indexterm zone="GST-PAD-PROBE-INFO-DATA:CAPS"><primary>GST_PAD_PROBE_INFO_DATA</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_DATA(d)         ((d)-&gt;data)
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-BUFFER:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_BUFFER()</title>
<indexterm zone="GST-PAD-PROBE-INFO-BUFFER:CAPS"><primary>GST_PAD_PROBE_INFO_BUFFER</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_BUFFER(d)       GST_BUFFER_CAST(GST_PAD_PROBE_INFO_DATA(d))
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-BUFFER-LIST:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_BUFFER_LIST()</title>
<indexterm zone="GST-PAD-PROBE-INFO-BUFFER-LIST:CAPS"><primary>GST_PAD_PROBE_INFO_BUFFER_LIST</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_BUFFER_LIST(d)  GST_BUFFER_LIST_CAST(GST_PAD_PROBE_INFO_DATA(d))
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-EVENT:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_EVENT()</title>
<indexterm zone="GST-PAD-PROBE-INFO-EVENT:CAPS"><primary>GST_PAD_PROBE_INFO_EVENT</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_EVENT(d)        GST_EVENT_CAST(GST_PAD_PROBE_INFO_DATA(d))
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-QUERY:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_QUERY()</title>
<indexterm zone="GST-PAD-PROBE-INFO-QUERY:CAPS"><primary>GST_PAD_PROBE_INFO_QUERY</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_QUERY(d)        GST_QUERY_CAST(GST_PAD_PROBE_INFO_DATA(d))
</programlisting>
</refsect2>
<refsect2 id="gst-pad-probe-info-get-buffer" role="function">
<title>gst_pad_probe_info_get_buffer&#160;()</title>
<indexterm zone="gst-pad-probe-info-get-buffer"><primary>gst_pad_probe_info_get_buffer</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_pad_probe_info_get_buffer (<parameter><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link> *info</parameter>);</programlisting>
<refsect3 id="gst-pad-probe-info-get-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-probe-info-get-buffer.returns" role="returns">
<title>Returns</title>
<para> The <link linkend="GstBuffer"><type>GstBuffer</type></link> from the probe. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-probe-info-get-buffer-list" role="function">
<title>gst_pad_probe_info_get_buffer_list&#160;()</title>
<indexterm zone="gst-pad-probe-info-get-buffer-list"><primary>gst_pad_probe_info_get_buffer_list</primary></indexterm>
<programlisting language="C"><link linkend="GstBufferList"><returnvalue>GstBufferList</returnvalue></link>&#160;*
gst_pad_probe_info_get_buffer_list (<parameter><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link> *info</parameter>);</programlisting>
<refsect3 id="gst-pad-probe-info-get-buffer-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-probe-info-get-buffer-list.returns" role="returns">
<title>Returns</title>
<para> The <link linkend="GstBufferlist"><type>GstBufferlist</type></link> from the probe. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-probe-info-get-event" role="function">
<title>gst_pad_probe_info_get_event&#160;()</title>
<indexterm zone="gst-pad-probe-info-get-event"><primary>gst_pad_probe_info_get_event</primary></indexterm>
<programlisting language="C"><link linkend="GstEvent"><returnvalue>GstEvent</returnvalue></link>&#160;*
gst_pad_probe_info_get_event (<parameter><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link> *info</parameter>);</programlisting>
<refsect3 id="gst-pad-probe-info-get-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-probe-info-get-event.returns" role="returns">
<title>Returns</title>
<para> The <link linkend="GstEvent"><type>GstEvent</type></link> from the probe. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-probe-info-get-query" role="function">
<title>gst_pad_probe_info_get_query&#160;()</title>
<indexterm zone="gst-pad-probe-info-get-query"><primary>gst_pad_probe_info_get_query</primary></indexterm>
<programlisting language="C"><link linkend="GstQuery"><returnvalue>GstQuery</returnvalue></link>&#160;*
gst_pad_probe_info_get_query (<parameter><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link> *info</parameter>);</programlisting>
<refsect3 id="gst-pad-probe-info-get-query.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-probe-info-get-query.returns" role="returns">
<title>Returns</title>
<para> The <link linkend="GstQuery"><type>GstQuery</type></link> from the probe. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-OFFSET:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_OFFSET()</title>
<indexterm zone="GST-PAD-PROBE-INFO-OFFSET:CAPS"><primary>GST_PAD_PROBE_INFO_OFFSET</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_OFFSET(d)       ((d)-&gt;offset)
</programlisting>
</refsect2>
<refsect2 id="GST-PAD-PROBE-INFO-SIZE:CAPS" role="macro">
<title>GST_PAD_PROBE_INFO_SIZE()</title>
<indexterm zone="GST-PAD-PROBE-INFO-SIZE:CAPS"><primary>GST_PAD_PROBE_INFO_SIZE</primary></indexterm>
<programlisting language="C">#define GST_PAD_PROBE_INFO_SIZE(d)         ((d)-&gt;size)
</programlisting>
</refsect2>
<refsect2 id="GstPadProbeCallback" role="function">
<title>GstPadProbeCallback&#160;()</title>
<indexterm zone="GstPadProbeCallback"><primary>GstPadProbeCallback</primary></indexterm>
<programlisting language="C"><link linkend="GstPadProbeReturn"><returnvalue>GstPadProbeReturn</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadProbeCallback<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link> *info</parameter>,
                        <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Callback used by <link linkend="gst-pad-add-probe"><function>gst_pad_add_probe()</function></link>. Gets called to notify about the current
blocking type.</para>
<para>The callback is allowed to modify the data pointer in <parameter>info</parameter>
.</para>
<refsect3 id="GstPadProbeCallback.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> that is blocked</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para><link linkend="GstPadProbeInfo"><type>GstPadProbeInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the gpointer to optional user data.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadProbeCallback.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstPadProbeReturn"><type>GstPadProbeReturn</type></link></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-add-probe" role="function">
<title>gst_pad_add_probe&#160;()</title>
<indexterm zone="gst-pad-add-probe"><primary>gst_pad_add_probe</primary></indexterm>
<programlisting language="C"><link linkend="gulong"><returnvalue>gulong</returnvalue></link>
gst_pad_add_probe (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                   <parameter><link linkend="GstPadProbeType"><type>GstPadProbeType</type></link> mask</parameter>,
                   <parameter><link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link> callback</parameter>,
                   <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                   <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> destroy_data</parameter>);</programlisting>
<para>Be notified of different states of pads. The provided callback is called for
every state that matches <parameter>mask</parameter>
.</para>
<refsect3 id="gst-pad-add-probe.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to add the probe to</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mask</para></entry>
<entry role="parameter_description"><para>the probe mask</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para><link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link> that will be called with notifications of
the pad state</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para> user data passed to the callback. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destroy_data</para></entry>
<entry role="parameter_description"><para><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> for user_data</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-add-probe.returns" role="returns">
<title>Returns</title>
<para> an id or 0 if no probe is pending. The id can be used to remove the
probe with <link linkend="gst-pad-remove-probe"><function>gst_pad_remove_probe()</function></link>. When using GST_PAD_PROBE_TYPE_IDLE it can
happen that the probe can be run immediately and if the probe returns
GST_PAD_PROBE_REMOVE this functions returns 0.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-remove-probe" role="function">
<title>gst_pad_remove_probe&#160;()</title>
<indexterm zone="gst-pad-remove-probe"><primary>gst_pad_remove_probe</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_remove_probe (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                      <parameter><link linkend="gulong"><type>gulong</type></link> id</parameter>);</programlisting>
<para>Remove the probe with <parameter>id</parameter>
 from <parameter>pad</parameter>
.</para>
<para>MT safe.</para>
<refsect3 id="gst-pad-remove-probe.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> with the probe</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the probe id to remove</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-is-blocked" role="function">
<title>gst_pad_is_blocked&#160;()</title>
<indexterm zone="gst-pad-is-blocked"><primary>gst_pad_is_blocked</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_is_blocked (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Checks if the pad is blocked or not. This function returns the
last requested state of the pad. It is not certain that the pad
is actually blocking at this point (see <link linkend="gst-pad-is-blocking"><function>gst_pad_is_blocking()</function></link>).</para>
<refsect3 id="gst-pad-is-blocked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-is-blocked.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is blocked.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-is-blocking" role="function">
<title>gst_pad_is_blocking&#160;()</title>
<indexterm zone="gst-pad-is-blocking"><primary>gst_pad_is_blocking</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_is_blocking (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Checks if the pad is blocking or not. This is a guaranteed state
of whether the pad is actually blocking on a <link linkend="GstBuffer"><type>GstBuffer</type></link> or a <link linkend="GstEvent"><type>GstEvent</type></link>.</para>
<refsect3 id="gst-pad-is-blocking.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-is-blocking.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is blocking.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-offset" role="function">
<title>gst_pad_get_offset&#160;()</title>
<indexterm zone="gst-pad-get-offset"><primary>gst_pad_get_offset</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
gst_pad_get_offset (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Get the offset applied to the running time of <parameter>pad</parameter>
. <parameter>pad</parameter>
 has to be a source
pad.</para>
<refsect3 id="gst-pad-get-offset.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-offset.returns" role="returns">
<title>Returns</title>
<para> the offset.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-offset" role="function">
<title>gst_pad_set_offset&#160;()</title>
<indexterm zone="gst-pad-set-offset"><primary>gst_pad_set_offset</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_offset (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="gint64"><type>gint64</type></link> offset</parameter>);</programlisting>
<para>Set the offset that will be applied to the running time of <parameter>pad</parameter>
.</para>
<refsect3 id="gst-pad-set-offset.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>the offset</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-new" role="function">
<title>gst_pad_new&#160;()</title>
<indexterm zone="gst-pad-new"><primary>gst_pad_new</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_pad_new (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
             <parameter><link linkend="GstPadDirection"><type>GstPadDirection</type></link> direction</parameter>);</programlisting>
<para>Creates a new pad with the given name in the given direction.
If name is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a guaranteed unique name (across all pads)
will be assigned.
This function makes a copy of the name so you can safely free the name.</para>
<refsect3 id="gst-pad-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para> the name of the new pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>direction</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadDirection"><type>GstPadDirection</type></link> of the pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-new.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstPad"><type>GstPad</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> in
case of an error.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer floating</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-new-from-template" role="function">
<title>gst_pad_new_from_template&#160;()</title>
<indexterm zone="gst-pad-new-from-template"><primary>gst_pad_new_from_template</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_pad_new_from_template (<parameter><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> *templ</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Creates a new pad with the given name from the given template.
If name is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a guaranteed unique name (across all pads)
will be assigned.
This function makes a copy of the name so you can safely free the name.</para>
<refsect3 id="gst-pad-new-from-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>templ</para></entry>
<entry role="parameter_description"><para>the pad template to use</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para> the name of the pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-new-from-template.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstPad"><type>GstPad</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> in
case of an error. </para>
<para><emphasis role="annotation">[<acronym>transfer floating</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-new-from-static-template" role="function">
<title>gst_pad_new_from_static_template&#160;()</title>
<indexterm zone="gst-pad-new-from-static-template"><primary>gst_pad_new_from_static_template</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_pad_new_from_static_template (<parameter><link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> *templ</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Creates a new pad with the given name from the given static template.
If name is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a guaranteed unique name (across all pads)
will be assigned.
This function makes a copy of the name so you can safely free the name.</para>
<refsect3 id="gst-pad-new-from-static-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>templ</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstStaticPadTemplate"><type>GstStaticPadTemplate</type></link> to use</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the pad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-new-from-static-template.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstPad"><type>GstPad</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> in
case of an error. </para>
<para><emphasis role="annotation">[<acronym>transfer floating</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-chain-function" role="macro">
<title>gst_pad_set_chain_function()</title>
<indexterm zone="gst-pad-set-chain-function"><primary>gst_pad_set_chain_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_chain_function(p,f)         gst_pad_set_chain_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-chain-function-full"><function>gst_pad_set_chain_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-chain-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadChainFunction"><type>GstPadChainFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-chain-function-full" role="function">
<title>gst_pad_set_chain_function_full&#160;()</title>
<indexterm zone="gst-pad-set-chain-function-full"><primary>gst_pad_set_chain_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_chain_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                 <parameter><link linkend="GstPadChainFunction"><type>GstPadChainFunction</type></link> chain</parameter>,
                                 <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                 <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given chain function for the pad. The chain function is called to
process a <link linkend="GstBuffer"><type>GstBuffer</type></link> input buffer. see <link linkend="GstPadChainFunction"><type>GstPadChainFunction</type></link> for more details.</para>
<refsect3 id="gst-pad-set-chain-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>chain</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadChainFunction"><type>GstPadChainFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>chain</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadChainFunction" role="function">
<title>GstPadChainFunction&#160;()</title>
<indexterm zone="GstPadChainFunction"><primary>GstPadChainFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadChainFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                        <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buffer</parameter>);</programlisting>
<para>A function that will be called on sinkpads when chaining buffers.
The function typically processes the data contained in the buffer and
either consumes the data or passes it on to the internally linked pad(s).</para>
<para>The implementer of this function receives a refcount to <parameter>buffer</parameter>
 and should
<link linkend="gst-buffer-unref"><function>gst_buffer_unref()</function></link> when the buffer is no longer needed.</para>
<para>When a chain function detects an error in the data stream, it must post an
error on the bus and return an appropriate <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> value.</para>
<refsect3 id="GstPadChainFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link> that performed the chain.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBuffer"><type>GstBuffer</type></link> that is chained, not <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadChainFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link> for success</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-chain-list-function" role="macro">
<title>gst_pad_set_chain_list_function()</title>
<indexterm zone="gst-pad-set-chain-list-function"><primary>gst_pad_set_chain_list_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_chain_list_function(p,f)    gst_pad_set_chain_list_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-chain-list-function-full"><function>gst_pad_set_chain_list_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-chain-list-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadChainListFunction"><type>GstPadChainListFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-chain-list-function-full" role="function">
<title>gst_pad_set_chain_list_function_full&#160;()</title>
<indexterm zone="gst-pad-set-chain-list-function-full"><primary>gst_pad_set_chain_list_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_chain_list_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                      <parameter><link linkend="GstPadChainListFunction"><type>GstPadChainListFunction</type></link> chainlist</parameter>,
                                      <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                      <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given chain list function for the pad. The chainlist function is
called to process a <link linkend="GstBufferList"><type>GstBufferList</type></link> input buffer list. See
<link linkend="GstPadChainListFunction"><type>GstPadChainListFunction</type></link> for more details.</para>
<refsect3 id="gst-pad-set-chain-list-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>chainlist</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadChainListFunction"><type>GstPadChainListFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>chainlist</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadChainListFunction" role="function">
<title>GstPadChainListFunction&#160;()</title>
<indexterm zone="GstPadChainListFunction"><primary>GstPadChainListFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadChainListFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                            <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                            <parameter><link linkend="GstBufferList"><type>GstBufferList</type></link> *list</parameter>);</programlisting>
<para>A function that will be called on sinkpads when chaining buffer lists.
The function typically processes the data contained in the buffer list and
either consumes the data or passes it on to the internally linked pad(s).</para>
<para>The implementer of this function receives a refcount to <parameter>list</parameter>
 and
should <link linkend="gst-buffer-list-unref"><function>gst_buffer_list_unref()</function></link> when the list is no longer needed.</para>
<para>When a chainlist function detects an error in the data stream, it must
post an error on the bus and return an appropriate <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> value.</para>
<refsect3 id="GstPadChainListFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the sink <link linkend="GstPad"><type>GstPad</type></link> that performed the chain.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferList"><type>GstBufferList</type></link> that is chained, not <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadChainListFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link> for success</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-range" role="function">
<title>gst_pad_get_range&#160;()</title>
<indexterm zone="gst-pad-get-range"><primary>gst_pad_get_range</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_get_range (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                   <parameter><link linkend="guint64"><type>guint64</type></link> offset</parameter>,
                   <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                   <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> **buffer</parameter>);</programlisting>
<para>When <parameter>pad</parameter>
 is flushing this function returns <link linkend="GST-FLOW-FLUSHING:CAPS"><type>GST_FLOW_FLUSHING</type></link>
immediately and <parameter>buffer</parameter>
 is <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>Calls the getrange function of <parameter>pad</parameter>
, see <link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> for a
description of a getrange function. If <parameter>pad</parameter>
 has no getrange function
installed (see <link linkend="gst-pad-set-getrange-function"><function>gst_pad_set_getrange_function()</function></link>) this function returns
<link linkend="GST-FLOW-NOT-SUPPORTED:CAPS"><type>GST_FLOW_NOT_SUPPORTED</type></link>.</para>
<para>If <parameter>buffer</parameter>
 points to a variable holding <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a valid new <link linkend="GstBuffer"><type>GstBuffer</type></link> will be
placed in <parameter>buffer</parameter>
 when this function returns <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>. The new buffer
must be freed with <link linkend="gst-buffer-unref"><function>gst_buffer_unref()</function></link> after usage.</para>
<para>When <parameter>buffer</parameter>
 points to a variable that points to a valid <link linkend="GstBuffer"><type>GstBuffer</type></link>, the
buffer will be filled with the result data when this function returns
<link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>. If the provided buffer is larger than <parameter>size</parameter>
, only
<parameter>size</parameter>
 bytes will be filled in the result buffer and its size will be updated
accordingly.</para>
<para>Note that less than <parameter>size</parameter>
 bytes can be returned in <parameter>buffer</parameter>
 when, for example,
an EOS condition is near or when <parameter>buffer</parameter>
 is not large enough to hold <parameter>size</parameter>

bytes. The caller should check the result buffer size to get the result size.</para>
<para>When this function returns any other result value than <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>, <parameter>buffer</parameter>

will be unchanged.</para>
<para>This is a lowlevel function. Usually <link linkend="gst-pad-pull-range"><function>gst_pad_pull_range()</function></link> is used.</para>
<refsect3 id="gst-pad-get-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a src <link linkend="GstPad"><type>GstPad</type></link>, returns <link linkend="GST-FLOW-ERROR:CAPS"><type>GST_FLOW_ERROR</type></link> if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>The start offset of the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>The length of the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para> a pointer to hold the <link linkend="GstBuffer"><type>GstBuffer</type></link>,
returns <link linkend="GST-FLOW-ERROR:CAPS"><type>GST_FLOW_ERROR</type></link> if <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out callee-allocates</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-range.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-getrange-function" role="macro">
<title>gst_pad_set_getrange_function()</title>
<indexterm zone="gst-pad-set-getrange-function"><primary>gst_pad_set_getrange_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_getrange_function(p,f)      gst_pad_set_getrange_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-getrange-function-full"><function>gst_pad_set_getrange_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-getrange-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a source <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-getrange-function-full" role="function">
<title>gst_pad_set_getrange_function_full&#160;()</title>
<indexterm zone="gst-pad-set-getrange-function-full"><primary>gst_pad_set_getrange_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_getrange_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                    <parameter><link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> get</parameter>,
                                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                    <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given getrange function for the pad. The getrange function is
called to produce a new <link linkend="GstBuffer"><type>GstBuffer</type></link> to start the processing pipeline. see
<link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> for a description of the getrange function.</para>
<refsect3 id="gst-pad-set-getrange-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a source <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>get</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>get</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadGetRangeFunction" role="function">
<title>GstPadGetRangeFunction&#160;()</title>
<indexterm zone="GstPadGetRangeFunction"><primary>GstPadGetRangeFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadGetRangeFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                           <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> offset</parameter>,
                           <parameter><link linkend="guint"><type>guint</type></link> length</parameter>,
                           <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> **buffer</parameter>);</programlisting>
<para>This function will be called on source pads when a peer element
request a buffer at the specified <parameter>offset</parameter>
 and <parameter>length</parameter>
. If this function
returns <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>, the result buffer will be stored in <parameter>buffer</parameter>
. The
contents of <parameter>buffer</parameter>
 is invalid for any other return value.</para>
<para>This function is installed on a source pad with
<link linkend="gst-pad-set-getrange-function"><function>gst_pad_set_getrange_function()</function></link> and can only be called on source pads after
they are successfully activated with <link linkend="gst-pad-activate-mode"><function>gst_pad_activate_mode()</function></link> with the
<link linkend="GST-PAD-MODE-PULL:CAPS"><type>GST_PAD_MODE_PULL</type></link>.</para>
<para><parameter>offset</parameter>
 and <parameter>length</parameter>
 are always given in byte units. <parameter>offset</parameter>
 must normally be a value
between 0 and the length in bytes of the data available on <parameter>pad</parameter>
. The
length (duration in bytes) can be retrieved with a <link linkend="GST-QUERY-DURATION:CAPS"><type>GST_QUERY_DURATION</type></link> or with a
<link linkend="GST-QUERY-SEEKING:CAPS"><type>GST_QUERY_SEEKING</type></link>.</para>
<para>Any <parameter>offset</parameter>
 larger or equal than the length will make the function return
<link linkend="GST-FLOW-EOS:CAPS"><type>GST_FLOW_EOS</type></link>, which corresponds to EOS. In this case <parameter>buffer</parameter>
 does not
contain a valid buffer.</para>
<para>The buffer size of <parameter>buffer</parameter>
 will only be smaller than <parameter>length</parameter>
 when <parameter>offset</parameter>
 is
near the end of the stream. In all other cases, the size of <parameter>buffer</parameter>
 must be
exactly the requested size.</para>
<para>It is allowed to call this function with a 0 <parameter>length</parameter>
 and valid <parameter>offset</parameter>
, in
which case <parameter>buffer</parameter>
 will contain a 0-sized buffer and the function returns
<link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>.</para>
<para>When this function is called with a -1 <parameter>offset</parameter>
, the sequentially next buffer
of length <parameter>length</parameter>
 in the stream is returned.</para>
<para>When this function is called with a -1 <parameter>length</parameter>
, a buffer with a default
optimal length is returned in <parameter>buffer</parameter>
. The length might depend on the value
of <parameter>offset</parameter>
.</para>
<refsect3 id="GstPadGetRangeFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the src <link linkend="GstPad"><type>GstPad</type></link> to perform the getrange on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>the offset of the range</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>the length of the range</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>a memory location to hold the result buffer, cannot be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadGetRangeFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link> for success and a valid buffer in <parameter>buffer</parameter>
. Any other
return value leaves <parameter>buffer</parameter>
undefined.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-event-function" role="macro">
<title>gst_pad_set_event_function()</title>
<indexterm zone="gst-pad-set-event-function"><primary>gst_pad_set_event_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_event_function(p,f)         gst_pad_set_event_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-event-function-full"><function>gst_pad_set_event_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-event-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadEventFunction"><type>GstPadEventFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-event-function-full" role="function">
<title>gst_pad_set_event_function_full&#160;()</title>
<indexterm zone="gst-pad-set-event-function-full"><primary>gst_pad_set_event_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_event_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                 <parameter><link linkend="GstPadEventFunction"><type>GstPadEventFunction</type></link> event</parameter>,
                                 <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                 <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given event handler for the pad.</para>
<refsect3 id="gst-pad-set-event-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadEventFunction"><type>GstPadEventFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>event</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadEventFunction" role="function">
<title>GstPadEventFunction&#160;()</title>
<indexterm zone="GstPadEventFunction"><primary>GstPadEventFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadEventFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                        <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Function signature to handle an event for the pad.</para>
<refsect3 id="GstPadEventFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to handle the event.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstEvent"><type>GstEvent</type></link> to handle. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadEventFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad could handle the event.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-link-function" role="macro">
<title>gst_pad_set_link_function()</title>
<indexterm zone="gst-pad-set-link-function"><primary>gst_pad_set_link_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_link_function(p,f)          gst_pad_set_link_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-link-function-full"><function>gst_pad_set_link_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link>
for the user_data and notify.</para>
<refsect3 id="gst-pad-set-link-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadLinkFunction"><type>GstPadLinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-link-function-full" role="function">
<title>gst_pad_set_link_function_full&#160;()</title>
<indexterm zone="gst-pad-set-link-function-full"><primary>gst_pad_set_link_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_link_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstPadLinkFunction"><type>GstPadLinkFunction</type></link> link</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given link function for the pad. It will be called when
the pad is linked with another pad.</para>
<para>The return value <link linkend="GST-PAD-LINK-OK:CAPS"><type>GST_PAD_LINK_OK</type></link> should be used when the connection can be
made.</para>
<para>The return value <link linkend="GST-PAD-LINK-REFUSED:CAPS"><type>GST_PAD_LINK_REFUSED</type></link> should be used when the connection
cannot be made for some reason.</para>
<para>If <parameter>link</parameter>
 is installed on a source pad, it should call the <link linkend="GstPadLinkFunction"><type>GstPadLinkFunction</type></link>
of the peer sink pad, if present.</para>
<refsect3 id="gst-pad-set-link-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>link</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadLinkFunction"><type>GstPadLinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>link</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadLinkFunction" role="function">
<title>GstPadLinkFunction&#160;()</title>
<indexterm zone="GstPadLinkFunction"><primary>GstPadLinkFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstPadLinkReturn"><returnvalue>GstPadLinkReturn</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadLinkFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                       <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                       <parameter><link linkend="GstPad"><type>GstPad</type></link> *peer</parameter>);</programlisting>
<para>Function signature to handle a new link on the pad.</para>
<refsect3 id="GstPadLinkFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> that is linked.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>peer</para></entry>
<entry role="parameter_description"><para>the peer <link linkend="GstPad"><type>GstPad</type></link> of the link</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadLinkFunction.returns" role="returns">
<title>Returns</title>
<para> the result of the link with the specified peer.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-unlink-function" role="macro">
<title>gst_pad_set_unlink_function()</title>
<indexterm zone="gst-pad-set-unlink-function"><primary>gst_pad_set_unlink_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_unlink_function(p,f)        gst_pad_set_unlink_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-unlink-function-full"><function>gst_pad_set_unlink_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link>
for the user_data and notify.</para>
<refsect3 id="gst-pad-set-unlink-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadUnlinkFunction"><type>GstPadUnlinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-unlink-function-full" role="function">
<title>gst_pad_set_unlink_function_full&#160;()</title>
<indexterm zone="gst-pad-set-unlink-function-full"><primary>gst_pad_set_unlink_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_unlink_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                  <parameter><link linkend="GstPadUnlinkFunction"><type>GstPadUnlinkFunction</type></link> unlink</parameter>,
                                  <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                  <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given unlink function for the pad. It will be called
when the pad is unlinked.</para>
<refsect3 id="gst-pad-set-unlink-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>unlink</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadUnlinkFunction"><type>GstPadUnlinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>unlink</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadUnlinkFunction" role="function">
<title>GstPadUnlinkFunction&#160;()</title>
<indexterm zone="GstPadUnlinkFunction"><primary>GstPadUnlinkFunction</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadUnlinkFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                         <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>);</programlisting>
<para>Function signature to handle a unlinking the pad prom its peer.</para>
<refsect3 id="GstPadUnlinkFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> that is linked.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-proxy-query-caps" role="function">
<title>gst_pad_proxy_query_caps&#160;()</title>
<indexterm zone="gst-pad-proxy-query-caps"><primary>gst_pad_proxy_query_caps</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_proxy_query_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                          <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Calls <link linkend="gst-pad-query-caps"><function>gst_pad_query_caps()</function></link> for all internally linked pads of <parameter>pad</parameter>
 and returns
the intersection of the results.</para>
<para>This function is useful as a default caps query function for an element
that can handle any stream format, but requires all its pads to have
the same caps.  Two such elements are tee and adder.</para>
<refsect3 id="gst-pad-proxy-query-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to proxy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>a CAPS <link linkend="GstQuery"><type>GstQuery</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-proxy-query-caps.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>query</parameter>
could be executed</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-proxy-query-accept-caps" role="function">
<title>gst_pad_proxy_query_accept_caps&#160;()</title>
<indexterm zone="gst-pad-proxy-query-accept-caps"><primary>gst_pad_proxy_query_accept_caps</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_proxy_query_accept_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                 <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Checks if all internally linked pads of <parameter>pad</parameter>
 accepts the caps in <parameter>query</parameter>
 and
returns the intersection of the results.</para>
<para>This function is useful as a default accept caps query function for an element
that can handle any stream format, but requires caps that are acceptable for
all opposite pads.</para>
<refsect3 id="gst-pad-proxy-query-accept-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to proxy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>an ACCEPT_CAPS <link linkend="GstQuery"><type>GstQuery</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-proxy-query-accept-caps.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>query</parameter>
could be executed</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-activate-function" role="macro">
<title>gst_pad_set_activate_function()</title>
<indexterm zone="gst-pad-set-activate-function"><primary>gst_pad_set_activate_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_activate_function(p,f)      gst_pad_set_activate_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-activate-function-full"><function>gst_pad_set_activate_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-activate-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadActivateFunction"><type>GstPadActivateFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-activate-function-full" role="function">
<title>gst_pad_set_activate_function_full&#160;()</title>
<indexterm zone="gst-pad-set-activate-function-full"><primary>gst_pad_set_activate_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_activate_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                    <parameter><link linkend="GstPadActivateFunction"><type>GstPadActivateFunction</type></link> activate</parameter>,
                                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                    <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given activate function for <parameter>pad</parameter>
. The activate function will
dispatch to <link linkend="gst-pad-activate-mode"><function>gst_pad_activate_mode()</function></link> to perform the actual activation.
Only makes sense to set on sink pads.</para>
<para>Call this function if your sink pad can start a pull-based task.</para>
<refsect3 id="gst-pad-set-activate-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>activate</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadActivateFunction"><type>GstPadActivateFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>activate</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadActivateFunction" role="function">
<title>GstPadActivateFunction&#160;()</title>
<indexterm zone="GstPadActivateFunction"><primary>GstPadActivateFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadActivateFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                           <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>);</programlisting>
<para>This function is called when the pad is activated during the element
READY to PAUSED state change. By default this function will call the
activate function that puts the pad in push mode but elements can
override this function to activate the pad in pull mode if they wish.</para>
<refsect3 id="GstPadActivateFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>the parent of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadActivateFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad could be activated.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-activatemode-function" role="macro">
<title>gst_pad_set_activatemode_function()</title>
<indexterm zone="gst-pad-set-activatemode-function"><primary>gst_pad_set_activatemode_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_activatemode_function(p,f)  gst_pad_set_activatemode_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-activatemode-function-full"><function>gst_pad_set_activatemode_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-activatemode-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadActivateModeFunction"><type>GstPadActivateModeFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-activatemode-function-full" role="function">
<title>gst_pad_set_activatemode_function_full&#160;()</title>
<indexterm zone="gst-pad-set-activatemode-function-full"><primary>gst_pad_set_activatemode_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_activatemode_function_full
                               (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstPadActivateModeFunction"><type>GstPadActivateModeFunction</type></link> activatemode</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given activate_mode function for the pad. An activate_mode function
prepares the element for data passing.</para>
<refsect3 id="gst-pad-set-activatemode-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>activatemode</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadActivateModeFunction"><type>GstPadActivateModeFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>activatemode</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadActivateModeFunction" role="function">
<title>GstPadActivateModeFunction&#160;()</title>
<indexterm zone="GstPadActivateModeFunction"><primary>GstPadActivateModeFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadActivateModeFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                               <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                               <parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> active</parameter>);</programlisting>
<para>The prototype of the push and pull activate functions.</para>
<refsect3 id="GstPadActivateModeFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>the parent of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>the requested activation mode of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>active</para></entry>
<entry role="parameter_description"><para>activate or deactivate the pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadActivateModeFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad could be activated or deactivated.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-needs-reconfigure" role="function">
<title>gst_pad_needs_reconfigure&#160;()</title>
<indexterm zone="gst-pad-needs-reconfigure"><primary>gst_pad_needs_reconfigure</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_needs_reconfigure (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Check the <link linkend="GST-PAD-FLAG-NEED-RECONFIGURE:CAPS"><type>GST_PAD_FLAG_NEED_RECONFIGURE</type></link> flag on <parameter>pad</parameter>
 and return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>
if the flag was set.</para>
<refsect3 id="gst-pad-needs-reconfigure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-needs-reconfigure.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is the GST_PAD_FLAG_NEED_RECONFIGURE flag is set on <parameter>pad</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-check-reconfigure" role="function">
<title>gst_pad_check_reconfigure&#160;()</title>
<indexterm zone="gst-pad-check-reconfigure"><primary>gst_pad_check_reconfigure</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_check_reconfigure (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Check and clear the <link linkend="GST-PAD-FLAG-NEED-RECONFIGURE:CAPS"><type>GST_PAD_FLAG_NEED_RECONFIGURE</type></link> flag on <parameter>pad</parameter>
 and return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>
if the flag was set.</para>
<refsect3 id="gst-pad-check-reconfigure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-check-reconfigure.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is the GST_PAD_FLAG_NEED_RECONFIGURE flag was set on <parameter>pad</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-mark-reconfigure" role="function">
<title>gst_pad_mark_reconfigure&#160;()</title>
<indexterm zone="gst-pad-mark-reconfigure"><primary>gst_pad_mark_reconfigure</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_mark_reconfigure (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Mark a pad for needing reconfiguration. The next call to
<link linkend="gst-pad-check-reconfigure"><function>gst_pad_check_reconfigure()</function></link> will return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> after this call.</para>
<refsect3 id="gst-pad-mark-reconfigure.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to mark</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-push" role="function">
<title>gst_pad_push&#160;()</title>
<indexterm zone="gst-pad-push"><primary>gst_pad_push</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_push (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
              <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buffer</parameter>);</programlisting>
<para>Pushes a buffer to the peer of <parameter>pad</parameter>
.</para>
<para>This function will call installed block probes before triggering any
installed data probes.</para>
<para>The function proceeds calling <link linkend="gst-pad-chain"><function>gst_pad_chain()</function></link> on the peer pad and returns
the value from that function. If <parameter>pad</parameter>
 has no peer, <link linkend="GST-FLOW-NOT-LINKED:CAPS"><type>GST_FLOW_NOT_LINKED</type></link> will
be returned.</para>
<para>In all cases, success or failure, the caller loses its reference to <parameter>buffer</parameter>

after calling this function.</para>
<refsect3 id="gst-pad-push.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a source <link linkend="GstPad"><type>GstPad</type></link>, returns <link linkend="GST-FLOW-ERROR:CAPS"><type>GST_FLOW_ERROR</type></link> if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBuffer"><type>GstBuffer</type></link> to push returns GST_FLOW_ERROR
if not. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-push.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the peer pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-push-event" role="function">
<title>gst_pad_push_event&#160;()</title>
<indexterm zone="gst-pad-push-event"><primary>gst_pad_push_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_push_event (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Sends the event to the peer of the given pad. This function is
mainly used by elements to send events to their peer
elements.</para>
<para>This function takes ownership of the provided event so you should
<link linkend="gst-event-ref"><function>gst_event_ref()</function></link> it if you want to reuse the event after this call.</para>
<refsect3 id="gst-pad-push-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to push the event to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstEvent"><type>GstEvent</type></link> to send to the pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-push-event.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the event was handled.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-push-list" role="function">
<title>gst_pad_push_list&#160;()</title>
<indexterm zone="gst-pad-push-list"><primary>gst_pad_push_list</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_push_list (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                   <parameter><link linkend="GstBufferList"><type>GstBufferList</type></link> *list</parameter>);</programlisting>
<para>Pushes a buffer list to the peer of <parameter>pad</parameter>
.</para>
<para>This function will call installed block probes before triggering any
installed data probes.</para>
<para>The function proceeds calling the chain function on the peer pad and returns
the value from that function. If <parameter>pad</parameter>
 has no peer, <link linkend="GST-FLOW-NOT-LINKED:CAPS"><type>GST_FLOW_NOT_LINKED</type></link> will
be returned. If the peer pad does not have any installed chainlist function
every group buffer of the list will be merged into a normal <link linkend="GstBuffer"><type>GstBuffer</type></link> and
chained via <link linkend="gst-pad-chain"><function>gst_pad_chain()</function></link>.</para>
<para>In all cases, success or failure, the caller loses its reference to <parameter>list</parameter>

after calling this function.</para>
<refsect3 id="gst-pad-push-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a source <link linkend="GstPad"><type>GstPad</type></link>, returns <link linkend="GST-FLOW-ERROR:CAPS"><type>GST_FLOW_ERROR</type></link> if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferList"><type>GstBufferList</type></link> to push returns GST_FLOW_ERROR
if not. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-push-list.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the peer pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-pull-range" role="function">
<title>gst_pad_pull_range&#160;()</title>
<indexterm zone="gst-pad-pull-range"><primary>gst_pad_pull_range</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_pull_range (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="guint64"><type>guint64</type></link> offset</parameter>,
                    <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                    <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> **buffer</parameter>);</programlisting>
<para>Pulls a <parameter>buffer</parameter>
 from the peer pad or fills up a provided buffer.</para>
<para>This function will first trigger the pad block signal if it was
installed.</para>
<para>When <parameter>pad</parameter>
 is not linked <link linkend="GST-FLOW-NOT-LINKED:CAPS"><type>GST_FLOW_NOT_LINKED</type></link> is returned else this
function returns the result of <link linkend="gst-pad-get-range"><function>gst_pad_get_range()</function></link> on the peer pad.
See <link linkend="gst-pad-get-range"><function>gst_pad_get_range()</function></link> for a list of return values and for the
semantics of the arguments of this function.</para>
<para>If <parameter>buffer</parameter>
 points to a variable holding <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a valid new <link linkend="GstBuffer"><type>GstBuffer</type></link> will be
placed in <parameter>buffer</parameter>
 when this function returns <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>. The new buffer
must be freed with <link linkend="gst-buffer-unref"><function>gst_buffer_unref()</function></link> after usage. When this function
returns any other result value, <parameter>buffer</parameter>
 will still point to <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>When <parameter>buffer</parameter>
 points to a variable that points to a valid <link linkend="GstBuffer"><type>GstBuffer</type></link>, the
buffer will be filled with the result data when this function returns
<link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link>. When this function returns any other result value,
<parameter>buffer</parameter>
 will be unchanged. If the provided buffer is larger than <parameter>size</parameter>
, only
<parameter>size</parameter>
 bytes will be filled in the result buffer and its size will be updated
accordingly.</para>
<para>Note that less than <parameter>size</parameter>
 bytes can be returned in <parameter>buffer</parameter>
 when, for example,
an EOS condition is near or when <parameter>buffer</parameter>
 is not large enough to hold <parameter>size</parameter>

bytes. The caller should check the result buffer size to get the result size.</para>
<refsect3 id="gst-pad-pull-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>, returns GST_FLOW_ERROR if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>offset</para></entry>
<entry role="parameter_description"><para>The start offset of the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>The length of the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para> a pointer to hold the <link linkend="GstBuffer"><type>GstBuffer</type></link>, returns
GST_FLOW_ERROR if <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out callee-allocates</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-pull-range.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the peer pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-activate-mode" role="function">
<title>gst_pad_activate_mode&#160;()</title>
<indexterm zone="gst-pad-activate-mode"><primary>gst_pad_activate_mode</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_activate_mode (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                       <parameter><link linkend="GstPadMode"><type>GstPadMode</type></link> mode</parameter>,
                       <parameter><link linkend="gboolean"><type>gboolean</type></link> active</parameter>);</programlisting>
<para>Activates or deactivates the given pad in <parameter>mode</parameter>
 via dispatching to the
pad's activatemodefunc. For use from within pad activation functions only.</para>
<para>If you don't know what this is, you probably don't want to call it.</para>
<refsect3 id="gst-pad-activate-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to activate or deactivate.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>the requested activation mode</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>active</para></entry>
<entry role="parameter_description"><para>whether or not the pad should be active.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-activate-mode.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation was successful.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-send-event" role="function">
<title>gst_pad_send_event&#160;()</title>
<indexterm zone="gst-pad-send-event"><primary>gst_pad_send_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_send_event (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Sends the event to the pad. This function can be used
by applications to send events in the pipeline.</para>
<para>If <parameter>pad</parameter>
 is a source pad, <parameter>event</parameter>
 should be an upstream event. If <parameter>pad</parameter>
 is a
sink pad, <parameter>event</parameter>
 should be a downstream event. For example, you would not
send a <link linkend="GST-EVENT-EOS:CAPS"><type>GST_EVENT_EOS</type></link> on a src pad; EOS events only propagate downstream.
Furthermore, some downstream events have to be serialized with data flow,
like EOS, while some can travel out-of-band, like <link linkend="GST-EVENT-FLUSH-START:CAPS"><type>GST_EVENT_FLUSH_START</type></link>. If
the event needs to be serialized with data flow, this function will take the
pad's stream lock while calling its event function.</para>
<para>To find out whether an event type is upstream, downstream, or downstream and
serialized, see <link linkend="GstEventTypeFlags"><type>GstEventTypeFlags</type></link>, <link linkend="gst-event-type-get-flags"><function>gst_event_type_get_flags()</function></link>,
<link linkend="GST-EVENT-IS-UPSTREAM:CAPS"><type>GST_EVENT_IS_UPSTREAM</type></link>, <link linkend="GST-EVENT-IS-DOWNSTREAM:CAPS"><type>GST_EVENT_IS_DOWNSTREAM</type></link>, and
<link linkend="GST-EVENT-IS-SERIALIZED:CAPS"><type>GST_EVENT_IS_SERIALIZED</type></link>. Note that in practice that an application or
plugin doesn't need to bother itself with this information; the core handles
all necessary locks and checks.</para>
<para>This function takes ownership of the provided event so you should
<link linkend="gst-event-ref"><function>gst_event_ref()</function></link> it if you want to reuse the event after this call.</para>
<refsect3 id="gst-pad-send-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to send the event to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstEvent"><type>GstEvent</type></link> to send to the pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-send-event.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the event was handled.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-event-default" role="function">
<title>gst_pad_event_default&#160;()</title>
<indexterm zone="gst-pad-event-default"><primary>gst_pad_event_default</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_event_default (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                       <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                       <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Invokes the default event handler for the given pad.</para>
<para>The EOS event will pause the task associated with <parameter>pad</parameter>
 before it is forwarded
to all internally linked pads,</para>
<para>The event is sent to all pads internally linked to <parameter>pad</parameter>
. This function
takes ownership of <parameter>event</parameter>
.</para>
<refsect3 id="gst-pad-event-default.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to call the default event handler on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstEvent"><type>GstEvent</type></link> to handle. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-event-default.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the event was sent successfully.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query" role="function">
<title>gst_pad_query&#160;()</title>
<indexterm zone="gst-pad-query"><primary>gst_pad_query</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
               <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Dispatches a query to a pad. The query should have been allocated by the
caller via one of the type-specific allocation functions. The element that
the pad belongs to is responsible for filling the query with an appropriate
response, which should then be parsed with a type-specific query parsing
function.</para>
<para>Again, the caller is responsible for both the allocation and deallocation of
the query structure.</para>
<para>Please also note that some queries might need a running pipeline to work.</para>
<refsect3 id="gst-pad-query.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to invoke the default query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstQuery"><type>GstQuery</type></link> to perform. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query" role="function">
<title>gst_pad_peer_query&#160;()</title>
<indexterm zone="gst-pad-peer-query"><primary>gst_pad_peer_query</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_peer_query (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Performs <link linkend="gst-pad-query"><function>gst_pad_query()</function></link> on the peer of <parameter>pad</parameter>
.</para>
<para>The caller is responsible for both the allocation and deallocation of
the query structure.</para>
<refsect3 id="gst-pad-peer-query.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to invoke the peer query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstQuery"><type>GstQuery</type></link> to perform. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed. This function returns <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>
if <parameter>pad</parameter>
has no peer.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-default" role="function">
<title>gst_pad_query_default&#160;()</title>
<indexterm zone="gst-pad-query-default"><primary>gst_pad_query_default</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query_default (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                       <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                       <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Invokes the default query handler for the given pad.
The query is sent to all pads internally linked to <parameter>pad</parameter>
. Note that
if there are many possible sink pads that are internally linked to
<parameter>pad</parameter>
, only one will be sent the query.
Multi-sinkpad elements should implement custom query handlers.</para>
<refsect3 id="gst-pad-query-default.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to call the default query handler on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstQuery"><type>GstQuery</type></link> to handle. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-default.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query was performed successfully.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-position" role="function">
<title>gst_pad_query_position&#160;()</title>
<indexterm zone="gst-pad-query-position"><primary>gst_pad_query_position</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query_position (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                        <parameter><link linkend="gint64"><type>gint64</type></link> *cur</parameter>);</programlisting>
<para>Queries a pad for the stream position.</para>
<refsect3 id="gst-pad-query-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to invoke the position query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para> A location in which to store the current position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-position.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-duration" role="function">
<title>gst_pad_query_duration&#160;()</title>
<indexterm zone="gst-pad-query-duration"><primary>gst_pad_query_duration</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query_duration (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                        <parameter><link linkend="gint64"><type>gint64</type></link> *duration</parameter>);</programlisting>
<para>Queries a pad for the total stream duration.</para>
<refsect3 id="gst-pad-query-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to invoke the duration query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> a location in which to store the total
duration, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-duration.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-convert" role="function">
<title>gst_pad_query_convert&#160;()</title>
<indexterm zone="gst-pad-query-convert"><primary>gst_pad_query_convert</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query_convert (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> src_format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> src_val</parameter>,
                       <parameter><link linkend="GstFormat"><type>GstFormat</type></link> dest_format</parameter>,
                       <parameter><link linkend="gint64"><type>gint64</type></link> *dest_val</parameter>);</programlisting>
<para>Queries a pad to convert <parameter>src_val</parameter>
 in <parameter>src_format</parameter>
 to <parameter>dest_format</parameter>
.</para>
<refsect3 id="gst-pad-query-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to invoke the convert query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstFormat"><type>GstFormat</type></link> to convert from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_val</para></entry>
<entry role="parameter_description"><para>a value to convert.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> to convert to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_val</para></entry>
<entry role="parameter_description"><para> a pointer to the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-convert.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-accept-caps" role="function">
<title>gst_pad_query_accept_caps&#160;()</title>
<indexterm zone="gst-pad-query-accept-caps"><primary>gst_pad_query_accept_caps</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_query_accept_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                           <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Check if the given pad accepts the caps.</para>
<refsect3 id="gst-pad-query-accept-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> to check</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstCaps"><type>GstCaps</type></link> to check on the pad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-accept-caps.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad can accept the caps.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-query-caps" role="function">
<title>gst_pad_query_caps&#160;()</title>
<indexterm zone="gst-pad-query-caps"><primary>gst_pad_query_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
gst_pad_query_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *filter</parameter>);</programlisting>
<para>Gets the capabilities this pad can produce or consume.
Note that this method doesn't necessarily return the caps set by sending a
<link linkend="gst-event-new-caps"><function>gst_event_new_caps()</function></link> - use <link linkend="gst-pad-get-current-caps"><function>gst_pad_get_current_caps()</function></link> for that instead.
gst_pad_query_caps returns all possible caps a pad can operate with, using
the pad's CAPS query function, If the query fails, this function will return
<parameter>filter</parameter>
, if not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, otherwise ANY.</para>
<para>When called on sinkpads <parameter>filter</parameter>
 contains the caps that
upstream could produce in the order preferred by upstream. When
called on srcpads <parameter>filter</parameter>
 contains the caps accepted by
downstream in the preferred order. <parameter>filter</parameter>
 might be <link linkend="NULL:CAPS"><literal>NULL</literal></link> but
if it is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> the returned caps will be a subset of <parameter>filter</parameter>
.</para>
<para>Note that this function does not return writable <link linkend="GstCaps"><type>GstCaps</type></link>, use
<link linkend="gst-caps-make-writable"><function>gst_caps_make_writable()</function></link> before modifying the caps.</para>
<refsect3 id="gst-pad-query-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a  <link linkend="GstPad"><type>GstPad</type></link> to get the capabilities of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para> suggested <link linkend="GstCaps"><type>GstCaps</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-query-caps.returns" role="returns">
<title>Returns</title>
<para> the caps of the pad with incremented ref-count. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query-position" role="function">
<title>gst_pad_peer_query_position&#160;()</title>
<indexterm zone="gst-pad-peer-query-position"><primary>gst_pad_peer_query_position</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_peer_query_position (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                             <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                             <parameter><link linkend="gint64"><type>gint64</type></link> *cur</parameter>);</programlisting>
<para>Queries the peer of a given sink pad for the stream position.</para>
<refsect3 id="gst-pad-peer-query-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> on whose peer to invoke the position query on.
Must be a sink pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para> a location in which to store the current
position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query-position.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query-duration" role="function">
<title>gst_pad_peer_query_duration&#160;()</title>
<indexterm zone="gst-pad-peer-query-duration"><primary>gst_pad_peer_query_duration</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_peer_query_duration (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                             <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                             <parameter><link linkend="gint64"><type>gint64</type></link> *duration</parameter>);</programlisting>
<para>Queries the peer pad of a given sink pad for the total stream duration.</para>
<refsect3 id="gst-pad-peer-query-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> on whose peer pad to invoke the duration query on.
Must be a sink pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> a location in which to store the total
duration, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query-duration.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query-convert" role="function">
<title>gst_pad_peer_query_convert&#160;()</title>
<indexterm zone="gst-pad-peer-query-convert"><primary>gst_pad_peer_query_convert</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_peer_query_convert (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> src_format</parameter>,
                            <parameter><link linkend="gint64"><type>gint64</type></link> src_val</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> dest_format</parameter>,
                            <parameter><link linkend="gint64"><type>gint64</type></link> *dest_val</parameter>);</programlisting>
<para>Queries the peer pad of a given sink pad to convert <parameter>src_val</parameter>
 in <parameter>src_format</parameter>

to <parameter>dest_format</parameter>
.</para>
<refsect3 id="gst-pad-peer-query-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link>, on whose peer pad to invoke the convert query on.
Must be a sink pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstFormat"><type>GstFormat</type></link> to convert from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_val</para></entry>
<entry role="parameter_description"><para>a value to convert.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> to convert to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_val</para></entry>
<entry role="parameter_description"><para> a pointer to the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query-convert.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query-accept-caps" role="function">
<title>gst_pad_peer_query_accept_caps&#160;()</title>
<indexterm zone="gst-pad-peer-query-accept-caps"><primary>gst_pad_peer_query_accept_caps</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_peer_query_accept_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Check if the peer of <parameter>pad</parameter>
 accepts <parameter>caps</parameter>
. If <parameter>pad</parameter>
 has no peer, this function
returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<refsect3 id="gst-pad-peer-query-accept-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a  <link linkend="GstPad"><type>GstPad</type></link> to check the peer of</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstCaps"><type>GstCaps</type></link> to check on the pad</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query-accept-caps.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the peer of <parameter>pad</parameter>
can accept the caps or <parameter>pad</parameter>
has no peer.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-peer-query-caps" role="function">
<title>gst_pad_peer_query_caps&#160;()</title>
<indexterm zone="gst-pad-peer-query-caps"><primary>gst_pad_peer_query_caps</primary></indexterm>
<programlisting language="C"><link linkend="GstCaps"><returnvalue>GstCaps</returnvalue></link>&#160;*
gst_pad_peer_query_caps (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                         <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *filter</parameter>);</programlisting>
<para>Gets the capabilities of the peer connected to this pad. Similar to
<link linkend="gst-pad-query-caps"><function>gst_pad_query_caps()</function></link>.</para>
<para>When called on srcpads <parameter>filter</parameter>
 contains the caps that
upstream could produce in the order preferred by upstream. When
called on sinkpads <parameter>filter</parameter>
 contains the caps accepted by
downstream in the preferred order. <parameter>filter</parameter>
 might be <link linkend="NULL:CAPS"><literal>NULL</literal></link> but
if it is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> the returned caps will be a subset of <parameter>filter</parameter>
.</para>
<refsect3 id="gst-pad-peer-query-caps.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a  <link linkend="GstPad"><type>GstPad</type></link> to get the capabilities of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstCaps"><type>GstCaps</type></link> filter, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-peer-query-caps.returns" role="returns">
<title>Returns</title>
<para> the caps of the peer pad with incremented ref-count. When there is
no peer pad, this function returns <parameter>filter</parameter>
or, when <parameter>filter</parameter>
is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, ANY
caps.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-query-function" role="macro">
<title>gst_pad_set_query_function()</title>
<indexterm zone="gst-pad-set-query-function"><primary>gst_pad_set_query_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_query_function(p,f)   gst_pad_set_query_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-query-function-full"><function>gst_pad_set_query_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the user_data and
notify.</para>
<refsect3 id="gst-pad-set-query-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadQueryFunction"><type>GstPadQueryFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-query-function-full" role="function">
<title>gst_pad_set_query_function_full&#160;()</title>
<indexterm zone="gst-pad-set-query-function-full"><primary>gst_pad_set_query_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_query_function_full (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                 <parameter><link linkend="GstPadQueryFunction"><type>GstPadQueryFunction</type></link> query</parameter>,
                                 <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                 <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Set the given query function for the pad.</para>
<refsect3 id="gst-pad-set-query-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadQueryFunction"><type>GstPadQueryFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>query</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadQueryFunction" role="function">
<title>GstPadQueryFunction&#160;()</title>
<indexterm zone="GstPadQueryFunction"><primary>GstPadQueryFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadQueryFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                        <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>,
                        <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>The signature of the query function.</para>
<refsect3 id="GstPadQueryFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to query.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstQuery"><type>GstQuery</type></link> object to execute</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadQueryFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-iterate-internal-links-function" role="macro">
<title>gst_pad_set_iterate_internal_links_function()</title>
<indexterm zone="gst-pad-set-iterate-internal-links-function"><primary>gst_pad_set_iterate_internal_links_function</primary></indexterm>
<programlisting language="C">#define gst_pad_set_iterate_internal_links_function(p,f) gst_pad_set_iterate_internal_links_function_full((p),(f),NULL,NULL)
</programlisting>
<para>Calls <link linkend="gst-pad-set-iterate-internal-links-function-full"><function>gst_pad_set_iterate_internal_links_function_full()</function></link> with <link linkend="NULL:CAPS"><literal>NULL</literal></link>
for the user_data and notify.</para>
<refsect3 id="gst-pad-set-iterate-internal-links-function.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>f</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadIterIntLinkFunction"><type>GstPadIterIntLinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-iterate-internal-links-function-full" role="function">
<title>gst_pad_set_iterate_internal_links_function_full&#160;()</title>
<indexterm zone="gst-pad-set-iterate-internal-links-function-full"><primary>gst_pad_set_iterate_internal_links_function_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_iterate_internal_links_function_full
                               (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstPadIterIntLinkFunction"><type>GstPadIterIntLinkFunction</type></link> iterintlink</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Sets the given internal link iterator function for the pad.</para>
<refsect3 id="gst-pad-set-iterate-internal-links-function-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link> of either direction.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>iterintlink</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadIterIntLinkFunction"><type>GstPadIterIntLinkFunction</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user_data passed to <parameter>notify</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>notify called when <parameter>iterintlink</parameter>
will not be used anymore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadIterIntLinkFunction" role="function">
<title>GstPadIterIntLinkFunction&#160;()</title>
<indexterm zone="GstPadIterIntLinkFunction"><primary>GstPadIterIntLinkFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GstPadIterIntLinkFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                              <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>);</programlisting>
<para>The signature of the internal pad link iterator function.</para>
<refsect3 id="GstPadIterIntLinkFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>The <link linkend="GstPad"><type>GstPad</type></link> to query.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
. If the <link linkend="GST-PAD-FLAG-NEED-PARENT:CAPS"><type>GST_PAD_FLAG_NEED_PARENT</type></link>
flag is set, <parameter>parent</parameter>
is guaranteed to be not-<link linkend="NULL:CAPS"><literal>NULL</literal></link> and remain valid
during the execution of this function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadIterIntLinkFunction.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstIterator"><type>GstIterator</type></link> that will iterate over all pads that are
linked to the given pad on the inside of the parent element.</para>
<para>the caller must call <link linkend="gst-iterator-free"><function>gst_iterator_free()</function></link> after usage.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-iterate-internal-links" role="function">
<title>gst_pad_iterate_internal_links&#160;()</title>
<indexterm zone="gst-pad-iterate-internal-links"><primary>gst_pad_iterate_internal_links</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
gst_pad_iterate_internal_links (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets an iterator for the pads to which the given pad is linked to inside
of the parent element.</para>
<para>Each <link linkend="GstPad"><type>GstPad</type></link> element yielded by the iterator will have its refcount increased,
so unref after use.</para>
<para>Free-function: gst_iterator_free</para>
<refsect3 id="gst-pad-iterate-internal-links.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the GstPad to get the internal links of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-iterate-internal-links.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GstIterator"><type>GstIterator</type></link> of <link linkend="GstPad"><type>GstPad</type></link>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> when the pad does not have an iterator function
configured. Use <link linkend="gst-iterator-free"><function>gst_iterator_free()</function></link> after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-iterate-internal-links-default" role="function">
<title>gst_pad_iterate_internal_links_default&#160;()</title>
<indexterm zone="gst-pad-iterate-internal-links-default"><primary>gst_pad_iterate_internal_links_default</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
gst_pad_iterate_internal_links_default
                               (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstObject"><type>GstObject</type></link> *parent</parameter>);</programlisting>
<para>Iterate the list of pads to which the given pad is linked to inside of
the parent element.
This is the default handler, and thus returns an iterator of all of the
pads inside the parent element with opposite direction.</para>
<para>The caller must free this iterator after use with <link linkend="gst-iterator-free"><function>gst_iterator_free()</function></link>.</para>
<refsect3 id="gst-pad-iterate-internal-links-default.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to get the internal links of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para> the parent of <parameter>pad</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-iterate-internal-links-default.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstIterator"><type>GstIterator</type></link> of <link linkend="GstPad"><type>GstPad</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>pad</parameter>
has no parent. Unref each returned pad with <link linkend="gst-object-unref"><function>gst_object_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-element-private" role="function">
<title>gst_pad_set_element_private&#160;()</title>
<indexterm zone="gst-pad-set-element-private"><primary>gst_pad_set_element_private</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_pad_set_element_private (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                             <parameter><link linkend="gpointer"><type>gpointer</type></link> priv</parameter>);</programlisting>
<para>Set the given private data gpointer on the pad.
This function can only be used by the element that owns the pad.
No locking is performed in this function.</para>
<refsect3 id="gst-pad-set-element-private.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to set the private data of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>priv</para></entry>
<entry role="parameter_description"><para>The private data to attach to the pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-element-private" role="function">
<title>gst_pad_get_element_private&#160;()</title>
<indexterm zone="gst-pad-get-element-private"><primary>gst_pad_get_element_private</primary></indexterm>
<programlisting language="C"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
gst_pad_get_element_private (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Gets the private data of a pad.
No locking is performed in this function.</para>
<refsect3 id="gst-pad-get-element-private.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to get the private data of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-element-private.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gpointer"><type>gpointer</type></link> to the private data. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-pad-create-stream-id" role="function">
<title>gst_pad_create_stream_id&#160;()</title>
<indexterm zone="gst-pad-create-stream-id"><primary>gst_pad_create_stream_id</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_create_stream_id (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                          <parameter><link linkend="GstElement"><type>GstElement</type></link> *parent</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *stream_id</parameter>);</programlisting>
<para>Creates a stream-id for the source <link linkend="GstPad"><type>GstPad</type></link> <parameter>pad</parameter>
 by combining the
upstream information with the optional <parameter>stream_id</parameter>
 of the stream
of <parameter>pad</parameter>
. <parameter>pad</parameter>
 must have a parent <link linkend="GstElement"><type>GstElement</type></link> and which must have zero
or one sinkpad. <parameter>stream_id</parameter>
 can only be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the parent element
of <parameter>pad</parameter>
 has only a single source pad.</para>
<para>This function generates an unique stream-id by getting the upstream
stream-start event stream ID and appending <parameter>stream_id</parameter>
 to it. If the
element has no sinkpad it will generate an upstream stream-id by
doing an URI query on the element and in the worst case just uses
a random number. Source elements that don't implement the URI
handler interface should ideally generate a unique, deterministic
stream-id manually instead.</para>
<para>Since stream IDs are sorted alphabetically, any numbers in the
stream ID should be printed with a fixed number of characters,
preceded by 0's, such as by using the format %03u instead of %u.</para>
<refsect3 id="gst-pad-create-stream-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>A source <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>Parent <link linkend="GstElement"><type>GstElement</type></link> of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stream_id</para></entry>
<entry role="parameter_description"><para> The stream-id. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-create-stream-id.returns" role="returns">
<title>Returns</title>
<para> A stream-id for <parameter>pad</parameter>
. <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-create-stream-id-printf" role="function">
<title>gst_pad_create_stream_id_printf&#160;()</title>
<indexterm zone="gst-pad-create-stream-id-printf"><primary>gst_pad_create_stream_id_printf</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_create_stream_id_printf (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                 <parameter><link linkend="GstElement"><type>GstElement</type></link> *parent</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *stream_id</parameter>,
                                 <parameter>...</parameter>);</programlisting>
<para>Creates a stream-id for the source <link linkend="GstPad"><type>GstPad</type></link> <parameter>pad</parameter>
 by combining the
upstream information with the optional <parameter>stream_id</parameter>
 of the stream
of <parameter>pad</parameter>
. <parameter>pad</parameter>
 must have a parent <link linkend="GstElement"><type>GstElement</type></link> and which must have zero
or one sinkpad. <parameter>stream_id</parameter>
 can only be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the parent element
of <parameter>pad</parameter>
 has only a single source pad.</para>
<para>This function generates an unique stream-id by getting the upstream
stream-start event stream ID and appending <parameter>stream_id</parameter>
 to it. If the
element has no sinkpad it will generate an upstream stream-id by
doing an URI query on the element and in the worst case just uses
a random number. Source elements that don't implement the URI
handler interface should ideally generate a unique, deterministic
stream-id manually instead.</para>
<refsect3 id="gst-pad-create-stream-id-printf.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>A source <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>Parent <link linkend="GstElement"><type>GstElement</type></link> of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stream_id</para></entry>
<entry role="parameter_description"><para> The stream-id. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>parameters for the <parameter>stream_id</parameter>
format string</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-create-stream-id-printf.returns" role="returns">
<title>Returns</title>
<para> A stream-id for <parameter>pad</parameter>
. <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-create-stream-id-printf-valist" role="function">
<title>gst_pad_create_stream_id_printf_valist&#160;()</title>
<indexterm zone="gst-pad-create-stream-id-printf-valist"><primary>gst_pad_create_stream_id_printf_valist</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_create_stream_id_printf_valist
                               (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstElement"><type>GstElement</type></link> *parent</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *stream_id</parameter>,
                                <parameter><link linkend="va-list"><type>va_list</type></link> var_args</parameter>);</programlisting>
<para>Creates a stream-id for the source <link linkend="GstPad"><type>GstPad</type></link> <parameter>pad</parameter>
 by combining the
upstream information with the optional <parameter>stream_id</parameter>
 of the stream
of <parameter>pad</parameter>
. <parameter>pad</parameter>
 must have a parent <link linkend="GstElement"><type>GstElement</type></link> and which must have zero
or one sinkpad. <parameter>stream_id</parameter>
 can only be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the parent element
of <parameter>pad</parameter>
 has only a single source pad.</para>
<para>This function generates an unique stream-id by getting the upstream
stream-start event stream ID and appending <parameter>stream_id</parameter>
 to it. If the
element has no sinkpad it will generate an upstream stream-id by
doing an URI query on the element and in the worst case just uses
a random number. Source elements that don't implement the URI
handler interface should ideally generate a unique, deterministic
stream-id manually instead.</para>
<refsect3 id="gst-pad-create-stream-id-printf-valist.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>A source <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>Parent <link linkend="GstElement"><type>GstElement</type></link> of <parameter>pad</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stream_id</para></entry>
<entry role="parameter_description"><para> The stream-id. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>var_args</para></entry>
<entry role="parameter_description"><para>parameters for the <parameter>stream_id</parameter>
format string</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-create-stream-id-printf-valist.returns" role="returns">
<title>Returns</title>
<para> A stream-id for <parameter>pad</parameter>
. <link linkend="g-free"><function>g_free()</function></link> after usage.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-get-stream-id" role="function" condition="since:1.2">
<title>gst_pad_get_stream_id&#160;()</title>
<indexterm zone="gst-pad-get-stream-id" role="1.2"><primary>gst_pad_get_stream_id</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_pad_get_stream_id (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Returns the current stream-id for the <parameter>pad</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if none has been
set yet, i.e. the pad has not received a stream-start event yet.</para>
<para>This is a convenience wrapper around <link linkend="gst-pad-get-sticky-event"><function>gst_pad_get_sticky_event()</function></link> and
<link linkend="gst-event-parse-stream-start"><function>gst_event_parse_stream_start()</function></link>.</para>
<para>The returned stream-id string should be treated as an opaque string, its
contents should not be interpreted.</para>
<refsect3 id="gst-pad-get-stream-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>A source <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-get-stream-id.returns" role="returns">
<title>Returns</title>
<para> a newly-allocated copy of the stream-id for
<parameter>pad</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.  <link linkend="g-free"><function>g_free()</function></link> the returned string when no longer
needed. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.2">1.2</link></para></refsect2>
<refsect2 id="GstPadForwardFunction" role="function">
<title>GstPadForwardFunction&#160;()</title>
<indexterm zone="GstPadForwardFunction"><primary>GstPadForwardFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstPadForwardFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                          <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>A forward function is called for all internally linked pads, see
<link linkend="gst-pad-forward"><function>gst_pad_forward()</function></link>.</para>
<refsect3 id="GstPadForwardFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> that is forwarded.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the gpointer to optional user data.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstPadForwardFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the dispatching procedure has to be stopped.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-forward" role="function">
<title>gst_pad_forward&#160;()</title>
<indexterm zone="gst-pad-forward"><primary>gst_pad_forward</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_forward (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                 <parameter><link linkend="GstPadForwardFunction"><type>GstPadForwardFunction</type></link> forward</parameter>,
                 <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Calls <parameter>forward</parameter>
 for all internally linked pads of <parameter>pad</parameter>
. This function deals with
dynamically changing internal pads and will make sure that the <parameter>forward</parameter>

function is only called once for each pad.</para>
<para>When <parameter>forward</parameter>
 returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, no further pads will be processed.</para>
<refsect3 id="gst-pad-forward.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>forward</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstPadForwardFunction"><type>GstPadForwardFunction</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope call</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user data passed to <parameter>forward</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-forward.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if one of the dispatcher functions returned <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-chain" role="function">
<title>gst_pad_chain&#160;()</title>
<indexterm zone="gst-pad-chain"><primary>gst_pad_chain</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_chain (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
               <parameter><link linkend="GstBuffer"><type>GstBuffer</type></link> *buffer</parameter>);</programlisting>
<para>Chain a buffer to <parameter>pad</parameter>
.</para>
<para>The function returns <link linkend="GST-FLOW-FLUSHING:CAPS"><type>GST_FLOW_FLUSHING</type></link> if the pad was flushing.</para>
<para>If the buffer type is not acceptable for <parameter>pad</parameter>
 (as negotiated with a
preceding GST_EVENT_CAPS event), this function returns
<link linkend="GST-FLOW-NOT-NEGOTIATED:CAPS"><type>GST_FLOW_NOT_NEGOTIATED</type></link>.</para>
<para>The function proceeds calling the chain function installed on <parameter>pad</parameter>
 (see
<link linkend="gst-pad-set-chain-function"><function>gst_pad_set_chain_function()</function></link>) and the return value of that function is
returned to the caller. <link linkend="GST-FLOW-NOT-SUPPORTED:CAPS"><type>GST_FLOW_NOT_SUPPORTED</type></link> is returned if <parameter>pad</parameter>
 has no
chain function.</para>
<para>In all cases, success or failure, the caller loses its reference to <parameter>buffer</parameter>

after calling this function.</para>
<refsect3 id="gst-pad-chain.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>, returns GST_FLOW_ERROR if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBuffer"><type>GstBuffer</type></link> to send, return GST_FLOW_ERROR
if not. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-chain.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the pad.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-chain-list" role="function">
<title>gst_pad_chain_list&#160;()</title>
<indexterm zone="gst-pad-chain-list"><primary>gst_pad_chain_list</primary></indexterm>
<programlisting language="C"><link linkend="GstFlowReturn"><returnvalue>GstFlowReturn</returnvalue></link>
gst_pad_chain_list (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstBufferList"><type>GstBufferList</type></link> *list</parameter>);</programlisting>
<para>Chain a bufferlist to <parameter>pad</parameter>
.</para>
<para>The function returns <link linkend="GST-FLOW-FLUSHING:CAPS"><type>GST_FLOW_FLUSHING</type></link> if the pad was flushing.</para>
<para>If <parameter>pad</parameter>
 was not negotiated properly with a CAPS event, this function
returns <link linkend="GST-FLOW-NOT-NEGOTIATED:CAPS"><type>GST_FLOW_NOT_NEGOTIATED</type></link>.</para>
<para>The function proceeds calling the chainlist function installed on <parameter>pad</parameter>
 (see
<link linkend="gst-pad-set-chain-list-function"><function>gst_pad_set_chain_list_function()</function></link>) and the return value of that function is
returned to the caller. <link linkend="GST-FLOW-NOT-SUPPORTED:CAPS"><type>GST_FLOW_NOT_SUPPORTED</type></link> is returned if <parameter>pad</parameter>
 has no
chainlist function.</para>
<para>In all cases, success or failure, the caller loses its reference to <parameter>list</parameter>

after calling this function.</para>
<para>MT safe.</para>
<refsect3 id="gst-pad-chain-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a sink <link linkend="GstPad"><type>GstPad</type></link>, returns GST_FLOW_ERROR if not.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>list</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBufferList"><type>GstBufferList</type></link> to send, return GST_FLOW_ERROR
if not. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-chain-list.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> from the pad.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-start-task" role="function">
<title>gst_pad_start_task&#160;()</title>
<indexterm zone="gst-pad-start-task"><primary>gst_pad_start_task</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_start_task (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="GstTaskFunction"><type>GstTaskFunction</type></link> func</parameter>,
                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                    <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> notify</parameter>);</programlisting>
<para>Starts a task that repeatedly calls <parameter>func</parameter>
 with <parameter>user_data</parameter>
. This function
is mostly used in pad activation functions to start the dataflow.
The <link linkend="GST-PAD-STREAM-LOCK:CAPS"><type>GST_PAD_STREAM_LOCK</type></link> of <parameter>pad</parameter>
 will automatically be acquired
before <parameter>func</parameter>
 is called.</para>
<refsect3 id="gst-pad-start-task.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to start the task of</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>func</para></entry>
<entry role="parameter_description"><para>the task function to call</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user data passed to the task function</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>called when <parameter>user_data</parameter>
is no longer referenced</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-start-task.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the task could be started.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-pause-task" role="function">
<title>gst_pad_pause_task&#160;()</title>
<indexterm zone="gst-pad-pause-task"><primary>gst_pad_pause_task</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_pause_task (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Pause the task of <parameter>pad</parameter>
. This function will also wait until the
function executed by the task is finished if this function is not
called from the task function.</para>
<refsect3 id="gst-pad-pause-task.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to pause the task of</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-pause-task.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the task could be paused or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> when the pad
has no task.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-stop-task" role="function">
<title>gst_pad_stop_task&#160;()</title>
<indexterm zone="gst-pad-stop-task"><primary>gst_pad_stop_task</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_stop_task (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Stop the task of <parameter>pad</parameter>
. This function will also make sure that the
function executed by the task will effectively stop if not called
from the GstTaskFunction.</para>
<para>This function will deadlock if called from the GstTaskFunction of
the task. Use <link linkend="gst-task-pause"><function>gst_task_pause()</function></link> instead.</para>
<para>Regardless of whether the pad has a task, the stream lock is acquired and
released so as to ensure that streaming through this pad has finished.</para>
<refsect3 id="gst-pad-stop-task.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to stop the task of</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-stop-task.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the task could be stopped or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="gst-pad-set-active" role="function">
<title>gst_pad_set_active&#160;()</title>
<indexterm zone="gst-pad-set-active"><primary>gst_pad_set_active</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_pad_set_active (<parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                    <parameter><link linkend="gboolean"><type>gboolean</type></link> active</parameter>);</programlisting>
<para>Activates or deactivates the given pad.
Normally called from within core state change functions.</para>
<para>If <parameter>active</parameter>
, makes sure the pad is active. If it is already active, either in
push or pull mode, just return. Otherwise dispatches to the pad's activate
function to perform the actual activation.</para>
<para>If not <parameter>active</parameter>
, calls <link linkend="gst-pad-activate-mode"><function>gst_pad_activate_mode()</function></link> with the pad's current mode
and a <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> argument.</para>
<refsect3 id="gst-pad-set-active.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to activate or deactivate.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>active</para></entry>
<entry role="parameter_description"><para>whether or not the pad should be active.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-pad-set-active.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation was successful.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-GET-STREAM-LOCK:CAPS" role="macro">
<title>GST_PAD_GET_STREAM_LOCK()</title>
<indexterm zone="GST-PAD-GET-STREAM-LOCK:CAPS"><primary>GST_PAD_GET_STREAM_LOCK</primary></indexterm>
<programlisting language="C">#define GST_PAD_GET_STREAM_LOCK(pad)    (&amp;(GST_PAD_CAST(pad)-&gt;stream_rec_lock))
</programlisting>
<para>Get the stream lock of <parameter>pad</parameter>
. The stream lock is protecting the
resources used in the data processing functions of <parameter>pad</parameter>
. Accessor
macro, use <link linkend="GST-PAD-STREAM-LOCK:CAPS"><function>GST_PAD_STREAM_LOCK()</function></link> and <link linkend="GST-PAD-STREAM-UNLOCK:CAPS"><function>GST_PAD_STREAM_UNLOCK()</function></link> instead
to take/release the pad's stream lock.</para>
<refsect3 id="GST-PAD-GET-STREAM-LOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-STREAM-LOCK:CAPS" role="macro">
<title>GST_PAD_STREAM_LOCK()</title>
<indexterm zone="GST-PAD-STREAM-LOCK:CAPS"><primary>GST_PAD_STREAM_LOCK</primary></indexterm>
<programlisting language="C">#define GST_PAD_STREAM_LOCK(pad)        g_rec_mutex_lock(GST_PAD_GET_STREAM_LOCK(pad))
</programlisting>
<para>Take the pad's stream lock. The stream lock is recursive and will be taken
when buffers or serialized downstream events are pushed on a pad.</para>
<refsect3 id="GST-PAD-STREAM-LOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-STREAM-TRYLOCK:CAPS" role="macro">
<title>GST_PAD_STREAM_TRYLOCK()</title>
<indexterm zone="GST-PAD-STREAM-TRYLOCK:CAPS"><primary>GST_PAD_STREAM_TRYLOCK</primary></indexterm>
<programlisting language="C">#define GST_PAD_STREAM_TRYLOCK(pad)     g_rec_mutex_trylock(GST_PAD_GET_STREAM_LOCK(pad))
</programlisting>
<para>Try to take the pad's stream lock, and return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the lock could be
taken, and otherwise <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>.</para>
<refsect3 id="GST-PAD-STREAM-TRYLOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-STREAM-UNLOCK:CAPS" role="macro">
<title>GST_PAD_STREAM_UNLOCK()</title>
<indexterm zone="GST-PAD-STREAM-UNLOCK:CAPS"><primary>GST_PAD_STREAM_UNLOCK</primary></indexterm>
<programlisting language="C">#define GST_PAD_STREAM_UNLOCK(pad)      g_rec_mutex_unlock(GST_PAD_GET_STREAM_LOCK(pad))
</programlisting>
<para>Release the pad's stream lock.</para>
<refsect3 id="GST-PAD-STREAM-UNLOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-NAME:CAPS" role="macro">
<title>GST_PAD_NAME()</title>
<indexterm zone="GST-PAD-NAME:CAPS"><primary>GST_PAD_NAME</primary></indexterm>
<programlisting language="C">#define GST_PAD_NAME(pad)		(GST_OBJECT_NAME(pad))
</programlisting>
<para>Get name of the given pad.
No locking is performed in this function, use <link linkend="gst-pad-get-name"><function>gst_pad_get_name()</function></link> instead.</para>
<refsect3 id="GST-PAD-NAME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-PARENT:CAPS" role="macro">
<title>GST_PAD_PARENT()</title>
<indexterm zone="GST-PAD-PARENT:CAPS"><primary>GST_PAD_PARENT</primary></indexterm>
<programlisting language="C">#define GST_PAD_PARENT(pad)		(GST_ELEMENT_CAST(GST_OBJECT_PARENT(pad)))
</programlisting>
<para>Get the <parameter>pad</parameter>
 parent.
No locking is performed in this function, use <link linkend="gst-pad-get-parent"><function>gst_pad_get_parent()</function></link> instead.</para>
<refsect3 id="GST-PAD-PARENT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-ELEMENT-PRIVATE:CAPS" role="macro">
<title>GST_PAD_ELEMENT_PRIVATE()</title>
<indexterm zone="GST-PAD-ELEMENT-PRIVATE:CAPS"><primary>GST_PAD_ELEMENT_PRIVATE</primary></indexterm>
<programlisting language="C">#define GST_PAD_ELEMENT_PRIVATE(pad)    (GST_PAD_CAST(pad)-&gt;element_private)
</programlisting>
<para>Get the private data of <parameter>pad</parameter>
, which is usually some pad- or stream-specific
structure created by the element and set on the pad when creating it.
No locking is performed in this function.</para>
<refsect3 id="GST-PAD-ELEMENT-PRIVATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-PAD-TEMPLATE:CAPS" role="macro">
<title>GST_PAD_PAD_TEMPLATE()</title>
<indexterm zone="GST-PAD-PAD-TEMPLATE:CAPS"><primary>GST_PAD_PAD_TEMPLATE</primary></indexterm>
<programlisting language="C">#define GST_PAD_PAD_TEMPLATE(pad)&#160;(GST_PAD_CAST(pad)-&gt;padtemplate)
</programlisting>
<para>Get the <parameter>pad</parameter>
 <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>. It describes the possible media types
a <parameter>pad</parameter>
 or an element factory can handle.</para>
<refsect3 id="GST-PAD-PAD-TEMPLATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-DIRECTION:CAPS" role="macro">
<title>GST_PAD_DIRECTION()</title>
<indexterm zone="GST-PAD-DIRECTION:CAPS"><primary>GST_PAD_DIRECTION</primary></indexterm>
<programlisting language="C">#define GST_PAD_DIRECTION(pad)		(GST_PAD_CAST(pad)-&gt;direction)
</programlisting>
<para>Get the <link linkend="GstPadDirection"><type>GstPadDirection</type></link> of the given <parameter>pad</parameter>
. Accessor macro, use
<link linkend="gst-pad-get-direction"><function>gst_pad_get_direction()</function></link> instead.</para>
<refsect3 id="GST-PAD-DIRECTION.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-LAST-FLOW-RETURN:CAPS" role="macro" condition="since:1.4">
<title>GST_PAD_LAST_FLOW_RETURN()</title>
<indexterm zone="GST-PAD-LAST-FLOW-RETURN:CAPS" role="1.4"><primary>GST_PAD_LAST_FLOW_RETURN</primary></indexterm>
<programlisting language="C">#define GST_PAD_LAST_FLOW_RETURN(pad)   (GST_PAD_CAST(pad)-&gt;ABI.abi.last_flowret)
</programlisting>
<para>Gets the last flow return on this pad</para>
<refsect3 id="GST-PAD-LAST-FLOW-RETURN.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.4">1.4</link></para></refsect2>
<refsect2 id="GST-PAD-TASK:CAPS" role="macro">
<title>GST_PAD_TASK()</title>
<indexterm zone="GST-PAD-TASK:CAPS"><primary>GST_PAD_TASK</primary></indexterm>
<programlisting language="C">#define GST_PAD_TASK(pad)		(GST_PAD_CAST(pad)-&gt;task)
</programlisting>
<para>Get the <link linkend="GstTask"><type>GstTask</type></link> of <parameter>pad</parameter>
. Accessor macro used by GStreamer. Use the
<link linkend="gst-pad-start-task"><function>gst_pad_start_task()</function></link>, <link linkend="gst-pad-stop-task"><function>gst_pad_stop_task()</function></link> and <link linkend="gst-pad-pause-task"><function>gst_pad_pause_task()</function></link>
functions instead.</para>
<refsect3 id="GST-PAD-TASK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-MODE:CAPS" role="macro">
<title>GST_PAD_MODE()</title>
<indexterm zone="GST-PAD-MODE:CAPS"><primary>GST_PAD_MODE</primary></indexterm>
<programlisting language="C">#define GST_PAD_MODE(pad)	        (GST_PAD_CAST(pad)-&gt;mode)
</programlisting>
<para>Get the <link linkend="GstPadMode"><type>GstPadMode</type></link> of pad, which will be GST_PAD_MODE_NONE if the pad
has not been activated yet, and otherwise either GST_PAD_MODE_PUSH or
GST_PAD_MODE_PULL depending on which mode the pad was activated in.</para>
<refsect3 id="GST-PAD-MODE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-ACTIVATEFUNC:CAPS" role="macro">
<title>GST_PAD_ACTIVATEFUNC()</title>
<indexterm zone="GST-PAD-ACTIVATEFUNC:CAPS"><primary>GST_PAD_ACTIVATEFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_ACTIVATEFUNC(pad)&#160;(GST_PAD_CAST(pad)-&gt;activatefunc)
</programlisting>
<para>Get the <link linkend="GstPadActivateFunction"><type>GstPadActivateFunction</type></link> from <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-ACTIVATEFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-ACTIVATEMODEFUNC:CAPS" role="macro">
<title>GST_PAD_ACTIVATEMODEFUNC()</title>
<indexterm zone="GST-PAD-ACTIVATEMODEFUNC:CAPS"><primary>GST_PAD_ACTIVATEMODEFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_ACTIVATEMODEFUNC(pad)&#160;(GST_PAD_CAST(pad)-&gt;activatemodefunc)
</programlisting>
<para>Get the <link linkend="GstPadActivateModeFunction"><type>GstPadActivateModeFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-ACTIVATEMODEFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-CHAINFUNC:CAPS" role="macro">
<title>GST_PAD_CHAINFUNC()</title>
<indexterm zone="GST-PAD-CHAINFUNC:CAPS"><primary>GST_PAD_CHAINFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_CHAINFUNC(pad)		(GST_PAD_CAST(pad)-&gt;chainfunc)
</programlisting>
<para>Get the <link linkend="GstPadChainFunction"><type>GstPadChainFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-CHAINFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-CHAINLISTFUNC:CAPS" role="macro">
<title>GST_PAD_CHAINLISTFUNC()</title>
<indexterm zone="GST-PAD-CHAINLISTFUNC:CAPS"><primary>GST_PAD_CHAINLISTFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_CHAINLISTFUNC(pad)      (GST_PAD_CAST(pad)-&gt;chainlistfunc)
</programlisting>
<para>Get the <link linkend="GstPadChainListFunction"><type>GstPadChainListFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-CHAINLISTFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-EVENTFUNC:CAPS" role="macro">
<title>GST_PAD_EVENTFUNC()</title>
<indexterm zone="GST-PAD-EVENTFUNC:CAPS"><primary>GST_PAD_EVENTFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_EVENTFUNC(pad)		(GST_PAD_CAST(pad)-&gt;eventfunc)
</programlisting>
<para>Get the <link linkend="GstPadEventFunction"><type>GstPadEventFunction</type></link> from the given <parameter>pad</parameter>
, which
is the function that handles events on the pad. You can
use this to set your own event handling function on a pad
after you create it.  If your element derives from a base
class, use the base class's virtual functions instead.</para>
<refsect3 id="GST-PAD-EVENTFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-GETRANGEFUNC:CAPS" role="macro">
<title>GST_PAD_GETRANGEFUNC()</title>
<indexterm zone="GST-PAD-GETRANGEFUNC:CAPS"><primary>GST_PAD_GETRANGEFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_GETRANGEFUNC(pad)&#160;(GST_PAD_CAST(pad)-&gt;getrangefunc)
</programlisting>
<para>Get the <link linkend="GstPadGetRangeFunction"><type>GstPadGetRangeFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-GETRANGEFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-QUERYFUNC:CAPS" role="macro">
<title>GST_PAD_QUERYFUNC()</title>
<indexterm zone="GST-PAD-QUERYFUNC:CAPS"><primary>GST_PAD_QUERYFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_QUERYFUNC(pad)		(GST_PAD_CAST(pad)-&gt;queryfunc)
</programlisting>
<para>Get the <link linkend="GstPadQueryFunction"><type>GstPadQueryFunction</type></link> from <parameter>pad</parameter>
, which is the function
that handles queries on the pad. You can  use this to set your
own query handling function on a pad after you create it. If your
element derives from a base class, use the base class's virtual
functions instead.</para>
<refsect3 id="GST-PAD-QUERYFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-ITERINTLINKFUNC:CAPS" role="macro">
<title>GST_PAD_ITERINTLINKFUNC()</title>
<indexterm zone="GST-PAD-ITERINTLINKFUNC:CAPS"><primary>GST_PAD_ITERINTLINKFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_ITERINTLINKFUNC(pad)    (GST_PAD_CAST(pad)-&gt;iterintlinkfunc)
</programlisting>
<para>Get the <link linkend="GstPadIterIntLinkFunction"><type>GstPadIterIntLinkFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-ITERINTLINKFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-PEER:CAPS" role="macro">
<title>GST_PAD_PEER()</title>
<indexterm zone="GST-PAD-PEER:CAPS"><primary>GST_PAD_PEER</primary></indexterm>
<programlisting language="C">#define GST_PAD_PEER(pad)		(GST_PAD_CAST(pad)-&gt;peer)
</programlisting>
<para>Return the pad's peer member. This member is a pointer to the linked <parameter>pad</parameter>
.
No locking is performed in this function, use <link linkend="gst-pad-get-peer"><function>gst_pad_get_peer()</function></link> instead.</para>
<refsect3 id="GST-PAD-PEER.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-LINKFUNC:CAPS" role="macro">
<title>GST_PAD_LINKFUNC()</title>
<indexterm zone="GST-PAD-LINKFUNC:CAPS"><primary>GST_PAD_LINKFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_LINKFUNC(pad)		(GST_PAD_CAST(pad)-&gt;linkfunc)
</programlisting>
<para>Get the <link linkend="GstPadLinkFunction"><type>GstPadLinkFunction</type></link> for the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-LINKFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNLINKFUNC:CAPS" role="macro">
<title>GST_PAD_UNLINKFUNC()</title>
<indexterm zone="GST-PAD-UNLINKFUNC:CAPS"><primary>GST_PAD_UNLINKFUNC</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNLINKFUNC(pad)		(GST_PAD_CAST(pad)-&gt;unlinkfunc)
</programlisting>
<para>Get the <link linkend="GstPadUnlinkFunction"><type>GstPadUnlinkFunction</type></link> from the given <parameter>pad</parameter>
.</para>
<refsect3 id="GST-PAD-UNLINKFUNC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-LINKED:CAPS" role="macro">
<title>GST_PAD_IS_LINKED()</title>
<indexterm zone="GST-PAD-IS-LINKED:CAPS"><primary>GST_PAD_IS_LINKED</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_LINKED(pad)		(GST_PAD_PEER(pad) != NULL)
</programlisting>
<refsect3 id="GST-PAD-IS-LINKED.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GST-PAD-IS-LINKED.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is linked to another pad. Use <link linkend="gst-pad-is-linked"><function>gst_pad_is_linked()</function></link>
instead.</para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-SRC:CAPS" role="macro">
<title>GST_PAD_IS_SRC()</title>
<indexterm zone="GST-PAD-IS-SRC:CAPS"><primary>GST_PAD_IS_SRC</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_SRC(pad)		(GST_PAD_DIRECTION(pad) == GST_PAD_SRC)
</programlisting>
<refsect3 id="GST-PAD-IS-SRC.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GST-PAD-IS-SRC.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is a source pad (i.e. produces data).</para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-SINK:CAPS" role="macro">
<title>GST_PAD_IS_SINK()</title>
<indexterm zone="GST-PAD-IS-SINK:CAPS"><primary>GST_PAD_IS_SINK</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_SINK(pad)		(GST_PAD_DIRECTION(pad) == GST_PAD_SINK)
</programlisting>
<refsect3 id="GST-PAD-IS-SINK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GST-PAD-IS-SINK.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad is a sink pad (i.e. consumes data).</para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-ACTIVE:CAPS" role="macro">
<title>GST_PAD_IS_ACTIVE()</title>
<indexterm zone="GST-PAD-IS-ACTIVE:CAPS"><primary>GST_PAD_IS_ACTIVE</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_ACTIVE(pad)          (GST_PAD_MODE(pad) != GST_PAD_MODE_NONE)
</programlisting>
<refsect3 id="GST-PAD-IS-ACTIVE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GST-PAD-IS-ACTIVE.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad has been activated.</para>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-BLOCKED:CAPS" role="macro">
<title>GST_PAD_IS_BLOCKED()</title>
<indexterm zone="GST-PAD-IS-BLOCKED:CAPS"><primary>GST_PAD_IS_BLOCKED</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_BLOCKED(pad)		(GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_BLOCKED))
</programlisting>
<para>Check if the dataflow on a <parameter>pad</parameter>
 is blocked. Use <link linkend="gst-pad-is-blocked"><function>gst_pad_is_blocked()</function></link> instead.</para>
<refsect3 id="GST-PAD-IS-BLOCKED.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-BLOCKING:CAPS" role="macro">
<title>GST_PAD_IS_BLOCKING()</title>
<indexterm zone="GST-PAD-IS-BLOCKING:CAPS"><primary>GST_PAD_IS_BLOCKING</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_BLOCKING(pad)&#160;(GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_BLOCKING))
</programlisting>
<para>Check if the <parameter>pad</parameter>
 is currently blocking on a buffer or event. Use
<link linkend="gst-pad-is-blocking"><function>gst_pad_is_blocking()</function></link> instead.</para>
<refsect3 id="GST-PAD-IS-BLOCKING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-FLUSHING:CAPS" role="macro">
<title>GST_PAD_IS_FLUSHING()</title>
<indexterm zone="GST-PAD-IS-FLUSHING:CAPS"><primary>GST_PAD_IS_FLUSHING</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_FLUSHING(pad)&#160;(GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_FLUSHING))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 is flushing.</para>
<refsect3 id="GST-PAD-IS-FLUSHING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-SET-FLUSHING:CAPS" role="macro">
<title>GST_PAD_SET_FLUSHING()</title>
<indexterm zone="GST-PAD-SET-FLUSHING:CAPS"><primary>GST_PAD_SET_FLUSHING</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_FLUSHING(pad)&#160;(GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_FLUSHING))
</programlisting>
<para>Set the given <parameter>pad</parameter>
 to flushing state, which means it will not accept any
more events, queries or buffers, and return GST_FLOW_FLUSHING if any buffers
are pushed on it. This usually happens when the pad is shut down or when
a flushing seek happens. This is used inside GStreamer when flush start/stop
events pass through pads, or when an element state is changed and pads are
activated or deactivated.</para>
<refsect3 id="GST-PAD-SET-FLUSHING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNSET-FLUSHING:CAPS" role="macro">
<title>GST_PAD_UNSET_FLUSHING()</title>
<indexterm zone="GST-PAD-UNSET-FLUSHING:CAPS"><primary>GST_PAD_UNSET_FLUSHING</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_FLUSHING(pad)&#160;(GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_FLUSHING))
</programlisting>
<para>Unset the flushing flag.</para>
<refsect3 id="GST-PAD-UNSET-FLUSHING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-EOS:CAPS" role="macro">
<title>GST_PAD_IS_EOS()</title>
<indexterm zone="GST-PAD-IS-EOS:CAPS"><primary>GST_PAD_IS_EOS</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_EOS(pad)	        (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_EOS))
</programlisting>
<para>Check if the <parameter>pad</parameter>
 is in EOS state.</para>
<refsect3 id="GST-PAD-IS-EOS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-NEEDS-RECONFIGURE:CAPS" role="macro">
<title>GST_PAD_NEEDS_RECONFIGURE()</title>
<indexterm zone="GST-PAD-NEEDS-RECONFIGURE:CAPS"><primary>GST_PAD_NEEDS_RECONFIGURE</primary></indexterm>
<programlisting language="C">#define GST_PAD_NEEDS_RECONFIGURE(pad)  (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_NEED_RECONFIGURE))
</programlisting>
<para>Check if the <parameter>pad</parameter>
 should be reconfigured/renegotiated.
The flag has to be unset manually after reconfiguration happened.
Use <link linkend="gst-pad-needs-reconfigure"><function>gst_pad_needs_reconfigure()</function></link> or <link linkend="gst-pad-check-reconfigure"><function>gst_pad_check_reconfigure()</function></link> instead.</para>
<refsect3 id="GST-PAD-NEEDS-RECONFIGURE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-HAS-PENDING-EVENTS:CAPS" role="macro">
<title>GST_PAD_HAS_PENDING_EVENTS()</title>
<indexterm zone="GST-PAD-HAS-PENDING-EVENTS:CAPS"><primary>GST_PAD_HAS_PENDING_EVENTS</primary></indexterm>
<programlisting language="C">#define GST_PAD_HAS_PENDING_EVENTS(pad) (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_PENDING_EVENTS))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 has pending events. This is used internally by
GStreamer.</para>
<refsect3 id="GST-PAD-HAS-PENDING-EVENTS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-FIXED-CAPS" role="macro">
<title>GST_PAD_IS_FIXED_CAPS()</title>
<indexterm zone="GST-PAD-IS-FIXED-CAPS"><primary>GST_PAD_IS_FIXED_CAPS</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_FIXED_CAPS(pad)&#160;(GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_FIXED_CAPS))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 is using fixed caps, which means that
once the caps are set on the <parameter>pad</parameter>
, the caps query function will
only return those caps. See <link linkend="gst-pad-use-fixed-caps"><function>gst_pad_use_fixed_caps()</function></link>.</para>
<refsect3 id="GST-PAD-IS-FIXED-CAPS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-NEEDS-PARENT:CAPS" role="macro">
<title>GST_PAD_NEEDS_PARENT()</title>
<indexterm zone="GST-PAD-NEEDS-PARENT:CAPS"><primary>GST_PAD_NEEDS_PARENT</primary></indexterm>
<programlisting language="C">#define GST_PAD_NEEDS_PARENT(pad)       (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_NEED_PARENT))
</programlisting>
<para>Check if there is a parent object before calling into the <parameter>pad</parameter>
 callbacks.
This is used internally by GStreamer.</para>
<refsect3 id="GST-PAD-NEEDS-PARENT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-PROXY-CAPS" role="macro">
<title>GST_PAD_IS_PROXY_CAPS()</title>
<indexterm zone="GST-PAD-IS-PROXY-CAPS"><primary>GST_PAD_IS_PROXY_CAPS</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_PROXY_CAPS(pad)      (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_PROXY_CAPS))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 is set to proxy caps. This means that the default
event and query handler will forward all events and queries to the
internally linked <parameter>pads</parameter>
 instead of discarding them.</para>
<refsect3 id="GST-PAD-IS-PROXY-CAPS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-SET-PROXY-CAPS" role="macro">
<title>GST_PAD_SET_PROXY_CAPS()</title>
<indexterm zone="GST-PAD-SET-PROXY-CAPS"><primary>GST_PAD_SET_PROXY_CAPS</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_PROXY_CAPS(pad)     (GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_PROXY_CAPS))
</programlisting>
<para>Set <parameter>pad</parameter>
 to proxy caps, so that all caps-related events and queries are
proxied down- or upstream to the other side of the element automatically.
Set this if the element always outputs data in the exact same format as it
receives as input. This is just for convenience to avoid implementing some
standard event and query handling code in an element.</para>
<refsect3 id="GST-PAD-SET-PROXY-CAPS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNSET-PROXY-CAPS" role="macro">
<title>GST_PAD_UNSET_PROXY_CAPS()</title>
<indexterm zone="GST-PAD-UNSET-PROXY-CAPS"><primary>GST_PAD_UNSET_PROXY_CAPS</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_PROXY_CAPS(pad)   (GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_PROXY_CAPS))
</programlisting>
<para>Unset proxy caps flag.</para>
<refsect3 id="GST-PAD-UNSET-PROXY-CAPS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-PROXY-ALLOCATION:CAPS" role="macro">
<title>GST_PAD_IS_PROXY_ALLOCATION()</title>
<indexterm zone="GST-PAD-IS-PROXY-ALLOCATION:CAPS"><primary>GST_PAD_IS_PROXY_ALLOCATION</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_PROXY_ALLOCATION(pad)    (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_PROXY_ALLOCATION))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 is set as proxy allocation which means
that the default query handler will forward allocation queries to the
internally linked <parameter>pads</parameter>
 instead of discarding them.</para>
<refsect3 id="GST-PAD-IS-PROXY-ALLOCATION.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-SET-PROXY-ALLOCATION:CAPS" role="macro">
<title>GST_PAD_SET_PROXY_ALLOCATION()</title>
<indexterm zone="GST-PAD-SET-PROXY-ALLOCATION:CAPS"><primary>GST_PAD_SET_PROXY_ALLOCATION</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_PROXY_ALLOCATION(pad)   (GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_PROXY_ALLOCATION))
</programlisting>
<para>Set <parameter>pad</parameter>
 to proxy allocation queries, which means that the default query
handler will forward allocation queries to the internally linked <parameter>pads</parameter>

instead of discarding them.
Set this if the element always outputs data in the exact same format as it
receives as input. This is just for convenience to avoid implementing some
standard query handling code in an element.</para>
<refsect3 id="GST-PAD-SET-PROXY-ALLOCATION.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNSET-PROXY-ALLOCATION:CAPS" role="macro">
<title>GST_PAD_UNSET_PROXY_ALLOCATION()</title>
<indexterm zone="GST-PAD-UNSET-PROXY-ALLOCATION:CAPS"><primary>GST_PAD_UNSET_PROXY_ALLOCATION</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_PROXY_ALLOCATION(pad) (GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_PROXY_ALLOCATION))
</programlisting>
<para>Unset proxy allocation flag.</para>
<refsect3 id="GST-PAD-UNSET-PROXY-ALLOCATION.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-SET-PROXY-SCHEDULING:CAPS" role="macro">
<title>GST_PAD_SET_PROXY_SCHEDULING()</title>
<indexterm zone="GST-PAD-SET-PROXY-SCHEDULING:CAPS"><primary>GST_PAD_SET_PROXY_SCHEDULING</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_PROXY_SCHEDULING(pad)   (GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_PROXY_SCHEDULING))
</programlisting>
<para>Set <parameter>pad</parameter>
 to proxy scheduling queries, which means that the default query
handler will forward scheduling queries to the internally linked <parameter>pads</parameter>

instead of discarding them. You will usually want to handle scheduling
queries explicitly if your element supports multiple scheduling modes.</para>
<refsect3 id="GST-PAD-SET-PROXY-SCHEDULING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNSET-PROXY-SCHEDULING:CAPS" role="macro">
<title>GST_PAD_UNSET_PROXY_SCHEDULING()</title>
<indexterm zone="GST-PAD-UNSET-PROXY-SCHEDULING:CAPS"><primary>GST_PAD_UNSET_PROXY_SCHEDULING</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_PROXY_SCHEDULING(pad) (GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_PROXY_SCHEDULING))
</programlisting>
<para>Unset proxy scheduling flag.</para>
<refsect3 id="GST-PAD-UNSET-PROXY-SCHEDULING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-PROXY-SCHEDULING:CAPS" role="macro">
<title>GST_PAD_IS_PROXY_SCHEDULING()</title>
<indexterm zone="GST-PAD-IS-PROXY-SCHEDULING:CAPS"><primary>GST_PAD_IS_PROXY_SCHEDULING</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_PROXY_SCHEDULING(pad)    (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_PROXY_SCHEDULING))
</programlisting>
<para>Check if the given <parameter>pad</parameter>
 is set to proxy scheduling queries, which means that
the default query handler will forward scheduling queries to the internally
linked <parameter>pads</parameter>
 instead of discarding them.</para>
<refsect3 id="GST-PAD-IS-PROXY-SCHEDULING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-ACCEPT-INTERSECT:CAPS" role="macro">
<title>GST_PAD_IS_ACCEPT_INTERSECT()</title>
<indexterm zone="GST-PAD-IS-ACCEPT-INTERSECT:CAPS"><primary>GST_PAD_IS_ACCEPT_INTERSECT</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_ACCEPT_INTERSECT(pad)    (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_ACCEPT_INTERSECT))
</programlisting>
<para>Check if the pad's accept intersect flag is set. The default accept-caps
handler will check if the caps intersect the query-caps result instead of
checking for a subset. This is interesting for parser elements that can
accept incompletely specified caps.</para>
<refsect3 id="GST-PAD-IS-ACCEPT-INTERSECT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-SET-ACCEPT-INTERSECT:CAPS" role="macro">
<title>GST_PAD_SET_ACCEPT_INTERSECT()</title>
<indexterm zone="GST-PAD-SET-ACCEPT-INTERSECT:CAPS"><primary>GST_PAD_SET_ACCEPT_INTERSECT</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_ACCEPT_INTERSECT(pad)   (GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_ACCEPT_INTERSECT))
</programlisting>
<para>Set <parameter>pad</parameter>
 to by default accept caps by intersecting the result instead of
checking for a subset. This is interesting for parser elements that can
accept incompletely specified caps.</para>
<refsect3 id="GST-PAD-SET-ACCEPT-INTERSECT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-UNSET-ACCEPT-INTERSECT:CAPS" role="macro">
<title>GST_PAD_UNSET_ACCEPT_INTERSECT()</title>
<indexterm zone="GST-PAD-UNSET-ACCEPT-INTERSECT:CAPS"><primary>GST_PAD_UNSET_ACCEPT_INTERSECT</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_ACCEPT_INTERSECT(pad) (GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_ACCEPT_INTERSECT))
</programlisting>
<para>Unset accept intersect flag.</para>
<refsect3 id="GST-PAD-UNSET-ACCEPT-INTERSECT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-PAD-IS-ACCEPT-TEMPLATE:CAPS" role="macro" condition="since:1.6">
<title>GST_PAD_IS_ACCEPT_TEMPLATE()</title>
<indexterm zone="GST-PAD-IS-ACCEPT-TEMPLATE:CAPS" role="1.6"><primary>GST_PAD_IS_ACCEPT_TEMPLATE</primary></indexterm>
<programlisting language="C">#define GST_PAD_IS_ACCEPT_TEMPLATE(pad)    (GST_OBJECT_FLAG_IS_SET (pad, GST_PAD_FLAG_ACCEPT_TEMPLATE))
</programlisting>
<para>Check if the pad's accept caps operation will use the pad template caps.
The default accept-caps will do a query caps to get the caps, which might
be querying downstream causing unnecessary overhead. It is recommended to
implement a proper accept-caps query handler or to use this flag to prevent
recursive accept-caps handling.</para>
<refsect3 id="GST-PAD-IS-ACCEPT-TEMPLATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="GST-PAD-SET-ACCEPT-TEMPLATE:CAPS" role="macro" condition="since:1.6">
<title>GST_PAD_SET_ACCEPT_TEMPLATE()</title>
<indexterm zone="GST-PAD-SET-ACCEPT-TEMPLATE:CAPS" role="1.6"><primary>GST_PAD_SET_ACCEPT_TEMPLATE</primary></indexterm>
<programlisting language="C">#define GST_PAD_SET_ACCEPT_TEMPLATE(pad)   (GST_OBJECT_FLAG_SET (pad, GST_PAD_FLAG_ACCEPT_TEMPLATE))
</programlisting>
<para>Set <parameter>pad</parameter>
 to by default use the pad template caps to compare with
the accept caps instead of using a caps query result.</para>
<refsect3 id="GST-PAD-SET-ACCEPT-TEMPLATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="GST-PAD-UNSET-ACCEPT-TEMPLATE:CAPS" role="macro" condition="since:1.6">
<title>GST_PAD_UNSET_ACCEPT_TEMPLATE()</title>
<indexterm zone="GST-PAD-UNSET-ACCEPT-TEMPLATE:CAPS" role="1.6"><primary>GST_PAD_UNSET_ACCEPT_TEMPLATE</primary></indexterm>
<programlisting language="C">#define GST_PAD_UNSET_ACCEPT_TEMPLATE(pad) (GST_OBJECT_FLAG_UNSET (pad, GST_PAD_FLAG_ACCEPT_TEMPLATE))
</programlisting>
<para>Unset accept template flag.</para>
<refsect3 id="GST-PAD-UNSET-ACCEPT-TEMPLATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPad"><type>GstPad</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>

</refsect1>
<refsect1 id="GstPad.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstPad-struct" role="struct">
<title>struct GstPad</title>
<indexterm zone="GstPad-struct"><primary>GstPad</primary></indexterm>
<programlisting language="C">struct GstPad {
  gpointer                       element_private;

  GstPadTemplate                *padtemplate;

  GstPadDirection                direction;
};
</programlisting>
<para>The <link linkend="GstPad"><type>GstPad</type></link> structure. Use the functions to update the variables.</para>
<refsect3 id="GstPad.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="gpointer"><type>gpointer</type></link>&#160;<structfield id="GstPad-struct.element-private">element_private</structfield>;</para></entry>
<entry role="struct_member_description"><para>private data owned by the parent element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>&#160;*<structfield id="GstPad-struct.padtemplate">padtemplate</structfield>;</para></entry>
<entry role="struct_member_description"><para>padtemplate for this pad</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstPadDirection"><type>GstPadDirection</type></link>&#160;<structfield id="GstPad-struct.direction">direction</structfield>;</para></entry>
<entry role="struct_member_description"><para>the direction of the pad, cannot change after creating
the pad.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstPadDirection" role="enum">
<title>enum GstPadDirection</title>
<indexterm zone="GstPadDirection"><primary>GstPadDirection</primary></indexterm>
<para>The direction of a pad.</para>
<refsect3 id="GstPadDirection.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-UNKNOWN:CAPS">GST_PAD_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>direction is unknown.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-SRC:CAPS">GST_PAD_SRC</para></entry>
<entry role="enum_member_description"><para>the pad is a source pad.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-SINK:CAPS">GST_PAD_SINK</para></entry>
<entry role="enum_member_description"><para>the pad is a sink pad.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadFlags" role="enum">
<title>enum GstPadFlags</title>
<indexterm zone="GstPadFlags"><primary>GstPadFlags</primary></indexterm>
<para>Pad state flags</para>
<refsect3 id="GstPadFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-BLOCKED:CAPS">GST_PAD_FLAG_BLOCKED</para></entry>
<entry role="enum_member_description"><para>is dataflow on a pad blocked</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-FLUSHING:CAPS">GST_PAD_FLAG_FLUSHING</para></entry>
<entry role="enum_member_description"><para>is pad flushing</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-EOS:CAPS">GST_PAD_FLAG_EOS</para></entry>
<entry role="enum_member_description"><para>is pad in EOS state</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-BLOCKING:CAPS">GST_PAD_FLAG_BLOCKING</para></entry>
<entry role="enum_member_description"><para>is pad currently blocking on a buffer or event</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-NEED-PARENT:CAPS">GST_PAD_FLAG_NEED_PARENT</para></entry>
<entry role="enum_member_description"><para>ensure that there is a parent object before calling
                      into the pad callbacks.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-NEED-RECONFIGURE:CAPS">GST_PAD_FLAG_NEED_RECONFIGURE</para></entry>
<entry role="enum_member_description"><para>the pad should be reconfigured/renegotiated.
                           The flag has to be unset manually after
                           reconfiguration happened.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-PENDING-EVENTS:CAPS">GST_PAD_FLAG_PENDING_EVENTS</para></entry>
<entry role="enum_member_description"><para>the pad has pending events</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-FIXED-CAPS">GST_PAD_FLAG_FIXED_CAPS</para></entry>
<entry role="enum_member_description"><para>the pad is using fixed caps. This means that
    once the caps are set on the pad, the default caps query function
    will only return those caps.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-PROXY-CAPS">GST_PAD_FLAG_PROXY_CAPS</para></entry>
<entry role="enum_member_description"><para>the default event and query handler will forward
                     all events and queries to the internally linked pads
                     instead of discarding them.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-PROXY-ALLOCATION:CAPS">GST_PAD_FLAG_PROXY_ALLOCATION</para></entry>
<entry role="enum_member_description"><para>the default query handler will forward
                     allocation queries to the internally linked pads
                     instead of discarding them.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-PROXY-SCHEDULING:CAPS">GST_PAD_FLAG_PROXY_SCHEDULING</para></entry>
<entry role="enum_member_description"><para>the default query handler will forward
                     scheduling queries to the internally linked pads
                     instead of discarding them.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-ACCEPT-INTERSECT:CAPS">GST_PAD_FLAG_ACCEPT_INTERSECT</para></entry>
<entry role="enum_member_description"><para>the default accept-caps handler will check
                     it the caps intersect the query-caps result instead
                     of checking for a subset. This is interesting for
                     parsers that can accept incompletely specified caps.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-ACCEPT-TEMPLATE:CAPS">GST_PAD_FLAG_ACCEPT_TEMPLATE</para></entry>
<entry role="enum_member_description"><para>the default accept-caps handler will use
                     the template pad caps instead of query caps to
                     compare with the accept caps. Use this in combination
                     with <link linkend="GST-PAD-FLAG-ACCEPT-INTERSECT:CAPS"><literal>GST_PAD_FLAG_ACCEPT_INTERSECT</literal></link>. (Since 1.6)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-FLAG-LAST:CAPS">GST_PAD_FLAG_LAST</para></entry>
<entry role="enum_member_description"><para>offset to define more flags</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadLinkReturn" role="enum">
<title>enum GstPadLinkReturn</title>
<indexterm zone="GstPadLinkReturn"><primary>GstPadLinkReturn</primary></indexterm>
<para>Result values from gst_pad_link and friends.</para>
<refsect3 id="GstPadLinkReturn.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-OK:CAPS">GST_PAD_LINK_OK</para></entry>
<entry role="enum_member_description"><para>link succeeded</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-WRONG-HIERARCHY:CAPS">GST_PAD_LINK_WRONG_HIERARCHY</para></entry>
<entry role="enum_member_description"><para>pads have no common grandparent</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-WAS-LINKED:CAPS">GST_PAD_LINK_WAS_LINKED</para></entry>
<entry role="enum_member_description"><para>pad was already linked</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-WRONG-DIRECTION:CAPS">GST_PAD_LINK_WRONG_DIRECTION</para></entry>
<entry role="enum_member_description"><para>pads have wrong direction</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-NOFORMAT:CAPS">GST_PAD_LINK_NOFORMAT</para></entry>
<entry role="enum_member_description"><para>pads do not have common format</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-NOSCHED:CAPS">GST_PAD_LINK_NOSCHED</para></entry>
<entry role="enum_member_description"><para>pads cannot cooperate in scheduling</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-REFUSED:CAPS">GST_PAD_LINK_REFUSED</para></entry>
<entry role="enum_member_description"><para>refused for some reason</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadLinkCheck" role="enum">
<title>enum GstPadLinkCheck</title>
<indexterm zone="GstPadLinkCheck"><primary>GstPadLinkCheck</primary></indexterm>
<para>The amount of checking to be done when linking pads. <parameter>GST_PAD_LINK_CHECK_CAPS</parameter>

and <parameter>GST_PAD_LINK_CHECK_TEMPLATE_CAPS</parameter>
 are mutually exclusive. If both are
specified, expensive but safe <parameter>GST_PAD_LINK_CHECK_CAPS</parameter>
 are performed.</para>
<warning><para>
Only disable some of the checks if you are 100% certain you know the link
will not fail because of hierarchy/caps compatibility failures. If uncertain,
use the default checks (<link linkend="GST-PAD-LINK-CHECK-DEFAULT:CAPS"><literal>GST_PAD_LINK_CHECK_DEFAULT</literal></link>) or the regular methods
for linking the pads.
</para></warning>
<refsect3 id="GstPadLinkCheck.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-CHECK-NOTHING:CAPS">GST_PAD_LINK_CHECK_NOTHING</para></entry>
<entry role="enum_member_description"><para>Don't check hierarchy or caps compatibility.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-CHECK-HIERARCHY:CAPS">GST_PAD_LINK_CHECK_HIERARCHY</para></entry>
<entry role="enum_member_description"><para>Check the pads have same parents/grandparents.
  Could be omitted if it is already known that the two elements that own the
  pads are in the same bin.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-CHECK-TEMPLATE-CAPS">GST_PAD_LINK_CHECK_TEMPLATE_CAPS</para></entry>
<entry role="enum_member_description"><para>Check if the pads are compatible by using
  their template caps. This is much faster than <parameter>GST_PAD_LINK_CHECK_CAPS</parameter>
, but
  would be unsafe e.g. if one pad has <link linkend="GST-CAPS-ANY:CAPS"><literal>GST_CAPS_ANY</literal></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-CHECK-CAPS">GST_PAD_LINK_CHECK_CAPS</para></entry>
<entry role="enum_member_description"><para>Check if the pads are compatible by comparing the
  caps returned by <link linkend="gst-pad-query-caps"><function>gst_pad_query_caps()</function></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-LINK-CHECK-DEFAULT:CAPS">GST_PAD_LINK_CHECK_DEFAULT</para></entry>
<entry role="enum_member_description"><para>The default checks done when linking
  pads (i.e. the ones used by <link linkend="gst-pad-link"><function>gst_pad_link()</function></link>).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstFlowReturn" role="enum">
<title>enum GstFlowReturn</title>
<indexterm zone="GstFlowReturn"><primary>GstFlowReturn</primary></indexterm>
<para>The result of passing data to a pad.</para>
<para>Note that the custom return values should not be exposed outside of the
element scope.</para>
<refsect3 id="GstFlowReturn.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-SUCCESS-2:CAPS">GST_FLOW_CUSTOM_SUCCESS_2</para></entry>
<entry role="enum_member_description"><para>Pre-defined custom success code.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-SUCCESS-1:CAPS">GST_FLOW_CUSTOM_SUCCESS_1</para></entry>
<entry role="enum_member_description"><para>Pre-defined custom success code (define your
                              custom success code to this to avoid compiler
                              warnings).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-SUCCESS:CAPS">GST_FLOW_CUSTOM_SUCCESS</para></entry>
<entry role="enum_member_description"><para>Elements can use values starting from
                              this (and higher) to define custom success
                              codes.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-OK:CAPS">GST_FLOW_OK</para></entry>
<entry role="enum_member_description"><para>Data passing was ok.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-NOT-LINKED:CAPS">GST_FLOW_NOT_LINKED</para></entry>
<entry role="enum_member_description"><para>Pad is not linked.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-FLUSHING:CAPS">GST_FLOW_FLUSHING</para></entry>
<entry role="enum_member_description"><para>Pad is flushing.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-EOS:CAPS">GST_FLOW_EOS</para></entry>
<entry role="enum_member_description"><para>Pad is EOS.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-NOT-NEGOTIATED:CAPS">GST_FLOW_NOT_NEGOTIATED</para></entry>
<entry role="enum_member_description"><para>Pad is not negotiated.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-ERROR:CAPS">GST_FLOW_ERROR</para></entry>
<entry role="enum_member_description"><para>Some (fatal) error occurred. Element generating
                              this error should post an error message with more
                              details.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-NOT-SUPPORTED:CAPS">GST_FLOW_NOT_SUPPORTED</para></entry>
<entry role="enum_member_description"><para>This operation is not supported.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-ERROR:CAPS">GST_FLOW_CUSTOM_ERROR</para></entry>
<entry role="enum_member_description"><para>Elements can use values starting from
                              this (and lower) to define custom error codes.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-ERROR-1:CAPS">GST_FLOW_CUSTOM_ERROR_1</para></entry>
<entry role="enum_member_description"><para>Pre-defined custom error code (define your
                              custom error code to this to avoid compiler
                              warnings).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-FLOW-CUSTOM-ERROR-2:CAPS">GST_FLOW_CUSTOM_ERROR_2</para></entry>
<entry role="enum_member_description"><para>Pre-defined custom error code.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadMode" role="enum">
<title>enum GstPadMode</title>
<indexterm zone="GstPadMode"><primary>GstPadMode</primary></indexterm>
<para>The status of a GstPad. After activating a pad, which usually happens when the
parent element goes from READY to PAUSED, the GstPadMode defines if the
pad operates in push or pull mode.</para>
<refsect3 id="GstPadMode.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-MODE-NONE:CAPS">GST_PAD_MODE_NONE</para></entry>
<entry role="enum_member_description"><para>Pad will not handle dataflow</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-MODE-PUSH:CAPS">GST_PAD_MODE_PUSH</para></entry>
<entry role="enum_member_description"><para>Pad handles dataflow in downstream push mode</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-MODE-PULL:CAPS">GST_PAD_MODE_PULL</para></entry>
<entry role="enum_member_description"><para>Pad handles dataflow in upstream pull mode</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadProbeReturn" role="enum">
<title>enum GstPadProbeReturn</title>
<indexterm zone="GstPadProbeReturn"><primary>GstPadProbeReturn</primary></indexterm>
<para>Different return values for the <link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link>.</para>
<refsect3 id="GstPadProbeReturn.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-DROP:CAPS">GST_PAD_PROBE_DROP</para></entry>
<entry role="enum_member_description"><para>drop data in data probes. For push mode this means that
       the data item is not sent downstream. For pull mode, it means that
       the data item is not passed upstream. In both cases, no more probes
       are called and <link linkend="GST-FLOW-OK:CAPS"><type>GST_FLOW_OK</type></link> or <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is returned to the caller.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-OK:CAPS">GST_PAD_PROBE_OK</para></entry>
<entry role="enum_member_description"><para>normal probe return value. This leaves the probe in
       place, and defers decisions about dropping or passing data to other
       probes, if any. If there are no other probes, the default behaviour
       for the probe type applies (block for blocking probes, and pass for
       non-blocking probes).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-REMOVE:CAPS">GST_PAD_PROBE_REMOVE</para></entry>
<entry role="enum_member_description"><para>remove this probe.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-PASS:CAPS">GST_PAD_PROBE_PASS</para></entry>
<entry role="enum_member_description"><para>pass the data item in the block probe and block on the
       next item.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-HANDLED:CAPS">GST_PAD_PROBE_HANDLED</para></entry>
<entry role="enum_member_description"><para>Data has been handled in the probe and will not be
       forwarded further. For events and buffers this is the same behaviour as
       <parameter>GST_PAD_PROBE_DROP</parameter>
 (except that in this case you need to unref the buffer
       or event yourself). For queries it will also return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to the caller.
       The probe can also modify the <link linkend="GstFlowReturn"><type>GstFlowReturn</type></link> value by using the
       <link linkend="GST-PAD-PROBE-INFO-FLOW-RETURN:CAPS"><function><link linkend="GST-PAD-PROBE-INFO-FLOW-RETURN:CAPS"><function>GST_PAD_PROBE_INFO_FLOW_RETURN()</function></link></function></link> accessor.
       Note that the resulting query must contain valid entries.
       Since: 1.6</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadProbeType" role="enum">
<title>enum GstPadProbeType</title>
<indexterm zone="GstPadProbeType"><primary>GstPadProbeType</primary></indexterm>
<para>The different probing types that can occur. When either one of
<parameter>GST_PAD_PROBE_TYPE_IDLE</parameter>
 or <parameter>GST_PAD_PROBE_TYPE_BLOCK</parameter>
 is used, the probe will be a
blocking probe.</para>
<refsect3 id="GstPadProbeType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-INVALID:CAPS">GST_PAD_PROBE_TYPE_INVALID</para></entry>
<entry role="enum_member_description"><para>invalid probe type</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-IDLE:CAPS">GST_PAD_PROBE_TYPE_IDLE</para></entry>
<entry role="enum_member_description"><para>probe idle pads and block</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BLOCK:CAPS">GST_PAD_PROBE_TYPE_BLOCK</para></entry>
<entry role="enum_member_description"><para>probe and block pads</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BUFFER:CAPS">GST_PAD_PROBE_TYPE_BUFFER</para></entry>
<entry role="enum_member_description"><para>probe buffers</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BUFFER-LIST:CAPS">GST_PAD_PROBE_TYPE_BUFFER_LIST</para></entry>
<entry role="enum_member_description"><para>probe buffer lists</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-EVENT-DOWNSTREAM:CAPS">GST_PAD_PROBE_TYPE_EVENT_DOWNSTREAM</para></entry>
<entry role="enum_member_description"><para>probe downstream events</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-EVENT-UPSTREAM:CAPS">GST_PAD_PROBE_TYPE_EVENT_UPSTREAM</para></entry>
<entry role="enum_member_description"><para>probe upstream events</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-EVENT-FLUSH:CAPS">GST_PAD_PROBE_TYPE_EVENT_FLUSH</para></entry>
<entry role="enum_member_description"><para>probe flush events. This probe has to be
    explicitly enabled and is not included in the
    @<parameter>GST_PAD_PROBE_TYPE_EVENT_DOWNSTREAM</parameter>
 or
    @<parameter>GST_PAD_PROBE_TYPE_EVENT_UPSTREAM</parameter>
 probe types.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-QUERY-DOWNSTREAM:CAPS">GST_PAD_PROBE_TYPE_QUERY_DOWNSTREAM</para></entry>
<entry role="enum_member_description"><para>probe downstream queries</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-QUERY-UPSTREAM:CAPS">GST_PAD_PROBE_TYPE_QUERY_UPSTREAM</para></entry>
<entry role="enum_member_description"><para>probe upstream queries</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-PUSH:CAPS">GST_PAD_PROBE_TYPE_PUSH</para></entry>
<entry role="enum_member_description"><para>probe push</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-PULL:CAPS">GST_PAD_PROBE_TYPE_PULL</para></entry>
<entry role="enum_member_description"><para>probe pull</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BLOCKING:CAPS">GST_PAD_PROBE_TYPE_BLOCKING</para></entry>
<entry role="enum_member_description"><para>probe and block at the next opportunity, at data flow or when idle</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-DATA-DOWNSTREAM:CAPS">GST_PAD_PROBE_TYPE_DATA_DOWNSTREAM</para></entry>
<entry role="enum_member_description"><para>probe downstream data (buffers, buffer lists, and events)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-DATA-UPSTREAM:CAPS">GST_PAD_PROBE_TYPE_DATA_UPSTREAM</para></entry>
<entry role="enum_member_description"><para>probe upstream data (events)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-DATA-BOTH:CAPS">GST_PAD_PROBE_TYPE_DATA_BOTH</para></entry>
<entry role="enum_member_description"><para>probe upstream and downstream data (buffers, buffer lists, and events)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BLOCK-DOWNSTREAM:CAPS">GST_PAD_PROBE_TYPE_BLOCK_DOWNSTREAM</para></entry>
<entry role="enum_member_description"><para>probe and block downstream data (buffers, buffer lists, and events)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-BLOCK-UPSTREAM:CAPS">GST_PAD_PROBE_TYPE_BLOCK_UPSTREAM</para></entry>
<entry role="enum_member_description"><para>probe and block upstream data (events)</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-EVENT-BOTH:CAPS">GST_PAD_PROBE_TYPE_EVENT_BOTH</para></entry>
<entry role="enum_member_description"><para>probe upstream and downstream events</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-QUERY-BOTH:CAPS">GST_PAD_PROBE_TYPE_QUERY_BOTH</para></entry>
<entry role="enum_member_description"><para>probe upstream and downstream queries</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-ALL-BOTH:CAPS">GST_PAD_PROBE_TYPE_ALL_BOTH</para></entry>
<entry role="enum_member_description"><para>probe upstream events and queries and downstream buffers, buffer lists, events and queries</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-PAD-PROBE-TYPE-SCHEDULING:CAPS">GST_PAD_PROBE_TYPE_SCHEDULING</para></entry>
<entry role="enum_member_description"><para>probe push and pull</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstPadProbeInfo" role="struct">
<title>struct GstPadProbeInfo</title>
<indexterm zone="GstPadProbeInfo"><primary>GstPadProbeInfo</primary></indexterm>
<programlisting language="C">struct GstPadProbeInfo {
  GstPadProbeType type;
  gulong id;
  gpointer data;
  guint64 offset;
  guint size;
};
</programlisting>
<para>Info passed in the <link linkend="GstPadProbeCallback"><type>GstPadProbeCallback</type></link>.</para>
<refsect3 id="GstPadProbeInfo.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstPadProbeType"><type>GstPadProbeType</type></link>&#160;<structfield id="GstPadProbeInfo.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>the current probe type</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="gulong"><type>gulong</type></link>&#160;<structfield id="GstPadProbeInfo.id">id</structfield>;</para></entry>
<entry role="struct_member_description"><para>the id of the probe</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="gpointer"><type>gpointer</type></link>&#160;<structfield id="GstPadProbeInfo.data">data</structfield>;</para></entry>
<entry role="struct_member_description"><para> type specific data, check the <parameter>type</parameter>
field to know the
datatype.  This field can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="struct_member_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint64"><type>guint64</type></link>&#160;<structfield id="GstPadProbeInfo.offset">offset</structfield>;</para></entry>
<entry role="struct_member_description"><para>offset of pull probe, this field is valid when <parameter>type</parameter>
contains
<link linkend="GST-PAD-PROBE-TYPE-PULL:CAPS"><type>GST_PAD_PROBE_TYPE_PULL</type></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint"><type>guint</type></link>&#160;<structfield id="GstPadProbeInfo.size">size</structfield>;</para></entry>
<entry role="struct_member_description"><para>size of pull probe, this field is valid when <parameter>type</parameter>
contains
<link linkend="GST-PAD-PROBE-TYPE-PULL:CAPS"><type>GST_PAD_PROBE_TYPE_PULL</type></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>

</refsect1>
<refsect1 id="GstPad.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GstPad--caps" role="property"><title>The <literal>“caps”</literal> property</title>
<indexterm zone="GstPad--caps"><primary>GstPad:caps</primary></indexterm>
<programlisting>  “caps”                     <link linkend="GstCaps"><type>GstCaps</type></link>&#160;*</programlisting>
<para>The capabilities of the pad.</para><para>Flags: Read</para>
</refsect2>
<refsect2 id="GstPad--direction" role="property"><title>The <literal>“direction”</literal> property</title>
<indexterm zone="GstPad--direction"><primary>GstPad:direction</primary></indexterm>
<programlisting>  “direction”                <link linkend="GstPadDirection"><type>GstPadDirection</type></link></programlisting>
<para>The direction of the pad.</para><para>Flags: Read / Write / Construct Only</para>
<para>Default value: GST_PAD_UNKNOWN</para>
</refsect2>
<refsect2 id="GstPad--offset" role="property"><title>The <literal>“offset”</literal> property</title>
<indexterm zone="GstPad--offset" role="1.6"><primary>GstPad:offset</primary></indexterm>
<programlisting>  “offset”                   <link linkend="gint64"><type>gint64</type></link></programlisting>
<para>The offset that will be applied to the running time of the pad.</para>
<para>Flags: Read / Write</para>
<para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
<para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="GstPad--template" role="property"><title>The <literal>“template”</literal> property</title>
<indexterm zone="GstPad--template"><primary>GstPad:template</primary></indexterm>
<programlisting>  “template”                 <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>&#160;*</programlisting>
<para>The GstPadTemplate of this pad.</para><para>Flags: Read / Write</para>
</refsect2>

</refsect1>
<refsect1 id="GstPad.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GstPad-linked" role="signal"><title>The <literal>“linked”</literal> signal</title>
<indexterm zone="GstPad-linked"><primary>GstPad::linked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GstPad"><type>GstPad</type></link>  *pad,
               <link linkend="GstPad"><type>GstPad</type></link>  *peer,
               <link linkend="gpointer"><type>gpointer</type></link> user_data)</programlisting>
<para>Signals that a pad has been linked to the peer pad.</para>
<refsect3 id="GstPad-linked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the pad that emitted the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>peer</para></entry>
<entry role="parameter_description"><para>the peer pad that has been connected</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2><refsect2 id="GstPad-unlinked" role="signal"><title>The <literal>“unlinked”</literal> signal</title>
<indexterm zone="GstPad-unlinked"><primary>GstPad::unlinked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GstPad"><type>GstPad</type></link>  *pad,
               <link linkend="GstPad"><type>GstPad</type></link>  *peer,
               <link linkend="gpointer"><type>gpointer</type></link> user_data)</programlisting>
<para>Signals that a pad has been unlinked from the peer pad.</para>
<refsect3 id="GstPad-unlinked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the pad that emitted the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>peer</para></entry>
<entry role="parameter_description"><para>the peer pad that has been disconnected</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2>
</refsect1>
<refsect1 id="GstPad.see-also">
<title>See Also</title>
<para><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>, <link linkend="GstElement"><type>GstElement</type></link>, <link linkend="GstEvent"><type>GstEvent</type></link>, <link linkend="GstQuery"><type>GstQuery</type></link>, <link linkend="GstBuffer"><type>GstBuffer</type></link></para>

</refsect1>

</refentry>
