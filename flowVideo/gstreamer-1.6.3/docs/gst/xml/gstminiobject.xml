<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="gstreamer-GstMiniObject">
<refmeta>
<refentrytitle role="top_of_page" id="gstreamer-GstMiniObject.top_of_page">GstMiniObject</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstMiniObject</refname>
<refpurpose>Lightweight base class for the GStreamer object hierarchy</refpurpose>
</refnamediv>

<refsect1 id="gstreamer-GstMiniObject.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstMiniObjectCopyFunction">*GstMiniObjectCopyFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstMiniObjectDisposeFunction">*GstMiniObjectDisposeFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstMiniObjectFreeFunction">*GstMiniObjectFreeFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GstMiniObjectNotify">*GstMiniObjectNotify</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-TYPE:CAPS">GST_MINI_OBJECT_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-FLAGS:CAPS">GST_MINI_OBJECT_FLAGS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-FLAG-IS-SET:CAPS">GST_MINI_OBJECT_FLAG_IS_SET</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-FLAG-SET:CAPS">GST_MINI_OBJECT_FLAG_SET</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-FLAG-UNSET:CAPS">GST_MINI_OBJECT_FLAG_UNSET</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-IS-LOCKABLE:CAPS">GST_MINI_OBJECT_IS_LOCKABLE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-REFCOUNT:CAPS">GST_MINI_OBJECT_REFCOUNT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-MINI-OBJECT-REFCOUNT-VALUE:CAPS">GST_MINI_OBJECT_REFCOUNT_VALUE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-DEFINE-MINI-OBJECT-TYPE:CAPS">GST_DEFINE_MINI_OBJECT_TYPE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-init">gst_mini_object_init</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-mini-object-ref">gst_mini_object_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-unref">gst_mini_object_unref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-weak-ref">gst_mini_object_weak_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-weak-unref">gst_mini_object_weak_unref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-lock">gst_mini_object_lock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-unlock">gst_mini_object_unlock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-is-writable">gst_mini_object_is_writable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-mini-object-make-writable">gst_mini_object_make_writable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-mini-object-copy">gst_mini_object_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-set-qdata">gst_mini_object_set_qdata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-get-qdata">gst_mini_object_get_qdata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-steal-qdata">gst_mini_object_steal_qdata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-replace">gst_mini_object_replace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-mini-object-take">gst_mini_object_take</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-mini-object-steal">gst_mini_object_steal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gstreamer-GstMiniObject.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstMiniObject">GstMiniObject</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstMiniObjectFlags">GstMiniObjectFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstLockFlags">GstLockFlags</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-LOCK-FLAG-READWRITE:CAPS">GST_LOCK_FLAG_READWRITE</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="gstreamer-GstMiniObject.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="gstreamer-GstMiniObject.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstMiniObject"><type>GstMiniObject</type></link> is a simple structure that can be used to implement refcounted
types.</para>
<para>Subclasses will include <link linkend="GstMiniObject"><type>GstMiniObject</type></link> as the first member in their structure
and then call <link linkend="gst-mini-object-init"><function>gst_mini_object_init()</function></link> to initialize the <link linkend="GstMiniObject"><type>GstMiniObject</type></link> fields.</para>
<para>gst_mini_object_ref() and <link linkend="gst-mini-object-unref"><function>gst_mini_object_unref()</function></link> increment and decrement the
refcount respectively. When the refcount of a mini-object reaches 0, the
dispose function is called first and when this returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the free
function of the miniobject is called.</para>
<para>A copy can be made with <link linkend="gst-mini-object-copy"><function>gst_mini_object_copy()</function></link>.</para>
<para>gst_mini_object_is_writable() will return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when the refcount of the
object is exactly 1, meaning the current caller has the only reference to the
object. <link linkend="gst-mini-object-make-writable"><function>gst_mini_object_make_writable()</function></link> will return a writable version of the
object, which might be a new copy when the refcount was not 1.</para>
<para>Opaque data can be associated with a <link linkend="GstMiniObject"><type>GstMiniObject</type></link> with
<link linkend="gst-mini-object-set-qdata"><function>gst_mini_object_set_qdata()</function></link> and <link linkend="gst-mini-object-get-qdata"><function>gst_mini_object_get_qdata()</function></link>. The data is
meant to be specific to the particular object and is not automatically copied
with <link linkend="gst-mini-object-copy"><function>gst_mini_object_copy()</function></link> or similar methods.</para>
<para>A weak reference can be added and remove with <link linkend="gst-mini-object-weak-ref"><function>gst_mini_object_weak_ref()</function></link>
and <link linkend="gst-mini-object-weak-unref"><function>gst_mini_object_weak_unref()</function></link> respectively.</para>

</refsect1>
<refsect1 id="gstreamer-GstMiniObject.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="GstMiniObjectCopyFunction" role="function">
<title>GstMiniObjectCopyFunction&#160;()</title>
<indexterm zone="GstMiniObjectCopyFunction"><primary>GstMiniObjectCopyFunction</primary></indexterm>
<programlisting language="C"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GstMiniObjectCopyFunction<phrase role="c_punctuation">)</phrase> (<parameter>const <link linkend="GstMiniObject"><type>GstMiniObject</type></link> *obj</parameter>);</programlisting>
<para>Function prototype for methods to create copies of instances.</para>
<refsect3 id="GstMiniObjectCopyFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to copy</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstMiniObjectCopyFunction.returns" role="returns">
<title>Returns</title>
<para> reference to cloned instance.</para>
</refsect3></refsect2>
<refsect2 id="GstMiniObjectDisposeFunction" role="function">
<title>GstMiniObjectDisposeFunction&#160;()</title>
<indexterm zone="GstMiniObjectDisposeFunction"><primary>GstMiniObjectDisposeFunction</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstMiniObjectDisposeFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *obj</parameter>);</programlisting>
<para>Function prototype for when a miniobject has lost its last refcount.
Implementation of the mini object are allowed to revive the
passed object by doing a <link linkend="gst-mini-object-ref"><function>gst_mini_object_ref()</function></link>. If the object is not
revived after the dispose function, the function should return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>
and the memory associated with the object is freed.</para>
<refsect3 id="GstMiniObjectDisposeFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to dispose</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstMiniObjectDisposeFunction.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the object should be cleaned up.</para>
</refsect3></refsect2>
<refsect2 id="GstMiniObjectFreeFunction" role="function">
<title>GstMiniObjectFreeFunction&#160;()</title>
<indexterm zone="GstMiniObjectFreeFunction"><primary>GstMiniObjectFreeFunction</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstMiniObjectFreeFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *obj</parameter>);</programlisting>
<para>Virtual function prototype for methods to free resources used by
mini-objects.</para>
<refsect3 id="GstMiniObjectFreeFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to free</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstMiniObjectNotify" role="function">
<title>GstMiniObjectNotify&#160;()</title>
<indexterm zone="GstMiniObjectNotify"><primary>GstMiniObjectNotify</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GstMiniObjectNotify<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                        <parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *obj</parameter>);</programlisting>
<para>A <link linkend="GstMiniObjectNotify"><type>GstMiniObjectNotify</type></link> function can be added to a mini object as a
callback that gets triggered when <link linkend="gst-mini-object-unref"><function>gst_mini_object_unref()</function></link> drops the
last ref and <parameter>obj</parameter>
 is about to be freed.</para>
<refsect3 id="GstMiniObjectNotify.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>data that was provided when the notify was added</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>the mini object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-TYPE:CAPS" role="macro">
<title>GST_MINI_OBJECT_TYPE()</title>
<indexterm zone="GST-MINI-OBJECT-TYPE:CAPS"><primary>GST_MINI_OBJECT_TYPE</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_TYPE(obj)  (GST_MINI_OBJECT_CAST(obj)-&gt;type)
</programlisting>
<para>This macro returns the type of the mini-object.</para>
<refsect3 id="GST-MINI-OBJECT-TYPE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to return type for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-FLAGS:CAPS" role="macro">
<title>GST_MINI_OBJECT_FLAGS()</title>
<indexterm zone="GST-MINI-OBJECT-FLAGS:CAPS"><primary>GST_MINI_OBJECT_FLAGS</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_FLAGS(obj)  (GST_MINI_OBJECT_CAST(obj)-&gt;flags)
</programlisting>
<para>This macro returns the entire set of flags for the mini-object.</para>
<refsect3 id="GST-MINI-OBJECT-FLAGS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to return flags for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-FLAG-IS-SET:CAPS" role="macro">
<title>GST_MINI_OBJECT_FLAG_IS_SET()</title>
<indexterm zone="GST-MINI-OBJECT-FLAG-IS-SET:CAPS"><primary>GST_MINI_OBJECT_FLAG_IS_SET</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_FLAG_IS_SET(obj,flag)        !!(GST_MINI_OBJECT_FLAGS (obj) &amp; (flag))
</programlisting>
<para>This macro checks to see if the given flag is set.</para>
<refsect3 id="GST-MINI-OBJECT-FLAG-IS-SET.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to check for flags.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flag</para></entry>
<entry role="parameter_description"><para>Flag to check for</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-FLAG-SET:CAPS" role="macro">
<title>GST_MINI_OBJECT_FLAG_SET()</title>
<indexterm zone="GST-MINI-OBJECT-FLAG-SET:CAPS"><primary>GST_MINI_OBJECT_FLAG_SET</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_FLAG_SET(obj,flag)           (GST_MINI_OBJECT_FLAGS (obj) |= (flag))
</programlisting>
<para>This macro sets the given bits.</para>
<refsect3 id="GST-MINI-OBJECT-FLAG-SET.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to set flag in.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flag</para></entry>
<entry role="parameter_description"><para>Flag to set, can by any number of bits in guint32.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-FLAG-UNSET:CAPS" role="macro">
<title>GST_MINI_OBJECT_FLAG_UNSET()</title>
<indexterm zone="GST-MINI-OBJECT-FLAG-UNSET:CAPS"><primary>GST_MINI_OBJECT_FLAG_UNSET</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_FLAG_UNSET(obj,flag)         (GST_MINI_OBJECT_FLAGS (obj) &amp;= ~(flag))
</programlisting>
<para>This macro unsets the given bits.</para>
<refsect3 id="GST-MINI-OBJECT-FLAG-UNSET.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>MiniObject to unset flag in.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flag</para></entry>
<entry role="parameter_description"><para>Flag to set, must be a single bit in guint32.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-IS-LOCKABLE:CAPS" role="macro">
<title>GST_MINI_OBJECT_IS_LOCKABLE()</title>
<indexterm zone="GST-MINI-OBJECT-IS-LOCKABLE:CAPS"><primary>GST_MINI_OBJECT_IS_LOCKABLE</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_IS_LOCKABLE(obj)  GST_MINI_OBJECT_FLAG_IS_SET(obj, GST_MINI_OBJECT_FLAG_LOCKABLE)
</programlisting>
<para>Check if <parameter>obj</parameter>
 is lockable. A lockable object can be locked and unlocked with
<link linkend="gst-mini-object-lock"><function>gst_mini_object_lock()</function></link> and <link linkend="gst-mini-object-unlock"><function>gst_mini_object_unlock()</function></link>.</para>
<refsect3 id="GST-MINI-OBJECT-IS-LOCKABLE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMiniObject"><type>GstMiniObject</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-REFCOUNT:CAPS" role="macro">
<title>GST_MINI_OBJECT_REFCOUNT()</title>
<indexterm zone="GST-MINI-OBJECT-REFCOUNT:CAPS"><primary>GST_MINI_OBJECT_REFCOUNT</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_REFCOUNT(obj)           ((GST_MINI_OBJECT_CAST(obj))-&gt;refcount)
</programlisting>
<para>Get access to the reference count field of the mini-object.</para>
<refsect3 id="GST-MINI-OBJECT-REFCOUNT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMiniObject"><type>GstMiniObject</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-MINI-OBJECT-REFCOUNT-VALUE:CAPS" role="macro">
<title>GST_MINI_OBJECT_REFCOUNT_VALUE()</title>
<indexterm zone="GST-MINI-OBJECT-REFCOUNT-VALUE:CAPS"><primary>GST_MINI_OBJECT_REFCOUNT_VALUE</primary></indexterm>
<programlisting language="C">#define GST_MINI_OBJECT_REFCOUNT_VALUE(obj)     (g_atomic_int_get (&amp;(GST_MINI_OBJECT_CAST(obj))-&gt;refcount))
</programlisting>
<para>Get the reference count value of the mini-object.</para>
<refsect3 id="GST-MINI-OBJECT-REFCOUNT-VALUE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMiniObject"><type>GstMiniObject</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-DEFINE-MINI-OBJECT-TYPE:CAPS" role="macro">
<title>GST_DEFINE_MINI_OBJECT_TYPE()</title>
<indexterm zone="GST-DEFINE-MINI-OBJECT-TYPE:CAPS"><primary>GST_DEFINE_MINI_OBJECT_TYPE</primary></indexterm>
<programlisting language="C">#define             GST_DEFINE_MINI_OBJECT_TYPE(TypeName,type_name)</programlisting>
<para>Define a new mini-object type with the given name</para>
<refsect3 id="GST-DEFINE-MINI-OBJECT-TYPE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>TypeName</para></entry>
<entry role="parameter_description"><para>name of the new type in CamelCase</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type_name</para></entry>
<entry role="parameter_description"><para>name of the new type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-init" role="function">
<title>gst_mini_object_init&#160;()</title>
<indexterm zone="gst-mini-object-init"><primary>gst_mini_object_init</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_init (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>,
                      <parameter><link linkend="guint"><type>guint</type></link> flags</parameter>,
                      <parameter><link linkend="GType"><type>GType</type></link> type</parameter>,
                      <parameter><link linkend="GstMiniObjectCopyFunction"><type>GstMiniObjectCopyFunction</type></link> copy_func</parameter>,
                      <parameter><link linkend="GstMiniObjectDisposeFunction"><type>GstMiniObjectDisposeFunction</type></link> dispose_func</parameter>,
                      <parameter><link linkend="GstMiniObjectFreeFunction"><type>GstMiniObjectFreeFunction</type></link> free_func</parameter>);</programlisting>
<para>Initializes a mini-object with the desired type and copy/dispose/free
functions.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-init.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMiniObject"><type>GstMiniObject</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>initial <link linkend="GstMiniObjectFlags"><type>GstMiniObjectFlags</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the <link linkend="GType"><type>GType</type></link> of the mini-object to create</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>copy_func</para></entry>
<entry role="parameter_description"><para> the copy function, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dispose_func</para></entry>
<entry role="parameter_description"><para> the dispose function, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>free_func</para></entry>
<entry role="parameter_description"><para> the free function or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-ref" role="function">
<title>gst_mini_object_ref&#160;()</title>
<indexterm zone="gst-mini-object-ref"><primary>gst_mini_object_ref</primary></indexterm>
<programlisting language="C"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
gst_mini_object_ref (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>);</programlisting>
<para>Increase the reference count of the mini-object.</para>
<para>Note that the refcount affects the writability
of <parameter>mini</parameter>
-object, see <link linkend="gst-mini-object-is-writable"><function>gst_mini_object_is_writable()</function></link>. It is
important to note that keeping additional references to
GstMiniObject instances can potentially increase the number
of memcpy operations in a pipeline, especially if the miniobject
is a <link linkend="GstBuffer"><type>GstBuffer</type></link>.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para>the mini-object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-ref.returns" role="returns">
<title>Returns</title>
<para> the mini-object. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-unref" role="function">
<title>gst_mini_object_unref&#160;()</title>
<indexterm zone="gst-mini-object-unref"><primary>gst_mini_object_unref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_unref (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>);</programlisting>
<para>Decreases the reference count of the mini-object, possibly freeing
the mini-object.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-unref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para>the mini-object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-weak-ref" role="function">
<title>gst_mini_object_weak_ref&#160;()</title>
<indexterm zone="gst-mini-object-weak-ref"><primary>gst_mini_object_weak_ref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_weak_ref (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                          <parameter><link linkend="GstMiniObjectNotify"><type>GstMiniObjectNotify</type></link> notify</parameter>,
                          <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>Adds a weak reference callback to a mini object. Weak references are
used for notification when a mini object is finalized. They are called
"weak references" because they allow you to safely hold a pointer
to the mini object without calling <link linkend="gst-mini-object-ref"><function>gst_mini_object_ref()</function></link>
(<link linkend="gst-mini-object-ref"><function>gst_mini_object_ref()</function></link> adds a strong reference, that is, forces the object
to stay alive).</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-weak-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para><link linkend="GstMiniObject"><type>GstMiniObject</type></link> to reference weakly</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>callback to invoke before the mini object is freed</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>extra data to pass to notify</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-weak-unref" role="function">
<title>gst_mini_object_weak_unref&#160;()</title>
<indexterm zone="gst-mini-object-weak-unref"><primary>gst_mini_object_weak_unref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_weak_unref (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                            <parameter><link linkend="GstMiniObjectNotify"><type>GstMiniObjectNotify</type></link> notify</parameter>,
                            <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>Removes a weak reference callback from a mini object.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-weak-unref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para><link linkend="GstMiniObject"><type>GstMiniObject</type></link> to remove a weak reference from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>notify</para></entry>
<entry role="parameter_description"><para>callback to search for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>data to search for</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-lock" role="function">
<title>gst_mini_object_lock&#160;()</title>
<indexterm zone="gst-mini-object-lock"><primary>gst_mini_object_lock</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_mini_object_lock (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                      <parameter><link linkend="GstLockFlags"><type>GstLockFlags</type></link> flags</parameter>);</programlisting>
<para>Lock the mini-object with the specified access mode in <parameter>flags</parameter>
.</para>
<refsect3 id="gst-mini-object-lock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>the mini-object to lock</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para><link linkend="GstLockFlags"><type>GstLockFlags</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-lock.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>object</parameter>
could be locked.</para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-unlock" role="function">
<title>gst_mini_object_unlock&#160;()</title>
<indexterm zone="gst-mini-object-unlock"><primary>gst_mini_object_unlock</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_unlock (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                        <parameter><link linkend="GstLockFlags"><type>GstLockFlags</type></link> flags</parameter>);</programlisting>
<para>Unlock the mini-object with the specified access mode in <parameter>flags</parameter>
.</para>
<refsect3 id="gst-mini-object-unlock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>the mini-object to unlock</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para><link linkend="GstLockFlags"><type>GstLockFlags</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-is-writable" role="function">
<title>gst_mini_object_is_writable&#160;()</title>
<indexterm zone="gst-mini-object-is-writable"><primary>gst_mini_object_is_writable</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_mini_object_is_writable (<parameter>const <link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>);</programlisting>
<para>If <parameter>mini_object</parameter>
 has the LOCKABLE flag set, check if the current EXCLUSIVE
lock on <parameter>object</parameter>
 is the only one, this means that changes to the object will
not be visible to any other object.</para>
<para>If the LOCKABLE flag is not set, check if the refcount of <parameter>mini_object</parameter>
 is
exactly 1, meaning that no other reference exists to the object and that the
object is therefore writable.</para>
<para>Modification of a mini-object should only be done after verifying that it
is writable.</para>
<refsect3 id="gst-mini-object-is-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para>the mini-object to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-is-writable.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the object is writable.</para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-make-writable" role="function">
<title>gst_mini_object_make_writable&#160;()</title>
<indexterm zone="gst-mini-object-make-writable"><primary>gst_mini_object_make_writable</primary></indexterm>
<programlisting language="C"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
gst_mini_object_make_writable (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>);</programlisting>
<para>Checks if a mini-object is writable.  If not, a writable copy is made and
returned.  This gives away the reference to the original mini object,
and returns a reference to the new object.</para>
<para>MT safe</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-make-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para> the mini-object to make writable. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-make-writable.returns" role="returns">
<title>Returns</title>
<para> a mini-object (possibly the same pointer) that
is writable. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-copy" role="function">
<title>gst_mini_object_copy&#160;()</title>
<indexterm zone="gst-mini-object-copy"><primary>gst_mini_object_copy</primary></indexterm>
<programlisting language="C"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
gst_mini_object_copy (<parameter>const <link linkend="GstMiniObject"><type>GstMiniObject</type></link> *mini_object</parameter>);</programlisting>
<para>Creates a copy of the mini-object.</para>
<para>MT safe</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mini_object</para></entry>
<entry role="parameter_description"><para>the mini-object to copy</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-copy.returns" role="returns">
<title>Returns</title>
<para> the new mini-object. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-set-qdata" role="function">
<title>gst_mini_object_set_qdata&#160;()</title>
<indexterm zone="gst-mini-object-set-qdata"><primary>gst_mini_object_set_qdata</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_mini_object_set_qdata (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                           <parameter><link linkend="GQuark"><type>GQuark</type></link> quark</parameter>,
                           <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>,
                           <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> destroy</parameter>);</programlisting>
<para>This sets an opaque, named pointer on a miniobject.
The name is specified through a <link linkend="GQuark"><type>GQuark</type></link> (retrieved e.g. via
<link linkend="g-quark-from-static-string"><function>g_quark_from_static_string()</function></link>), and the pointer
can be gotten back from the <parameter>object</parameter>
 with <link linkend="gst-mini-object-get-qdata"><function>gst_mini_object_get_qdata()</function></link>
until the <parameter>object</parameter>
 is disposed.
Setting a previously set user data pointer, overrides (frees)
the old pointer set, using <link linkend="NULL:CAPS"><literal>NULL</literal></link> as pointer essentially
removes the data stored.</para>
<para><parameter>destroy</parameter>
 may be specified which is called with <parameter>data</parameter>
 as argument
when the <parameter>object</parameter>
 is disposed, or the data is being overwritten by
a call to <link linkend="gst-mini-object-set-qdata"><function>gst_mini_object_set_qdata()</function></link> with the same <parameter>quark</parameter>
.</para>
<refsect3 id="gst-mini-object-set-qdata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstMiniObject"><type>GstMiniObject</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>quark</para></entry>
<entry role="parameter_description"><para>A <link linkend="GQuark"><type>GQuark</type></link>, naming the user data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>An opaque user data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>destroy</para></entry>
<entry role="parameter_description"><para>Function to invoke with <parameter>data</parameter>
as argument, when <parameter>data</parameter>
needs to be freed</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-get-qdata" role="function">
<title>gst_mini_object_get_qdata&#160;()</title>
<indexterm zone="gst-mini-object-get-qdata"><primary>gst_mini_object_get_qdata</primary></indexterm>
<programlisting language="C"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
gst_mini_object_get_qdata (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                           <parameter><link linkend="GQuark"><type>GQuark</type></link> quark</parameter>);</programlisting>
<para>This function gets back user data pointers stored via
<link linkend="gst-mini-object-set-qdata"><function>gst_mini_object_set_qdata()</function></link>.</para>
<refsect3 id="gst-mini-object-get-qdata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>The GstMiniObject to get a stored user data pointer from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>quark</para></entry>
<entry role="parameter_description"><para>A <link linkend="GQuark"><type>GQuark</type></link>, naming the user data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-get-qdata.returns" role="returns">
<title>Returns</title>
<para> The user data pointer set, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-steal-qdata" role="function">
<title>gst_mini_object_steal_qdata&#160;()</title>
<indexterm zone="gst-mini-object-steal-qdata"><primary>gst_mini_object_steal_qdata</primary></indexterm>
<programlisting language="C"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
gst_mini_object_steal_qdata (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *object</parameter>,
                             <parameter><link linkend="GQuark"><type>GQuark</type></link> quark</parameter>);</programlisting>
<para>This function gets back user data pointers stored via <link linkend="gst-mini-object-set-qdata"><function>gst_mini_object_set_qdata()</function></link>
and removes the data from <parameter>object</parameter>
 without invoking its <link linkend="destroy"><function>destroy()</function></link> function (if
any was set).</para>
<refsect3 id="gst-mini-object-steal-qdata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>The GstMiniObject to get a stored user data pointer from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>quark</para></entry>
<entry role="parameter_description"><para>A <link linkend="GQuark"><type>GQuark</type></link>, naming the user data pointer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-steal-qdata.returns" role="returns">
<title>Returns</title>
<para> The user data pointer set, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-replace" role="function">
<title>gst_mini_object_replace&#160;()</title>
<indexterm zone="gst-mini-object-replace"><primary>gst_mini_object_replace</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_mini_object_replace (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> **olddata</parameter>,
                         <parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *newdata</parameter>);</programlisting>
<para>Atomically modifies a pointer to point to a new mini-object.
The reference count of <parameter>olddata</parameter>
 is decreased and the reference count of
<parameter>newdata</parameter>
 is increased.</para>
<para>Either <parameter>newdata</parameter>
 and the value pointed to by <parameter>olddata</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-mini-object-replace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>olddata</para></entry>
<entry role="parameter_description"><para> pointer to a pointer to a
mini-object to be replaced. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>][<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>newdata</para></entry>
<entry role="parameter_description"><para> pointer to new mini-object. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-replace.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>newdata</parameter>
was different from <parameter>olddata</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-take" role="function">
<title>gst_mini_object_take&#160;()</title>
<indexterm zone="gst-mini-object-take"><primary>gst_mini_object_take</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_mini_object_take (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> **olddata</parameter>,
                      <parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> *newdata</parameter>);</programlisting>
<para>Modifies a pointer to point to a new mini-object. The modification
is done atomically. This version is similar to <link linkend="gst-mini-object-replace"><function>gst_mini_object_replace()</function></link>
except that it does not increase the refcount of <parameter>newdata</parameter>
 and thus
takes ownership of <parameter>newdata</parameter>
.</para>
<para>Either <parameter>newdata</parameter>
 and the value pointed to by <parameter>olddata</parameter>
 may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="gst-mini-object-take.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>olddata</para></entry>
<entry role="parameter_description"><para> pointer to a pointer to a mini-object to
be replaced. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>newdata</para></entry>
<entry role="parameter_description"><para>pointer to new mini-object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-take.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>newdata</parameter>
was different from <parameter>olddata</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-mini-object-steal" role="function">
<title>gst_mini_object_steal&#160;()</title>
<indexterm zone="gst-mini-object-steal"><primary>gst_mini_object_steal</primary></indexterm>
<programlisting language="C"><link linkend="GstMiniObject"><returnvalue>GstMiniObject</returnvalue></link>&#160;*
gst_mini_object_steal (<parameter><link linkend="GstMiniObject"><type>GstMiniObject</type></link> **olddata</parameter>);</programlisting>
<para>Replace the current <link linkend="GstMiniObject"><type>GstMiniObject</type></link> pointer to by <parameter>olddata</parameter>
 with <link linkend="NULL:CAPS"><literal>NULL</literal></link> and
return the old value.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-mini-object-steal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>olddata</para></entry>
<entry role="parameter_description"><para> pointer to a pointer to a mini-object to
be stolen. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-mini-object-steal.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstMiniObject"><type>GstMiniObject</type></link> at <parameter>oldata</parameter>
</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="gstreamer-GstMiniObject.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstMiniObject" role="struct">
<title>struct GstMiniObject</title>
<indexterm zone="GstMiniObject"><primary>GstMiniObject</primary></indexterm>
<programlisting language="C">struct GstMiniObject {
  GType   type;

  gint    refcount;
  gint    lockstate;
  guint   flags;

  GstMiniObjectCopyFunction copy;
  GstMiniObjectDisposeFunction dispose;
  GstMiniObjectFreeFunction free;
};
</programlisting>
<para>Base class for refcounted lightweight objects.</para>
<refsect3 id="GstMiniObject.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GType"><type>GType</type></link>&#160;<structfield id="GstMiniObject.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>the GType of the object</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="gint"><type>gint</type></link>&#160;<structfield id="GstMiniObject.refcount">refcount</structfield>;</para></entry>
<entry role="struct_member_description"><para>atomic refcount</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="gint"><type>gint</type></link>&#160;<structfield id="GstMiniObject.lockstate">lockstate</structfield>;</para></entry>
<entry role="struct_member_description"><para>atomic state of the locks</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint"><type>guint</type></link>&#160;<structfield id="GstMiniObject.flags">flags</structfield>;</para></entry>
<entry role="struct_member_description"><para>extra flags.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMiniObjectCopyFunction"><type>GstMiniObjectCopyFunction</type></link>&#160;<structfield id="GstMiniObject.copy">copy</structfield>;</para></entry>
<entry role="struct_member_description"><para>a copy function</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMiniObjectDisposeFunction"><type>GstMiniObjectDisposeFunction</type></link>&#160;<structfield id="GstMiniObject.dispose">dispose</structfield>;</para></entry>
<entry role="struct_member_description"><para>a dispose function</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstMiniObjectFreeFunction"><type>GstMiniObjectFreeFunction</type></link>&#160;<structfield id="GstMiniObject.free">free</structfield>;</para></entry>
<entry role="struct_member_description"><para>the free function</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstMiniObjectFlags" role="enum">
<title>enum GstMiniObjectFlags</title>
<indexterm zone="GstMiniObjectFlags"><primary>GstMiniObjectFlags</primary></indexterm>
<para>Flags for the mini object</para>
<refsect3 id="GstMiniObjectFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-MINI-OBJECT-FLAG-LOCKABLE:CAPS">GST_MINI_OBJECT_FLAG_LOCKABLE</para></entry>
<entry role="enum_member_description"><para>the object can be locked and unlocked with
<link linkend="gst-mini-object-lock"><function>gst_mini_object_lock()</function></link> and <link linkend="gst-mini-object-unlock"><function>gst_mini_object_unlock()</function></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MINI-OBJECT-FLAG-LOCK-READONLY:CAPS">GST_MINI_OBJECT_FLAG_LOCK_READONLY</para></entry>
<entry role="enum_member_description"><para>the object is permanently locked in
READONLY mode. Only read locks can be performed on the object.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-MINI-OBJECT-FLAG-LAST:CAPS">GST_MINI_OBJECT_FLAG_LAST</para></entry>
<entry role="enum_member_description"><para>first flag that can be used by subclasses.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstLockFlags" role="enum">
<title>enum GstLockFlags</title>
<indexterm zone="GstLockFlags"><primary>GstLockFlags</primary></indexterm>
<para>Flags used when locking miniobjects</para>
<refsect3 id="GstLockFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-LOCK-FLAG-READ:CAPS">GST_LOCK_FLAG_READ</para></entry>
<entry role="enum_member_description"><para>lock for read access</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-LOCK-FLAG-WRITE:CAPS">GST_LOCK_FLAG_WRITE</para></entry>
<entry role="enum_member_description"><para>lock for write access</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-LOCK-FLAG-EXCLUSIVE:CAPS">GST_LOCK_FLAG_EXCLUSIVE</para></entry>
<entry role="enum_member_description"><para>lock for exclusive access</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-LOCK-FLAG-LAST:CAPS">GST_LOCK_FLAG_LAST</para></entry>
<entry role="enum_member_description"><para>first flag that can be used for custom purposes</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-LOCK-FLAG-READWRITE:CAPS" role="macro">
<title>GST_LOCK_FLAG_READWRITE</title>
<indexterm zone="GST-LOCK-FLAG-READWRITE:CAPS"><primary>GST_LOCK_FLAG_READWRITE</primary></indexterm>
<programlisting language="C">#define GST_LOCK_FLAG_READWRITE  (GST_LOCK_FLAG_READ | GST_LOCK_FLAG_WRITE)
</programlisting>
<para>GstLockFlags value alias for GST_LOCK_FLAG_READ | GST_LOCK_FLAG_WRITE</para>
</refsect2>

</refsect1>

</refentry>
