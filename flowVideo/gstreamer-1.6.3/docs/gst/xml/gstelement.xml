<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstElement">
<refmeta>
<refentrytitle role="top_of_page" id="GstElement.top_of_page">GstElement</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstElement</refname>
<refpurpose>Abstract base class for all pipeline elements</refpurpose>
</refnamediv>

<refsect1 id="GstElement.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE:CAPS">GST_STATE</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-GET-NEXT:CAPS">GST_STATE_GET_NEXT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-NEXT:CAPS">GST_STATE_NEXT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-PENDING:CAPS">GST_STATE_PENDING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-RETURN:CAPS">GST_STATE_RETURN</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-TARGET:CAPS">GST_STATE_TARGET</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-TRANSITION:CAPS">GST_STATE_TRANSITION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-TRANSITION-CURRENT:CAPS">GST_STATE_TRANSITION_CURRENT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-TRANSITION-NEXT:CAPS">GST_STATE_TRANSITION_NEXT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-GET-LOCK:CAPS">GST_STATE_GET_LOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-STATE-GET-COND:CAPS">GST_STATE_GET_COND</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-NAME:CAPS">GST_ELEMENT_NAME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-PARENT:CAPS">GST_ELEMENT_PARENT</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-BUS:CAPS">GST_ELEMENT_BUS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-CLOCK:CAPS">GST_ELEMENT_CLOCK</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-PADS:CAPS">GST_ELEMENT_PADS</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-START-TIME:CAPS">GST_ELEMENT_START_TIME</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-ERROR:CAPS">GST_ELEMENT_ERROR</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-WARNING:CAPS">GST_ELEMENT_WARNING</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-INFO:CAPS">GST_ELEMENT_INFO</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-IS-LOCKED-STATE:CAPS">GST_ELEMENT_IS_LOCKED_STATE</link><phrase role="c_punctuation">()</phrase></entry></row>


<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-class-add-pad-template">gst_element_class_add_pad_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-class-get-pad-template">gst_element_class_get_pad_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-class-get-pad-template-list">gst_element_class_get_pad_template_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-class-set-metadata">gst_element_class_set_metadata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-class-set-static-metadata">gst_element_class_set_static_metadata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-class-add-metadata">gst_element_class_add_metadata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-class-add-static-metadata">gst_element_class_add_static_metadata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-add-pad">gst_element_add_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-create-all-pads">gst_element_create_all_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-compatible-pad">gst_element_get_compatible_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-compatible-pad-template">gst_element_get_compatible_pad_template</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-request-pad">gst_element_get_request_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-static-pad">gst_element_get_static_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-request-pad">gst_element_request_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-no-more-pads">gst_element_no_more_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-release-request-pad">gst_element_release_request_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-remove-pad">gst_element_remove_pad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-iterate-pads">gst_element_iterate_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-iterate-sink-pads">gst_element_iterate_sink_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-iterate-src-pads">gst_element_iterate_src_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link">gst_element_link</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-unlink">gst_element_unlink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link-many">gst_element_link_many</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-unlink-many">gst_element_unlink_many</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link-pads">gst_element_link_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link-pads-full">gst_element_link_pads_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-unlink-pads">gst_element_unlink_pads</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link-pads-filtered">gst_element_link_pads_filtered</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-link-filtered">gst_element_link_filtered</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-class-get-metadata">gst_element_class_get_metadata</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-base-time">gst_element_set_base_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-get-base-time">gst_element_get_base_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-start-time">gst_element_set_start_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-get-start-time">gst_element_get_start_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-bus">gst_element_set_bus</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBus"><returnvalue>GstBus</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-bus">gst_element_get_bus</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-context">gst_element_set_context</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstElementFactory"><returnvalue>GstElementFactory</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-factory">gst_element_get_factory</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-element-set-name">gst_element_set_name</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-element-get-name">gst_element_get_name</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-element-set-parent">gst_element_set_parent</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="gst-element-get-parent">gst_element_get_parent</link><phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-clock">gst_element_set_clock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClock"><returnvalue>GstClock</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-get-clock">gst_element_get_clock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstClock"><returnvalue>GstClock</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-provide-clock">gst_element_provide_clock</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-state">gst_element_set_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-get-state">gst_element_get_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-set-locked-state">gst_element_set_locked_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-is-locked-state">gst_element_is_locked_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-abort-state">gst_element_abort_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-continue-state">gst_element_continue_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-lost-state">gst_element_lost_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-state-get-name">gst_element_state_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-element-state-change-return-get-name">gst_element_state_change_return_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-sync-state-with-parent">gst_element_sync_state_with_parent</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-change-state">gst_element_change_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-message-full">gst_element_message_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-post-message">gst_element_post_message</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-query">gst_element_query</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-query-convert">gst_element_query_convert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-query-position">gst_element_query_position</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-query-duration">gst_element_query_duration</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-send-event">gst_element_send_event</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-seek-simple">gst_element_seek_simple</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-element-seek">gst_element_seek</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstElement.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GstElement-no-more-pads">no-more-pads</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GstElement-pad-added">pad-added</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GstElement-pad-removed">pad-removed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstElement.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstElement-struct">GstElement</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstElementClass">GstElementClass</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstElementFlags">GstElementFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstState">GstState</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstStateChange">GstStateChange</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstStateChangeReturn">GstStateChangeReturn</link></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-AUTHOR:CAPS">GST_ELEMENT_METADATA_AUTHOR</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-DESCRIPTION:CAPS">GST_ELEMENT_METADATA_DESCRIPTION</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-DOC-URI:CAPS">GST_ELEMENT_METADATA_DOC_URI</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-ICON-NAME:CAPS">GST_ELEMENT_METADATA_ICON_NAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-KLASS:CAPS">GST_ELEMENT_METADATA_KLASS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-ELEMENT-METADATA-LONGNAME:CAPS">GST_ELEMENT_METADATA_LONGNAME</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstElement.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstElement
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstBin">GstBin</link>
</screen>
</refsect1>
<refsect1 id="GstElement.derived-interfaces" role="derived_interfaces">
<title role="derived_interfaces.title">Known Derived Interfaces</title>
<para>
GstElement is required by
 <link linkend="GstTagSetter">GstTagSetter</link>.</para>

</refsect1>

<refsect1 id="GstElement.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstElement.description" role="desc">
<title role="desc.title">Description</title>
<para>GstElement is the abstract base class needed to construct an element that
can be used in a GStreamer pipeline. Please refer to the plugin writers
guide for more information on creating <link linkend="GstElement"><type>GstElement</type></link> subclasses.</para>
<para>The name of a <link linkend="GstElement"><type>GstElement</type></link> can be get with <link linkend="gst-element-get-name"><function>gst_element_get_name()</function></link> and set with
<link linkend="gst-element-set-name"><function>gst_element_set_name()</function></link>.  For speed, <link linkend="GST-ELEMENT-NAME:CAPS"><function>GST_ELEMENT_NAME()</function></link> can be used in the
core when using the appropriate locking. Do not use this in plug-ins or
applications in order to retain ABI compatibility.</para>
<para>Elements can have pads (of the type <link linkend="GstPad"><type>GstPad</type></link>).  These pads link to pads on
other elements.  <link linkend="GstBuffer"><type>GstBuffer</type></link> flow between these linked pads.
A <link linkend="GstElement"><type>GstElement</type></link> has a <link linkend="GList"><type>GList</type></link> of <link linkend="GstPad"><type>GstPad</type></link> structures for all their input (or sink)
and output (or source) pads.
Core and plug-in writers can add and remove pads with <link linkend="gst-element-add-pad"><function>gst_element_add_pad()</function></link>
and <link linkend="gst-element-remove-pad"><function>gst_element_remove_pad()</function></link>.</para>
<para>An existing pad of an element can be retrieved by name with
<link linkend="gst-element-get-static-pad"><function>gst_element_get_static_pad()</function></link>. A new dynamic pad can be created using
<link linkend="gst-element-request-pad"><function>gst_element_request_pad()</function></link> with a <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>.
An iterator of all pads can be retrieved with <link linkend="gst-element-iterate-pads"><function>gst_element_iterate_pads()</function></link>.</para>
<para>Elements can be linked through their pads.
If the link is straightforward, use the <link linkend="gst-element-link"><function>gst_element_link()</function></link>
convenience function to link two elements, or <link linkend="gst-element-link-many"><function>gst_element_link_many()</function></link>
for more elements in a row.
Use <link linkend="gst-element-link-filtered"><function>gst_element_link_filtered()</function></link> to link two elements constrained by
a specified set of <link linkend="GstCaps"><type>GstCaps</type></link>.
For finer control, use <link linkend="gst-element-link-pads"><function>gst_element_link_pads()</function></link> and
<link linkend="gst-element-link-pads-filtered"><function>gst_element_link_pads_filtered()</function></link> to specify the pads to link on
each element by name.</para>
<para>Each element has a state (see <link linkend="GstState"><type>GstState</type></link>).  You can get and set the state
of an element with <link linkend="gst-element-get-state"><function>gst_element_get_state()</function></link> and <link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link>.
Setting a state triggers a <link linkend="GstStateChange"><type>GstStateChange</type></link>. To get a string representation
of a <link linkend="GstState"><type>GstState</type></link>, use <link linkend="gst-element-state-get-name"><function>gst_element_state_get_name()</function></link>.</para>
<para>You can get and set a <link linkend="GstClock"><type>GstClock</type></link> on an element using <link linkend="gst-element-get-clock"><function>gst_element_get_clock()</function></link>
and <link linkend="gst-element-set-clock"><function>gst_element_set_clock()</function></link>.
Some elements can provide a clock for the pipeline if
the <link linkend="GST-ELEMENT-FLAG-PROVIDE-CLOCK:CAPS"><type>GST_ELEMENT_FLAG_PROVIDE_CLOCK</type></link> flag is set. With the
<link linkend="gst-element-provide-clock"><function>gst_element_provide_clock()</function></link> method one can retrieve the clock provided by
such an element.
Not all elements require a clock to operate correctly. If the
<link linkend="GST-ELEMENT-FLAG-REQUIRE-CLOCK:CAPS"><function><link linkend="GST-ELEMENT-FLAG-REQUIRE-CLOCK:CAPS"><function>GST_ELEMENT_FLAG_REQUIRE_CLOCK()</function></link></function></link> flag is set, a clock should be set on the
element with <link linkend="gst-element-set-clock"><function>gst_element_set_clock()</function></link>.</para>
<para>Note that clock selection and distribution is normally handled by the
toplevel <link linkend="GstPipeline"><type>GstPipeline</type></link> so the clock functions are only to be used in very
specific situations.</para>

</refsect1>
<refsect1 id="GstElement.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="GST-STATE:CAPS" role="macro">
<title>GST_STATE()</title>
<indexterm zone="GST-STATE:CAPS"><primary>GST_STATE</primary></indexterm>
<programlisting language="C">#define GST_STATE(elem)                 (GST_ELEMENT_CAST(elem)-&gt;current_state)
</programlisting>
<para>This macro returns the current <link linkend="GstState"><type>GstState</type></link> of the element.</para>
<refsect3 id="GST-STATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return state for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-GET-NEXT:CAPS" role="macro">
<title>GST_STATE_GET_NEXT()</title>
<indexterm zone="GST-STATE-GET-NEXT:CAPS"><primary>GST_STATE_GET_NEXT</primary></indexterm>
<programlisting language="C">#define GST_STATE_GET_NEXT(cur,pending)         ((GstState)((cur) + __GST_SIGN ((gint)(pending) - (gint)(cur))))
</programlisting>
<para>Given a current state <parameter>cur</parameter>
 and a target state <parameter>pending</parameter>
, calculate the next (intermediate)
<link linkend="GstState"><type>GstState</type></link>.</para>
<refsect3 id="GST-STATE-GET-NEXT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>A starting <link linkend="GstState"><type>GstState</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pending</para></entry>
<entry role="parameter_description"><para>A target <link linkend="GstState"><type>GstState</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-NEXT:CAPS" role="macro">
<title>GST_STATE_NEXT()</title>
<indexterm zone="GST-STATE-NEXT:CAPS"><primary>GST_STATE_NEXT</primary></indexterm>
<programlisting language="C">#define GST_STATE_NEXT(elem)            (GST_ELEMENT_CAST(elem)-&gt;next_state)
</programlisting>
<para>This macro returns the next <link linkend="GstState"><type>GstState</type></link> of the element.</para>
<refsect3 id="GST-STATE-NEXT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return the next state for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-PENDING:CAPS" role="macro">
<title>GST_STATE_PENDING()</title>
<indexterm zone="GST-STATE-PENDING:CAPS"><primary>GST_STATE_PENDING</primary></indexterm>
<programlisting language="C">#define GST_STATE_PENDING(elem)         (GST_ELEMENT_CAST(elem)-&gt;pending_state)
</programlisting>
<para>This macro returns the currently pending <link linkend="GstState"><type>GstState</type></link> of the element.</para>
<refsect3 id="GST-STATE-PENDING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return the pending state for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-RETURN:CAPS" role="macro">
<title>GST_STATE_RETURN()</title>
<indexterm zone="GST-STATE-RETURN:CAPS"><primary>GST_STATE_RETURN</primary></indexterm>
<programlisting language="C">#define GST_STATE_RETURN(elem)          (GST_ELEMENT_CAST(elem)-&gt;last_return)
</programlisting>
<para>This macro returns the last <link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link> value.</para>
<refsect3 id="GST-STATE-RETURN.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return the last state result for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-TARGET:CAPS" role="macro">
<title>GST_STATE_TARGET()</title>
<indexterm zone="GST-STATE-TARGET:CAPS"><primary>GST_STATE_TARGET</primary></indexterm>
<programlisting language="C">#define GST_STATE_TARGET(elem)          (GST_ELEMENT_CAST(elem)-&gt;target_state)
</programlisting>
<para>This macro returns the target <link linkend="GstState"><type>GstState</type></link> of the element.</para>
<refsect3 id="GST-STATE-TARGET.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return the target state for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-TRANSITION:CAPS" role="macro">
<title>GST_STATE_TRANSITION()</title>
<indexterm zone="GST-STATE-TRANSITION:CAPS"><primary>GST_STATE_TRANSITION</primary></indexterm>
<programlisting language="C">#define GST_STATE_TRANSITION(cur,next)          ((GstStateChange)(((cur)&lt;&lt;3)|(next)))
</programlisting>
<para>Given a current state <parameter>cur</parameter>
 and a next state <parameter>next</parameter>
, calculate the associated
<link linkend="GstStateChange"><type>GstStateChange</type></link> transition.</para>
<refsect3 id="GST-STATE-TRANSITION.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>A current state</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>next</para></entry>
<entry role="parameter_description"><para>A next state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-TRANSITION-CURRENT:CAPS" role="macro">
<title>GST_STATE_TRANSITION_CURRENT()</title>
<indexterm zone="GST-STATE-TRANSITION-CURRENT:CAPS"><primary>GST_STATE_TRANSITION_CURRENT</primary></indexterm>
<programlisting language="C">#define GST_STATE_TRANSITION_CURRENT(trans)     ((GstState)((trans)&gt;&gt;3))
</programlisting>
<para>Given a state transition <parameter>trans</parameter>
, extract the current <link linkend="GstState"><type>GstState</type></link>.</para>
<refsect3 id="GST-STATE-TRANSITION-CURRENT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>trans</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstStateChange"><type>GstStateChange</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-TRANSITION-NEXT:CAPS" role="macro">
<title>GST_STATE_TRANSITION_NEXT()</title>
<indexterm zone="GST-STATE-TRANSITION-NEXT:CAPS"><primary>GST_STATE_TRANSITION_NEXT</primary></indexterm>
<programlisting language="C">#define GST_STATE_TRANSITION_NEXT(trans)        ((GstState)((trans)&amp;0x7))
</programlisting>
<para>Given a state transition <parameter>trans</parameter>
, extract the next <link linkend="GstState"><type>GstState</type></link>.</para>
<refsect3 id="GST-STATE-TRANSITION-NEXT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>trans</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstStateChange"><type>GstStateChange</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-GET-LOCK:CAPS" role="macro">
<title>GST_STATE_GET_LOCK()</title>
<indexterm zone="GST-STATE-GET-LOCK:CAPS"><primary>GST_STATE_GET_LOCK</primary></indexterm>
<programlisting language="C">#define GST_STATE_GET_LOCK(elem)               (&amp;(GST_ELEMENT_CAST(elem)-&gt;state_lock))
</programlisting>
<para>Get a reference to the state lock of <parameter>elem</parameter>
.
This lock is used by the core.  It is taken while getting or setting
the state, during state changes, and while finalizing.</para>
<refsect3 id="GST-STATE-GET-LOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-STATE-GET-COND:CAPS" role="macro">
<title>GST_STATE_GET_COND()</title>
<indexterm zone="GST-STATE-GET-COND:CAPS"><primary>GST_STATE_GET_COND</primary></indexterm>
<programlisting language="C">#define GST_STATE_GET_COND(elem)               (&amp;GST_ELEMENT_CAST(elem)-&gt;state_cond)
</programlisting>
<para>Get the conditional used to signal the completion of a state change.</para>
<refsect3 id="GST-STATE-GET-COND.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-NAME:CAPS" role="macro">
<title>GST_ELEMENT_NAME()</title>
<indexterm zone="GST-ELEMENT-NAME:CAPS"><primary>GST_ELEMENT_NAME</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_NAME(elem)                  (GST_OBJECT_NAME(elem))
</programlisting>
<para>Gets the name of this element. Use only in core as this is not
ABI-compatible. Others use <link linkend="gst-element-get-name"><function>gst_element_get_name()</function></link></para>
<refsect3 id="GST-ELEMENT-NAME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-PARENT:CAPS" role="macro">
<title>GST_ELEMENT_PARENT()</title>
<indexterm zone="GST-ELEMENT-PARENT:CAPS"><primary>GST_ELEMENT_PARENT</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_PARENT(elem)                (GST_ELEMENT_CAST(GST_OBJECT_PARENT(elem)))
</programlisting>
<para>Get the parent object of this element.</para>
<refsect3 id="GST-ELEMENT-PARENT.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-BUS:CAPS" role="macro">
<title>GST_ELEMENT_BUS()</title>
<indexterm zone="GST-ELEMENT-BUS:CAPS"><primary>GST_ELEMENT_BUS</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_BUS(elem)                   (GST_ELEMENT_CAST(elem)-&gt;bus)
</programlisting>
<para>Get the message bus of this element.</para>
<refsect3 id="GST-ELEMENT-BUS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-CLOCK:CAPS" role="macro">
<title>GST_ELEMENT_CLOCK()</title>
<indexterm zone="GST-ELEMENT-CLOCK:CAPS"><primary>GST_ELEMENT_CLOCK</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_CLOCK(elem)                 (GST_ELEMENT_CAST(elem)-&gt;clock)
</programlisting>
<para>Get the clock of this element</para>
<refsect3 id="GST-ELEMENT-CLOCK.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-PADS:CAPS" role="macro">
<title>GST_ELEMENT_PADS()</title>
<indexterm zone="GST-ELEMENT-PADS:CAPS"><primary>GST_ELEMENT_PADS</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_PADS(elem)                  (GST_ELEMENT_CAST(elem)-&gt;pads)
</programlisting>
<para>Get the pads of this elements.</para>
<refsect3 id="GST-ELEMENT-PADS.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-START-TIME:CAPS" role="macro">
<title>GST_ELEMENT_START_TIME()</title>
<indexterm zone="GST-ELEMENT-START-TIME:CAPS"><primary>GST_ELEMENT_START_TIME</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_START_TIME(elem)            (GST_ELEMENT_CAST(elem)-&gt;start_time)
</programlisting>
<para>This macro returns the start_time of the <parameter>elem</parameter>
. The start_time is the
running_time of the pipeline when the element went to PAUSED.</para>
<refsect3 id="GST-ELEMENT-START-TIME.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to return the start time for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-ERROR:CAPS" role="macro">
<title>GST_ELEMENT_ERROR()</title>
<indexterm zone="GST-ELEMENT-ERROR:CAPS"><primary>GST_ELEMENT_ERROR</primary></indexterm>
<programlisting language="C">#define             GST_ELEMENT_ERROR(el, domain, code, text, debug)</programlisting>
<para>Utility function that elements can use in case they encountered a fatal
data processing error. The pipeline will post an error message and the
application will be requested to stop further media processing.</para>
<refsect3 id="GST-ELEMENT-ERROR.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>el</para></entry>
<entry role="parameter_description"><para>the element that generates the error</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>domain</para></entry>
<entry role="parameter_description"><para>like CORE, LIBRARY, RESOURCE or STREAM (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para>error code defined for that domain (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>the message to display (format string and args enclosed in
parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>debugging information for the message (format string and args
enclosed in parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-WARNING:CAPS" role="macro">
<title>GST_ELEMENT_WARNING()</title>
<indexterm zone="GST-ELEMENT-WARNING:CAPS"><primary>GST_ELEMENT_WARNING</primary></indexterm>
<programlisting language="C">#define             GST_ELEMENT_WARNING(el, domain, code, text, debug)</programlisting>
<para>Utility function that elements can use in case they encountered a non-fatal
data processing problem. The pipeline will post a warning message and the
application will be informed.</para>
<refsect3 id="GST-ELEMENT-WARNING.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>el</para></entry>
<entry role="parameter_description"><para>the element that generates the warning</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>domain</para></entry>
<entry role="parameter_description"><para>like CORE, LIBRARY, RESOURCE or STREAM (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para>error code defined for that domain (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>the message to display (format string and args enclosed in
parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>debugging information for the message (format string and args
enclosed in parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-INFO:CAPS" role="macro">
<title>GST_ELEMENT_INFO()</title>
<indexterm zone="GST-ELEMENT-INFO:CAPS"><primary>GST_ELEMENT_INFO</primary></indexterm>
<programlisting language="C">#define             GST_ELEMENT_INFO(el, domain, code, text, debug)</programlisting>
<para>Utility function that elements can use in case they want to inform
the application of something noteworthy that is not an error.
The pipeline will post a info message and the
application will be informed.</para>
<refsect3 id="GST-ELEMENT-INFO.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>el</para></entry>
<entry role="parameter_description"><para>the element that generates the information</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>domain</para></entry>
<entry role="parameter_description"><para>like CORE, LIBRARY, RESOURCE or STREAM (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para>error code defined for that domain (see <link linkend="gstreamer-GstGError"><type>gstreamer-GstGError</type></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>the message to display (format string and args enclosed in
parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para>debugging information for the message (format string and args
enclosed in parentheses)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-IS-LOCKED-STATE:CAPS" role="macro">
<title>GST_ELEMENT_IS_LOCKED_STATE()</title>
<indexterm zone="GST-ELEMENT-IS-LOCKED-STATE:CAPS"><primary>GST_ELEMENT_IS_LOCKED_STATE</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_IS_LOCKED_STATE(elem)        (GST_OBJECT_FLAG_IS_SET(elem,GST_ELEMENT_FLAG_LOCKED_STATE))
</programlisting>
<para>Check if the element is in the locked state and therefore will ignore state
changes from its parent object.</para>
<refsect3 id="GST-ELEMENT-IS-LOCKED-STATE.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>A <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-class-add-pad-template" role="function">
<title>gst_element_class_add_pad_template&#160;()</title>
<indexterm zone="gst-element-class-add-pad-template"><primary>gst_element_class_add_pad_template</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_class_add_pad_template (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                    <parameter><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> *templ</parameter>);</programlisting>
<para>Adds a padtemplate to an element class. This is mainly used in the _class_init
functions of classes. If a pad template with the same name as an already
existing one is added the old one is replaced by the new one.</para>
<refsect3 id="gst-element-class-add-pad-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstElementClass"><type>GstElementClass</type></link> to add the pad template to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>templ</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> to add to the element class. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-class-get-pad-template" role="function">
<title>gst_element_class_get_pad_template&#160;()</title>
<indexterm zone="gst-element-class-get-pad-template"><primary>gst_element_class_get_pad_template</primary></indexterm>
<programlisting language="C"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
gst_element_class_get_pad_template (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *element_class</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Retrieves a padtemplate from <parameter>element_class</parameter>
 with the given name.</para>
<note>If you use this function in the <link linkend="GInstanceInitFunc"><type>GInstanceInitFunc</type></link> of an object class
that has subclasses, make sure to pass the g_class parameter of the
<link linkend="GInstanceInitFunc"><type>GInstanceInitFunc</type></link> here.</note>
<refsect3 id="gst-element-class-get-pad-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_class</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElementClass"><type>GstElementClass</type></link> to get the pad template of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> to get.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-class-get-pad-template.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> with the
given name, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if none was found. No unreferencing is
necessary. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-class-get-pad-template-list" role="function">
<title>gst_element_class_get_pad_template_list&#160;()</title>
<indexterm zone="gst-element-class-get-pad-template-list"><primary>gst_element_class_get_pad_template_list</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
gst_element_class_get_pad_template_list
                               (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *element_class</parameter>);</programlisting>
<para>Retrieves a list of the pad templates associated with <parameter>element_class</parameter>
. The
list must not be modified by the calling code.</para>
<note>If you use this function in the <link linkend="GInstanceInitFunc"><type>GInstanceInitFunc</type></link> of an object class
that has subclasses, make sure to pass the g_class parameter of the
<link linkend="GInstanceInitFunc"><type>GInstanceInitFunc</type></link> here.</note>
<refsect3 id="gst-element-class-get-pad-template-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_class</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElementClass"><type>GstElementClass</type></link> to get pad templates of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-class-get-pad-template-list.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GList"><type>GList</type></link> of
pad templates. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>element-type</acronym> Gst.PadTemplate]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-class-set-metadata" role="function">
<title>gst_element_class_set_metadata&#160;()</title>
<indexterm zone="gst-element-class-set-metadata"><primary>gst_element_class_set_metadata</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_class_set_metadata (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *longname</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *classification</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *description</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *author</parameter>);</programlisting>
<para>Sets the detailed information for a <link linkend="GstElementClass"><type>GstElementClass</type></link>.</para>
<note>This function is for use in _class_init functions only.</note>
<refsect3 id="gst-element-class-set-metadata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>class to set metadata for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>longname</para></entry>
<entry role="parameter_description"><para>The long English name of the element. E.g. "File Sink"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>classification</para></entry>
<entry role="parameter_description"><para>String describing the type of element, as an unordered list
separated with slashes ('/'). See draft-klass.txt of the design docs
for more details and common types. E.g: "Sink/File"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>description</para></entry>
<entry role="parameter_description"><para>Sentence describing the purpose of the element.
E.g: "Write stream to a file"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>author</para></entry>
<entry role="parameter_description"><para>Name and contact details of the author(s). Use \n to separate
multiple author metadata. E.g: "Joe Bloggs &lt;joe.blogs at foo.com&gt;"</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-class-set-static-metadata" role="function">
<title>gst_element_class_set_static_metadata&#160;()</title>
<indexterm zone="gst-element-class-set-static-metadata"><primary>gst_element_class_set_static_metadata</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_class_set_static_metadata (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *longname</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *classification</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *description</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *author</parameter>);</programlisting>
<para>Sets the detailed information for a <link linkend="GstElementClass"><type>GstElementClass</type></link>.</para>
<note>This function is for use in _class_init functions only.</note>
<para>Same as <link linkend="gst-element-class-set-metadata"><function>gst_element_class_set_metadata()</function></link>, but <parameter>longname</parameter>
, <parameter>classification</parameter>
,
<parameter>description</parameter>
, and <parameter>author</parameter>
 must be static strings or inlined strings, as
they will not be copied. (GStreamer plugins will be made resident once
loaded, so this function can be used even from dynamically loaded plugins.)</para>
<refsect3 id="gst-element-class-set-static-metadata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>class to set metadata for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>longname</para></entry>
<entry role="parameter_description"><para>The long English name of the element. E.g. "File Sink"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>classification</para></entry>
<entry role="parameter_description"><para>String describing the type of element, as an unordered list
separated with slashes ('/'). See draft-klass.txt of the design docs
for more details and common types. E.g: "Sink/File"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>description</para></entry>
<entry role="parameter_description"><para>Sentence describing the purpose of the element.
E.g: "Write stream to a file"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>author</para></entry>
<entry role="parameter_description"><para>Name and contact details of the author(s). Use \n to separate
multiple author metadata. E.g: "Joe Bloggs &lt;joe.blogs at foo.com&gt;"</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-class-add-metadata" role="function">
<title>gst_element_class_add_metadata&#160;()</title>
<indexterm zone="gst-element-class-add-metadata"><primary>gst_element_class_add_metadata</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_class_add_metadata (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set <parameter>key</parameter>
 with <parameter>value</parameter>
 as metadata in <parameter>klass</parameter>
.</para>
<refsect3 id="gst-element-class-add-metadata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>class to set metadata for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the key to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the value to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-class-add-static-metadata" role="function">
<title>gst_element_class_add_static_metadata&#160;()</title>
<indexterm zone="gst-element-class-add-static-metadata"><primary>gst_element_class_add_static_metadata</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_class_add_static_metadata (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set <parameter>key</parameter>
 with <parameter>value</parameter>
 as metadata in <parameter>klass</parameter>
.</para>
<para>Same as <link linkend="gst-element-class-add-metadata"><function>gst_element_class_add_metadata()</function></link>, but <parameter>value</parameter>
 must be a static string
or an inlined string, as it will not be copied. (GStreamer plugins will
be made resident once loaded, so this function can be used even from
dynamically loaded plugins.)</para>
<refsect3 id="gst-element-class-add-static-metadata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>class to set metadata for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the key to set</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the value to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-add-pad" role="function">
<title>gst_element_add_pad&#160;()</title>
<indexterm zone="gst-element-add-pad"><primary>gst_element_add_pad</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_add_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                     <parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Adds a pad (link point) to <parameter>element</parameter>
. <parameter>pad</parameter>
's parent will be set to <parameter>element</parameter>
;
see <link linkend="gst-object-set-parent"><function>gst_object_set_parent()</function></link> for refcounting information.</para>
<para>Pads are not automatically activated so elements should perform the needed
steps to activate the pad in case this pad is added in the PAUSED or PLAYING
state. See <link linkend="gst-pad-set-active"><function>gst_pad_set_active()</function></link> for more information about activating pads.</para>
<para>The pad and the element should be unlocked when calling this function.</para>
<para>This function will emit the <link linkend="GstElement-pad-added"><type>“pad-added”</type></link> signal on the element.</para>
<refsect3 id="gst-element-add-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to add the pad to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstPad"><type>GstPad</type></link> to add to the element. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-add-pad.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad could be added. This function can fail when
a pad with the same name already existed or the pad already had another
parent.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-create-all-pads" role="function">
<title>gst_element_create_all_pads&#160;()</title>
<indexterm zone="gst-element-create-all-pads"><primary>gst_element_create_all_pads</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_create_all_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Creates a pad for each pad template that is always available.
This function is only useful during object initialization of
subclasses of <link linkend="GstElement"><type>GstElement</type></link>.</para>
<refsect3 id="gst-element-create-all-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstElement"><type>GstElement</type></link> to create pads for. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-compatible-pad" role="function">
<title>gst_element_get_compatible_pad&#160;()</title>
<indexterm zone="gst-element-get-compatible-pad"><primary>gst_element_get_compatible_pad</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_element_get_compatible_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                                <parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Looks for an unlinked pad to which the given pad can link. It is not
guaranteed that linking the pads will work, though it should work in most
cases.</para>
<para>This function will first attempt to find a compatible unlinked ALWAYS pad,
and if none can be found, it will request a compatible REQUEST pad by looking
at the templates of <parameter>element</parameter>
.</para>
<refsect3 id="gst-element-get-compatible-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstElement"><type>GstElement</type></link> in which the pad should be found. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstPad"><type>GstPad</type></link> to find a compatible one for. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstCaps"><type>GstCaps</type></link> to use as a filter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-compatible-pad.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstPad"><type>GstPad</type></link> to which a link
can be made, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if one cannot be found. <link linkend="gst-object-unref"><function>gst_object_unref()</function></link>
after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-get-compatible-pad-template" role="function">
<title>gst_element_get_compatible_pad_template&#160;()</title>
<indexterm zone="gst-element-get-compatible-pad-template"><primary>gst_element_get_compatible_pad_template</primary></indexterm>
<programlisting language="C"><link linkend="GstPadTemplate"><returnvalue>GstPadTemplate</returnvalue></link>&#160;*
gst_element_get_compatible_pad_template
                               (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                                <parameter><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> *compattempl</parameter>);</programlisting>
<para>Retrieves a pad template from <parameter>element</parameter>
 that is compatible with <parameter>compattempl</parameter>
.
Pads from compatible templates can be linked together.</para>
<refsect3 id="gst-element-get-compatible-pad-template.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstElement"><type>GstElement</type></link> to get a compatible pad template for. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>compattempl</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> to find a compatible
template for. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-compatible-pad-template.returns" role="returns">
<title>Returns</title>
<para> a compatible <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link>,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if none was found. No unreferencing is necessary. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-get-request-pad" role="function">
<title>gst_element_get_request_pad&#160;()</title>
<indexterm zone="gst-element-get-request-pad"><primary>gst_element_get_request_pad</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_element_get_request_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Retrieves a pad from the element by name (e.g. "src_%d"). This version only
retrieves request pads. The pad should be released with
<link linkend="gst-element-release-request-pad"><function>gst_element_release_request_pad()</function></link>.</para>
<para>This method is slower than manually getting the pad template and calling
<link linkend="gst-element-request-pad"><function>gst_element_request_pad()</function></link> if the pads should have a specific name (e.g.
<parameter>name</parameter>
 is "src_1" instead of "src_%u").</para>
<refsect3 id="gst-element-get-request-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to find a request pad of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the request <link linkend="GstPad"><type>GstPad</type></link> to retrieve.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-request-pad.returns" role="returns">
<title>Returns</title>
<para> requested <link linkend="GstPad"><type>GstPad</type></link> if found,
otherwise <link linkend="NULL:CAPS"><literal>NULL</literal></link>.  Release after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-get-static-pad" role="function">
<title>gst_element_get_static_pad&#160;()</title>
<indexterm zone="gst-element-get-static-pad"><primary>gst_element_get_static_pad</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_element_get_static_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Retrieves a pad from <parameter>element</parameter>
 by name. This version only retrieves
already-existing (i.e. 'static') pads.</para>
<refsect3 id="gst-element-get-static-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to find a static pad of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the static <link linkend="GstPad"><type>GstPad</type></link> to retrieve.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-static-pad.returns" role="returns">
<title>Returns</title>
<para> the requested <link linkend="GstPad"><type>GstPad</type></link> if
found, otherwise <link linkend="NULL:CAPS"><literal>NULL</literal></link>.  unref after usage.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-request-pad" role="function">
<title>gst_element_request_pad&#160;()</title>
<indexterm zone="gst-element-request-pad"><primary>gst_element_request_pad</primary></indexterm>
<programlisting language="C"><link linkend="GstPad"><returnvalue>GstPad</returnvalue></link>&#160;*
gst_element_request_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                         <parameter><link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> *templ</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                         <parameter>const <link linkend="GstCaps"><type>GstCaps</type></link> *caps</parameter>);</programlisting>
<para>Retrieves a request pad from the element according to the provided template.
Pad templates can be looked up using
<link linkend="gst-element-factory-get-static-pad-templates"><function>gst_element_factory_get_static_pad_templates()</function></link>.</para>
<para>The pad should be released with <link linkend="gst-element-release-request-pad"><function>gst_element_release_request_pad()</function></link>.</para>

<para><emphasis role="annotation">[<acronym>virtual</acronym> request_new_pad]</emphasis></para><refsect3 id="gst-element-request-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to find a request pad of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>templ</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link> of which we want a pad of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para> the name of the request <link linkend="GstPad"><type>GstPad</type></link>
to retrieve. Can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>caps</para></entry>
<entry role="parameter_description"><para> the caps of the pad we want to
request. Can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-request-pad.returns" role="returns">
<title>Returns</title>
<para> requested <link linkend="GstPad"><type>GstPad</type></link> if found,
otherwise <link linkend="NULL:CAPS"><literal>NULL</literal></link>.  Release after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-no-more-pads" role="function">
<title>gst_element_no_more_pads&#160;()</title>
<indexterm zone="gst-element-no-more-pads"><primary>gst_element_no_more_pads</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_no_more_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Use this function to signal that the element does not expect any more pads
to show up in the current pipeline. This function should be called whenever
pads have been added by the element itself. Elements with <link linkend="GST-PAD-SOMETIMES:CAPS"><type>GST_PAD_SOMETIMES</type></link>
pad templates use this in combination with autopluggers to figure out that
the element is done initializing its pads.</para>
<para>This function emits the <link linkend="GstElement-no-more-pads"><type>“no-more-pads”</type></link> signal.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-no-more-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-release-request-pad" role="function">
<title>gst_element_release_request_pad&#160;()</title>
<indexterm zone="gst-element-release-request-pad"><primary>gst_element_release_request_pad</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_release_request_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                                 <parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Makes the element free the previously requested pad as obtained
with <link linkend="gst-element-request-pad"><function>gst_element_request_pad()</function></link>.</para>
<para>This does not unref the pad. If the pad was created by using
<link linkend="gst-element-request-pad"><function>gst_element_request_pad()</function></link>, <link linkend="gst-element-release-request-pad"><function>gst_element_release_request_pad()</function></link> needs to be
followed by <link linkend="gst-object-unref"><function>gst_object_unref()</function></link> to free the <parameter>pad</parameter>
.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-release-request-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to release the request pad of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPad"><type>GstPad</type></link> to release.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-remove-pad" role="function">
<title>gst_element_remove_pad&#160;()</title>
<indexterm zone="gst-element-remove-pad"><primary>gst_element_remove_pad</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_remove_pad (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                        <parameter><link linkend="GstPad"><type>GstPad</type></link> *pad</parameter>);</programlisting>
<para>Removes <parameter>pad</parameter>
 from <parameter>element</parameter>
. <parameter>pad</parameter>
 will be destroyed if it has not been
referenced elsewhere using <link linkend="gst-object-unparent"><function>gst_object_unparent()</function></link>.</para>
<para>This function is used by plugin developers and should not be used
by applications. Pads that were dynamically requested from elements
with <link linkend="gst-element-request-pad"><function>gst_element_request_pad()</function></link> should be released with the
<link linkend="gst-element-release-request-pad"><function>gst_element_release_request_pad()</function></link> function instead.</para>
<para>Pads are not automatically deactivated so elements should perform the needed
steps to deactivate the pad in case this pad is removed in the PAUSED or
PLAYING state. See <link linkend="gst-pad-set-active"><function>gst_pad_set_active()</function></link> for more information about
deactivating pads.</para>
<para>The pad and the element should be unlocked when calling this function.</para>
<para>This function will emit the <link linkend="GstElement-pad-removed"><type>“pad-removed”</type></link> signal on the element.</para>
<refsect3 id="gst-element-remove-pad.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to remove pad from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pad</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstPad"><type>GstPad</type></link> to remove from the element. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-remove-pad.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pad could be removed. Can return <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if the
pad does not belong to the provided element.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-iterate-pads" role="function">
<title>gst_element_iterate_pads&#160;()</title>
<indexterm zone="gst-element-iterate-pads"><primary>gst_element_iterate_pads</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
gst_element_iterate_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Retrieves an iterator of <parameter>element</parameter>
's pads. The iterator should
be freed after usage. Also more specialized iterators exists such as
<link linkend="gst-element-iterate-src-pads"><function>gst_element_iterate_src_pads()</function></link> or <link linkend="gst-element-iterate-sink-pads"><function>gst_element_iterate_sink_pads()</function></link>.</para>
<para>The order of pads returned by the iterator will be the order in which
the pads were added to the element.</para>
<refsect3 id="gst-element-iterate-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to iterate pads of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-iterate-pads.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstIterator"><type>GstIterator</type></link> of <link linkend="GstPad"><type>GstPad</type></link>.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-iterate-sink-pads" role="function">
<title>gst_element_iterate_sink_pads&#160;()</title>
<indexterm zone="gst-element-iterate-sink-pads"><primary>gst_element_iterate_sink_pads</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
gst_element_iterate_sink_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Retrieves an iterator of <parameter>element</parameter>
's sink pads.</para>
<para>The order of pads returned by the iterator will be the order in which
the pads were added to the element.</para>
<refsect3 id="gst-element-iterate-sink-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-iterate-sink-pads.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstIterator"><type>GstIterator</type></link> of <link linkend="GstPad"><type>GstPad</type></link>.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-iterate-src-pads" role="function">
<title>gst_element_iterate_src_pads&#160;()</title>
<indexterm zone="gst-element-iterate-src-pads"><primary>gst_element_iterate_src_pads</primary></indexterm>
<programlisting language="C"><link linkend="GstIterator"><returnvalue>GstIterator</returnvalue></link>&#160;*
gst_element_iterate_src_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Retrieves an iterator of <parameter>element</parameter>
's source pads.</para>
<para>The order of pads returned by the iterator will be the order in which
the pads were added to the element.</para>
<refsect3 id="gst-element-iterate-src-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-iterate-src-pads.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstIterator"><type>GstIterator</type></link> of <link linkend="GstPad"><type>GstPad</type></link>.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-link" role="function">
<title>gst_element_link&#160;()</title>
<indexterm zone="gst-element-link"><primary>gst_element_link</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                  <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>);</programlisting>
<para>Links <parameter>src</parameter>
 to <parameter>dest</parameter>
. The link must be from source to
destination; the other direction will not be tried. The function looks for
existing pads that aren't linked yet. It will request new pads if necessary.
Such pads need to be released manually when unlinking.
If multiple links are possible, only one is established.</para>
<para>Make sure you have added your elements to a bin or pipeline with
<link linkend="gst-bin-add"><function>gst_bin_add()</function></link> before trying to link them.</para>
<refsect3 id="gst-element-link.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstElement"><type>GstElement</type></link> containing the source pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the elements could be linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-unlink" role="function">
<title>gst_element_unlink&#160;()</title>
<indexterm zone="gst-element-unlink"><primary>gst_element_unlink</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_unlink (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                    <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>);</programlisting>
<para>Unlinks all source pads of the source element with all sink pads
of the sink element to which they are linked.</para>
<para>If the link has been made using <link linkend="gst-element-link"><function>gst_element_link()</function></link>, it could have created an
requestpad, which has to be released using <link linkend="gst-element-release-request-pad"><function>gst_element_release_request_pad()</function></link>.</para>
<refsect3 id="gst-element-unlink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para> the source <link linkend="GstElement"><type>GstElement</type></link> to unlink. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the sink <link linkend="GstElement"><type>GstElement</type></link> to unlink. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-link-many" role="function">
<title>gst_element_link_many&#160;()</title>
<indexterm zone="gst-element-link-many"><primary>gst_element_link_many</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link_many (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element_1</parameter>,
                       <parameter><link linkend="GstElement"><type>GstElement</type></link> *element_2</parameter>,
                       <parameter>...</parameter>);</programlisting>
<para>Chain together a series of elements. Uses <link linkend="gst-element-link"><function>gst_element_link()</function></link>.
Make sure you have added your elements to a bin or pipeline with
<link linkend="gst-bin-add"><function>gst_bin_add()</function></link> before trying to link them.</para>
<refsect3 id="gst-element-link-many.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_1</para></entry>
<entry role="parameter_description"><para> the first <link linkend="GstElement"><type>GstElement</type></link> in the link chain. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_2</para></entry>
<entry role="parameter_description"><para> the second <link linkend="GstElement"><type>GstElement</type></link> in the link chain. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>the <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of elements to link in order.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link-many.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-unlink-many" role="function">
<title>gst_element_unlink_many&#160;()</title>
<indexterm zone="gst-element-unlink-many"><primary>gst_element_unlink_many</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_unlink_many (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element_1</parameter>,
                         <parameter><link linkend="GstElement"><type>GstElement</type></link> *element_2</parameter>,
                         <parameter>...</parameter>);</programlisting>
<para>Unlinks a series of elements. Uses <link linkend="gst-element-unlink"><function>gst_element_unlink()</function></link>.</para>
<refsect3 id="gst-element-unlink-many.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element_1</para></entry>
<entry role="parameter_description"><para> the first <link linkend="GstElement"><type>GstElement</type></link> in the link chain. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>element_2</para></entry>
<entry role="parameter_description"><para> the second <link linkend="GstElement"><type>GstElement</type></link> in the link chain. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>...</para></entry>
<entry role="parameter_description"><para>the <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of elements to unlink in order.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-link-pads" role="function">
<title>gst_element_link_pads&#160;()</title>
<indexterm zone="gst-element-link-pads"><primary>gst_element_link_pads</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *srcpadname</parameter>,
                       <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *destpadname</parameter>);</programlisting>
<para>Links the two named pads of the source and destination elements.
Side effect is that if one of the pads has no parent, it becomes a
child of the parent of the other element.  If they have different
parents, the link fails.</para>
<refsect3 id="gst-element-link-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> containing the source pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>srcpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in source element
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in destination element,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link-pads.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads could be linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-link-pads-full" role="function">
<title>gst_element_link_pads_full&#160;()</title>
<indexterm zone="gst-element-link-pads-full"><primary>gst_element_link_pads_full</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link_pads_full (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *srcpadname</parameter>,
                            <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *destpadname</parameter>,
                            <parameter><link linkend="GstPadLinkCheck"><type>GstPadLinkCheck</type></link> flags</parameter>);</programlisting>
<para>Links the two named pads of the source and destination elements.
Side effect is that if one of the pads has no parent, it becomes a
child of the parent of the other element.  If they have different
parents, the link fails.</para>
<para>Calling <link linkend="gst-element-link-pads-full"><function>gst_element_link_pads_full()</function></link> with <parameter>flags</parameter>
 == <link linkend="GST-PAD-LINK-CHECK-DEFAULT:CAPS"><literal>GST_PAD_LINK_CHECK_DEFAULT</literal></link>
is the same as calling <link linkend="gst-element-link-pads"><function>gst_element_link_pads()</function></link> and the recommended way of
linking pads with safety checks applied.</para>
<para>This is a convenience function for <link linkend="gst-pad-link-full"><function>gst_pad_link_full()</function></link>.</para>
<refsect3 id="gst-element-link-pads-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> containing the source pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>srcpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in source element
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in destination element,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstPadLinkCheck"><type>GstPadLinkCheck</type></link> to be performed when linking pads.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link-pads-full.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads could be linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-unlink-pads" role="function">
<title>gst_element_unlink_pads&#160;()</title>
<indexterm zone="gst-element-unlink-pads"><primary>gst_element_unlink_pads</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_unlink_pads (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *srcpadname</parameter>,
                         <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *destpadname</parameter>);</programlisting>
<para>Unlinks the two named pads of the source and destination elements.</para>
<para>This is a convenience function for <link linkend="gst-pad-unlink"><function>gst_pad_unlink()</function></link>.</para>
<refsect3 id="gst-element-unlink-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>a (transfer none): <link linkend="GstElement"><type>GstElement</type></link> containing the source pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>srcpadname</para></entry>
<entry role="parameter_description"><para>the name of the <link linkend="GstPad"><type>GstPad</type></link> in source element.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destpadname</para></entry>
<entry role="parameter_description"><para>the name of the <link linkend="GstPad"><type>GstPad</type></link> in destination element.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-link-pads-filtered" role="function">
<title>gst_element_link_pads_filtered&#160;()</title>
<indexterm zone="gst-element-link-pads-filtered"><primary>gst_element_link_pads_filtered</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link_pads_filtered (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *srcpadname</parameter>,
                                <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *destpadname</parameter>,
                                <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *filter</parameter>);</programlisting>
<para>Links the two named pads of the source and destination elements. Side effect
is that if one of the pads has no parent, it becomes a child of the parent of
the other element. If they have different parents, the link fails. If <parameter>caps</parameter>

is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, makes sure that the caps of the link is a subset of <parameter>caps</parameter>
.</para>
<refsect3 id="gst-element-link-pads-filtered.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> containing the source pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>srcpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in source element
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destpadname</para></entry>
<entry role="parameter_description"><para> the name of the <link linkend="GstPad"><type>GstPad</type></link> in destination element
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for any pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstCaps"><type>GstCaps</type></link> to filter the link,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for no filter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link-pads-filtered.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads could be linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-link-filtered" role="function">
<title>gst_element_link_filtered&#160;()</title>
<indexterm zone="gst-element-link-filtered"><primary>gst_element_link_filtered</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_link_filtered (<parameter><link linkend="GstElement"><type>GstElement</type></link> *src</parameter>,
                           <parameter><link linkend="GstElement"><type>GstElement</type></link> *dest</parameter>,
                           <parameter><link linkend="GstCaps"><type>GstCaps</type></link> *filter</parameter>);</programlisting>
<para>Links <parameter>src</parameter>
 to <parameter>dest</parameter>
 using the given caps as filtercaps.
The link must be from source to
destination; the other direction will not be tried. The function looks for
existing pads that aren't linked yet. It will request new pads if necessary.
If multiple links are possible, only one is established.</para>
<para>Make sure you have added your elements to a bin or pipeline with
<link linkend="gst-bin-add"><function>gst_bin_add()</function></link> before trying to link them.</para>
<refsect3 id="gst-element-link-filtered.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> containing the source pad.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstElement"><type>GstElement</type></link> containing the destination pad. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>filter</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstCaps"><type>GstCaps</type></link> to filter the link,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for no filter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-link-filtered.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the pads could be linked, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-class-get-metadata" role="function">
<title>gst_element_class_get_metadata&#160;()</title>
<indexterm zone="gst-element-class-get-metadata"><primary>gst_element_class_get_metadata</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_element_class_get_metadata (<parameter><link linkend="GstElementClass"><type>GstElementClass</type></link> *klass</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
<para>Get metadata with <parameter>key</parameter>
 in <parameter>klass</parameter>
.</para>
<refsect3 id="gst-element-class-get-metadata.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>klass</para></entry>
<entry role="parameter_description"><para>class to get metadata for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the key to get</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-class-get-metadata.returns" role="returns">
<title>Returns</title>
<para> the metadata for <parameter>key</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-base-time" role="function">
<title>gst_element_set_base_time&#160;()</title>
<indexterm zone="gst-element-set-base-time"><primary>gst_element_set_base_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_set_base_time (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                           <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> time</parameter>);</programlisting>
<para>Set the base time of an element. See <link linkend="gst-element-get-base-time"><function>gst_element_get_base_time()</function></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-set-base-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>time</para></entry>
<entry role="parameter_description"><para>the base time to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-base-time" role="function">
<title>gst_element_get_base_time&#160;()</title>
<indexterm zone="gst-element-get-base-time"><primary>gst_element_get_base_time</primary></indexterm>
<programlisting language="C"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
gst_element_get_base_time (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Returns the base time of the element. The base time is the
absolute time of the clock when this element was last put to
PLAYING. Subtracting the base time from the clock time gives
the running time of the element.</para>
<refsect3 id="gst-element-get-base-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-base-time.returns" role="returns">
<title>Returns</title>
<para> the base time of the element.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-start-time" role="function">
<title>gst_element_set_start_time&#160;()</title>
<indexterm zone="gst-element-set-start-time"><primary>gst_element_set_start_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_set_start_time (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                            <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> time</parameter>);</programlisting>
<para>Set the start time of an element. The start time of the element is the
running time of the element when it last went to the PAUSED state. In READY
or after a flushing seek, it is set to 0.</para>
<para>Toplevel elements like <link linkend="GstPipeline"><type>GstPipeline</type></link> will manage the start_time and
base_time on its children. Setting the start_time to <link linkend="GST-CLOCK-TIME-NONE:CAPS"><type>GST_CLOCK_TIME_NONE</type></link>
on such a toplevel element will disable the distribution of the base_time to
the children and can be useful if the application manages the base_time
itself, for example if you want to synchronize capture from multiple
pipelines, and you can also ensure that the pipelines have the same clock.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-set-start-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>time</para></entry>
<entry role="parameter_description"><para>the base time to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-start-time" role="function">
<title>gst_element_get_start_time&#160;()</title>
<indexterm zone="gst-element-get-start-time"><primary>gst_element_get_start_time</primary></indexterm>
<programlisting language="C"><link linkend="GstClockTime"><returnvalue>GstClockTime</returnvalue></link>
gst_element_get_start_time (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Returns the start time of the element. The start time is the
running time of the clock when this element was last put to PAUSED.</para>
<para>Usually the start_time is managed by a toplevel element such as
<link linkend="GstPipeline"><type>GstPipeline</type></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-get-start-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-start-time.returns" role="returns">
<title>Returns</title>
<para> the start time of the element.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-bus" role="function">
<title>gst_element_set_bus&#160;()</title>
<indexterm zone="gst-element-set-bus"><primary>gst_element_set_bus</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_set_bus (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                     <parameter><link linkend="GstBus"><type>GstBus</type></link> *bus</parameter>);</programlisting>
<para>Sets the bus of the element. Increases the refcount on the bus.
For internal use only, unless you're testing elements.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-set-bus.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to set the bus of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bus</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstBus"><type>GstBus</type></link> to set. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-bus" role="function">
<title>gst_element_get_bus&#160;()</title>
<indexterm zone="gst-element-get-bus"><primary>gst_element_get_bus</primary></indexterm>
<programlisting language="C"><link linkend="GstBus"><returnvalue>GstBus</returnvalue></link>&#160;*
gst_element_get_bus (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Returns the bus of the element. Note that only a <link linkend="GstPipeline"><type>GstPipeline</type></link> will provide a
bus for the application.</para>
<refsect3 id="gst-element-get-bus.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to get the bus of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-bus.returns" role="returns">
<title>Returns</title>
<para> the element's <link linkend="GstBus"><type>GstBus</type></link>. unref after usage.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-context" role="function">
<title>gst_element_set_context&#160;()</title>
<indexterm zone="gst-element-set-context"><primary>gst_element_set_context</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_set_context (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                         <parameter><link linkend="GstContext"><type>GstContext</type></link> *context</parameter>);</programlisting>
<para>Sets the context of the element. Increases the refcount of the context.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-set-context.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to set the context of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstContext"><type>GstContext</type></link> to set. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-factory" role="function">
<title>gst_element_get_factory&#160;()</title>
<indexterm zone="gst-element-get-factory"><primary>gst_element_get_factory</primary></indexterm>
<programlisting language="C"><link linkend="GstElementFactory"><returnvalue>GstElementFactory</returnvalue></link>&#160;*
gst_element_get_factory (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Retrieves the factory that was used to create this element.</para>
<refsect3 id="gst-element-get-factory.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to request the element factory of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-factory.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstElementFactory"><type>GstElementFactory</type></link> used for creating this
element. no refcounting is needed. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-name" role="macro">
<title>gst_element_set_name()</title>
<indexterm zone="gst-element-set-name"><primary>gst_element_set_name</primary></indexterm>
<programlisting language="C">#define                 gst_element_set_name(elem,name) gst_object_set_name(GST_OBJECT_CAST(elem),name)
</programlisting>
<para>Sets the name of the element, getting rid of the old name if there was one.</para>
<refsect3 id="gst-element-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to set the name of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the new name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-name" role="macro">
<title>gst_element_get_name()</title>
<indexterm zone="gst-element-get-name"><primary>gst_element_get_name</primary></indexterm>
<programlisting language="C">#define                 gst_element_get_name(elem)      gst_object_get_name(GST_OBJECT_CAST(elem))
</programlisting>
<para>Returns a copy of the name of <parameter>elem</parameter>
.
Caller should <link linkend="g-free"><function>g_free()</function></link> the return value after usage.
For a nameless element, this returns <link linkend="NULL:CAPS"><literal>NULL</literal></link>, which you can safely <link linkend="g-free"><function>g_free()</function></link>
as well.</para>
<refsect3 id="gst-element-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to get the name of <parameter>elem</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-name.returns" role="returns">
<title>Returns</title>
<para> the name of <parameter>elem</parameter>
. <link linkend="g-free"><function>g_free()</function></link>
after usage. MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-parent" role="macro">
<title>gst_element_set_parent()</title>
<indexterm zone="gst-element-set-parent"><primary>gst_element_set_parent</primary></indexterm>
<programlisting language="C">#define                 gst_element_set_parent(elem,parent)     gst_object_set_parent(GST_OBJECT_CAST(elem),parent)
</programlisting>
<para>Sets the parent of an element.</para>
<refsect3 id="gst-element-set-parent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to set the parent of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parent</para></entry>
<entry role="parameter_description"><para>the new parent <link linkend="GstObject"><type>GstObject</type></link> of the element.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-get-parent" role="macro">
<title>gst_element_get_parent()</title>
<indexterm zone="gst-element-get-parent"><primary>gst_element_get_parent</primary></indexterm>
<programlisting language="C">#define                 gst_element_get_parent(elem)    gst_object_get_parent(GST_OBJECT_CAST(elem))
</programlisting>
<para>Get the parent of an element.</para>
<refsect3 id="gst-element-get-parent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>elem</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to get the parent of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-parent.returns" role="returns">
<title>Returns</title>
<para> the parent of an element. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-clock" role="function">
<title>gst_element_set_clock&#160;()</title>
<indexterm zone="gst-element-set-clock"><primary>gst_element_set_clock</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_set_clock (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                       <parameter><link linkend="GstClock"><type>GstClock</type></link> *clock</parameter>);</programlisting>
<para>Sets the clock for the element. This function increases the
refcount on the clock. Any previously set clock on the object
is unreffed.</para>
<refsect3 id="gst-element-set-clock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to set the clock for.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>clock</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstClock"><type>GstClock</type></link> to set for the element.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-set-clock.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the element accepted the clock. An element can refuse a
clock when it, for example, is not able to slave its internal clock to the
<parameter>clock</parameter>
or when it requires a specific clock to operate.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-get-clock" role="function">
<title>gst_element_get_clock&#160;()</title>
<indexterm zone="gst-element-get-clock"><primary>gst_element_get_clock</primary></indexterm>
<programlisting language="C"><link linkend="GstClock"><returnvalue>GstClock</returnvalue></link>&#160;*
gst_element_get_clock (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Gets the currently configured clock of the element. This is the clock as was
last set with <link linkend="gst-element-set-clock"><function>gst_element_set_clock()</function></link>.</para>
<para>Elements in a pipeline will only have their clock set when the
pipeline is in the PLAYING state.</para>
<refsect3 id="gst-element-get-clock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to get the clock of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-clock.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstClock"><type>GstClock</type></link> of the element. unref after usage.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-provide-clock" role="function">
<title>gst_element_provide_clock&#160;()</title>
<indexterm zone="gst-element-provide-clock"><primary>gst_element_provide_clock</primary></indexterm>
<programlisting language="C"><link linkend="GstClock"><returnvalue>GstClock</returnvalue></link>&#160;*
gst_element_provide_clock (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Get the clock provided by the given element.</para>
<note>An element is only required to provide a clock in the PAUSED
state. Some elements can provide a clock in other states.</note>
<refsect3 id="gst-element-provide-clock.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-provide-clock.returns" role="returns">
<title>Returns</title>
<para> the GstClock provided by the
element or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no clock could be provided.  Unref after usage.</para>
<para>MT safe. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-state" role="function">
<title>gst_element_set_state&#160;()</title>
<indexterm zone="gst-element-set-state"><primary>gst_element_set_state</primary></indexterm>
<programlisting language="C"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
gst_element_set_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                       <parameter><link linkend="GstState"><type>GstState</type></link> state</parameter>);</programlisting>
<para>Sets the state of the element. This function will try to set the
requested state by going through all the intermediary states and calling
the class's state change function for each.</para>
<para>This function can return <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><type>GST_STATE_CHANGE_ASYNC</type></link>, in which case the
element will perform the remainder of the state change asynchronously in
another thread.
An application can use <link linkend="gst-element-get-state"><function>gst_element_get_state()</function></link> to wait for the completion
of the state change or it can wait for a <link linkend="GST-MESSAGE-ASYNC-DONE:CAPS"><literal>GST_MESSAGE_ASYNC_DONE</literal></link> or
<link linkend="GST-MESSAGE-STATE-CHANGED:CAPS"><literal>GST_MESSAGE_STATE_CHANGED</literal></link> on the bus.</para>
<para>State changes to <link linkend="GST-STATE-READY:CAPS"><literal>GST_STATE_READY</literal></link> or <link linkend="GST-STATE-NULL:CAPS"><literal>GST_STATE_NULL</literal></link> never return
<link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><type>GST_STATE_CHANGE_ASYNC</type></link>.</para>
<refsect3 id="gst-element-set-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to change state of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para>the element's new <link linkend="GstState"><type>GstState</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-set-state.returns" role="returns">
<title>Returns</title>
<para> Result of the state change using <link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link>.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-get-state" role="function">
<title>gst_element_get_state&#160;()</title>
<indexterm zone="gst-element-get-state"><primary>gst_element_get_state</primary></indexterm>
<programlisting language="C"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
gst_element_get_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                       <parameter><link linkend="GstState"><type>GstState</type></link> *state</parameter>,
                       <parameter><link linkend="GstState"><type>GstState</type></link> *pending</parameter>,
                       <parameter><link linkend="GstClockTime"><type>GstClockTime</type></link> timeout</parameter>);</programlisting>
<para>Gets the state of the element.</para>
<para>For elements that performed an ASYNC state change, as reported by
<link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link>, this function will block up to the
specified timeout value for the state change to complete.
If the element completes the state change or goes into
an error, this function returns immediately with a return value of
<link linkend="GST-STATE-CHANGE-SUCCESS:CAPS"><literal>GST_STATE_CHANGE_SUCCESS</literal></link> or <link linkend="GST-STATE-CHANGE-FAILURE:CAPS"><literal>GST_STATE_CHANGE_FAILURE</literal></link> respectively.</para>
<para>For elements that did not return <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link>, this function
returns the current and pending state immediately.</para>
<para>This function returns <link linkend="GST-STATE-CHANGE-NO-PREROLL:CAPS"><literal>GST_STATE_CHANGE_NO_PREROLL</literal></link> if the element
successfully changed its state but is not able to provide data yet.
This mostly happens for live sources that only produce data in
<link linkend="GST-STATE-PLAYING:CAPS"><literal>GST_STATE_PLAYING</literal></link>. While the state change return is equivalent to
<link linkend="GST-STATE-CHANGE-SUCCESS:CAPS"><literal>GST_STATE_CHANGE_SUCCESS</literal></link>, it is returned to the application to signal that
some sink elements might not be able to complete their state change because
an element is not producing data to complete the preroll. When setting the
element to playing, the preroll will complete and playback will start.</para>
<refsect3 id="gst-element-get-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to get the state of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para> a pointer to <link linkend="GstState"><type>GstState</type></link> to hold the state.
Can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>pending</para></entry>
<entry role="parameter_description"><para> a pointer to <link linkend="GstState"><type>GstState</type></link> to hold the pending
state. Can be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>timeout</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstClockTime"><type>GstClockTime</type></link> to specify the timeout for an async
state change or <link linkend="GST-CLOCK-TIME-NONE:CAPS"><literal>GST_CLOCK_TIME_NONE</literal></link> for infinite timeout.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-get-state.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GST-STATE-CHANGE-SUCCESS:CAPS"><literal>GST_STATE_CHANGE_SUCCESS</literal></link> if the element has no more pending state
and the last state change succeeded, <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link> if the
element is still performing a state change or
<link linkend="GST-STATE-CHANGE-FAILURE:CAPS"><literal>GST_STATE_CHANGE_FAILURE</literal></link> if the last state change failed.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-set-locked-state" role="function">
<title>gst_element_set_locked_state&#160;()</title>
<indexterm zone="gst-element-set-locked-state"><primary>gst_element_set_locked_state</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_set_locked_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> locked_state</parameter>);</programlisting>
<para>Locks the state of an element, so state changes of the parent don't affect
this element anymore.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-set-locked-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>locked_state</para></entry>
<entry role="parameter_description"><para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to lock the element's state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-set-locked-state.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the state was changed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if bad parameters were given
or the elements state-locking needed no change.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-is-locked-state" role="function">
<title>gst_element_is_locked_state&#160;()</title>
<indexterm zone="gst-element-is-locked-state"><primary>gst_element_is_locked_state</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_is_locked_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Checks if the state of an element is locked.
If the state of an element is locked, state changes of the parent don't
affect the element.
This way you can leave currently unused elements inside bins. Just lock their
state before changing the state from <link linkend="GST-STATE-NULL:CAPS"><type>GST_STATE_NULL</type></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-is-locked-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-is-locked-state.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, if the element's state is locked.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-abort-state" role="function">
<title>gst_element_abort_state&#160;()</title>
<indexterm zone="gst-element-abort-state"><primary>gst_element_abort_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_abort_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Abort the state change of the element. This function is used
by elements that do asynchronous state changes and find out
something is wrong.</para>
<para>This function should be called with the STATE_LOCK held.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-abort-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to abort the state of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-continue-state" role="function">
<title>gst_element_continue_state&#160;()</title>
<indexterm zone="gst-element-continue-state"><primary>gst_element_continue_state</primary></indexterm>
<programlisting language="C"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
gst_element_continue_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                            <parameter><link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link> ret</parameter>);</programlisting>
<para>Commit the state change of the element and proceed to the next
pending state if any. This function is used
by elements that do asynchronous state changes.
The core will normally call this method automatically when an
element returned <link linkend="GST-STATE-CHANGE-SUCCESS:CAPS"><literal>GST_STATE_CHANGE_SUCCESS</literal></link> from the state change function.</para>
<para>If after calling this method the element still has not reached
the pending state, the next state change is performed.</para>
<para>This method is used internally and should normally not be called by plugins
or applications.</para>
<refsect3 id="gst-element-continue-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to continue the state change of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>The previous state return value</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-continue-state.returns" role="returns">
<title>Returns</title>
<para> The result of the commit state change.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-lost-state" role="function">
<title>gst_element_lost_state&#160;()</title>
<indexterm zone="gst-element-lost-state"><primary>gst_element_lost_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_lost_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Brings the element to the lost state. The current state of the
element is copied to the pending state so that any call to
<link linkend="gst-element-get-state"><function>gst_element_get_state()</function></link> will return <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link>.</para>
<para>An ASYNC_START message is posted. If the element was PLAYING, it will
go to PAUSED. The element will be restored to its PLAYING state by
the parent pipeline when it prerolls again.</para>
<para>This is mostly used for elements that lost their preroll buffer
in the <link linkend="GST-STATE-PAUSED:CAPS"><literal>GST_STATE_PAUSED</literal></link> or <link linkend="GST-STATE-PLAYING:CAPS"><literal>GST_STATE_PLAYING</literal></link> state after a flush,
they will go to their pending state again when a new preroll buffer is
queued. This function can only be called when the element is currently
not in error or an async state change.</para>
<para>This function is used internally and should normally not be called from
plugins or applications.</para>
<refsect3 id="gst-element-lost-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> the state is lost of</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-state-get-name" role="function">
<title>gst_element_state_get_name&#160;()</title>
<indexterm zone="gst-element-state-get-name"><primary>gst_element_state_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_element_state_get_name (<parameter><link linkend="GstState"><type>GstState</type></link> state</parameter>);</programlisting>
<para>Gets a string representing the given state.</para>
<refsect3 id="gst-element-state-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstState"><type>GstState</type></link> to get the name of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-state-get-name.returns" role="returns">
<title>Returns</title>
<para> a string with the name of the state. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-state-change-return-get-name" role="function">
<title>gst_element_state_change_return_get_name&#160;()</title>
<indexterm zone="gst-element-state-change-return-get-name"><primary>gst_element_state_change_return_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_element_state_change_return_get_name
                               (<parameter><link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link> state_ret</parameter>);</programlisting>
<para>Gets a string representing the given state change result.</para>
<refsect3 id="gst-element-state-change-return-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>state_ret</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link> to get the name of.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-state-change-return-get-name.returns" role="returns">
<title>Returns</title>
<para> a string with the name of the state
result. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-element-sync-state-with-parent" role="function">
<title>gst_element_sync_state_with_parent&#160;()</title>
<indexterm zone="gst-element-sync-state-with-parent"><primary>gst_element_sync_state_with_parent</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_sync_state_with_parent (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>);</programlisting>
<para>Tries to change the state of the element to the same as its parent.
If this function returns <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>, the state of element is undefined.</para>
<refsect3 id="gst-element-sync-state-with-parent.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-sync-state-with-parent.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, if the element's state could be synced to the parent's state.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-change-state" role="function">
<title>gst_element_change_state&#160;()</title>
<indexterm zone="gst-element-change-state"><primary>gst_element_change_state</primary></indexterm>
<programlisting language="C"><link linkend="GstStateChangeReturn"><returnvalue>GstStateChangeReturn</returnvalue></link>
gst_element_change_state (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                          <parameter><link linkend="GstStateChange"><type>GstStateChange</type></link> transition</parameter>);</programlisting>
<para>Perform <parameter>transition</parameter>
 on <parameter>element</parameter>
.</para>
<para>This function must be called with STATE_LOCK held and is mainly used
internally.</para>
<refsect3 id="gst-element-change-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>transition</para></entry>
<entry role="parameter_description"><para>the requested transition</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-change-state.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link> of the state transition.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-message-full" role="function">
<title>gst_element_message_full&#160;()</title>
<indexterm zone="gst-element-message-full"><primary>gst_element_message_full</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_element_message_full (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                          <parameter><link linkend="GstMessageType"><type>GstMessageType</type></link> type</parameter>,
                          <parameter><link linkend="GQuark"><type>GQuark</type></link> domain</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> code</parameter>,
                          <parameter><link linkend="gchar"><type>gchar</type></link> *text</parameter>,
                          <parameter><link linkend="gchar"><type>gchar</type></link> *debug</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *file</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *function</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> line</parameter>);</programlisting>
<para>Post an error, warning or info message on the bus from inside an element.</para>
<para><parameter>type</parameter>
 must be of <link linkend="GST-MESSAGE-ERROR:CAPS"><type>GST_MESSAGE_ERROR</type></link>, <link linkend="GST-MESSAGE-WARNING:CAPS"><type>GST_MESSAGE_WARNING</type></link> or
<link linkend="GST-MESSAGE-INFO:CAPS"><type>GST_MESSAGE_INFO</type></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-message-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to send message from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstMessageType"><type>GstMessageType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>domain</para></entry>
<entry role="parameter_description"><para>the GStreamer GError domain this message belongs to</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>code</para></entry>
<entry role="parameter_description"><para>the GError code belonging to the domain</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para> an allocated text string to be used
as a replacement for the default message connected to code,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>debug</para></entry>
<entry role="parameter_description"><para> an allocated debug message to be
used as a replacement for the default debugging information,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>the source code file where the error was generated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>function</para></entry>
<entry role="parameter_description"><para>the source code function where the error was generated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>line</para></entry>
<entry role="parameter_description"><para>the source code line where the error was generated</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-element-post-message" role="function">
<title>gst_element_post_message&#160;()</title>
<indexterm zone="gst-element-post-message"><primary>gst_element_post_message</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_post_message (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                          <parameter><link linkend="GstMessage"><type>GstMessage</type></link> *message</parameter>);</programlisting>
<para>Post a message on the element's <link linkend="GstBus"><type>GstBus</type></link>. This function takes ownership of the
message; if you want to access the message after this call, you should add an
additional reference before calling.</para>
<refsect3 id="gst-element-post-message.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> posting the message</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstMessage"><type>GstMessage</type></link> to post. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-post-message.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the message was successfully posted. The function returns
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if the element did not have a bus.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-query" role="function">
<title>gst_element_query&#160;()</title>
<indexterm zone="gst-element-query"><primary>gst_element_query</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_query (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                   <parameter><link linkend="GstQuery"><type>GstQuery</type></link> *query</parameter>);</programlisting>
<para>Performs a query on the given element.</para>
<para>For elements that don't implement a query handler, this function
forwards the query to a random srcpad or to the peer of a
random linked sinkpad of this element.</para>
<para>Please note that some queries might need a running pipeline to work.</para>
<refsect3 id="gst-element-query.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to perform the query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>query</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstQuery"><type>GstQuery</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-query.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
<para>MT safe.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-query-convert" role="function">
<title>gst_element_query_convert&#160;()</title>
<indexterm zone="gst-element-query-convert"><primary>gst_element_query_convert</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_query_convert (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                           <parameter><link linkend="GstFormat"><type>GstFormat</type></link> src_format</parameter>,
                           <parameter><link linkend="gint64"><type>gint64</type></link> src_val</parameter>,
                           <parameter><link linkend="GstFormat"><type>GstFormat</type></link> dest_format</parameter>,
                           <parameter><link linkend="gint64"><type>gint64</type></link> *dest_val</parameter>);</programlisting>
<para>Queries an element to convert <parameter>src_val</parameter>
 in <parameter>src_format</parameter>
 to <parameter>dest_format</parameter>
.</para>
<refsect3 id="gst-element-query-convert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to invoke the convert query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src_format</para></entry>
<entry role="parameter_description"><para> a <link linkend="GstFormat"><type>GstFormat</type></link> to convert from. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>src_val</para></entry>
<entry role="parameter_description"><para>a value to convert.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> to convert to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_val</para></entry>
<entry role="parameter_description"><para> a pointer to the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-query-convert.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-query-position" role="function">
<title>gst_element_query_position&#160;()</title>
<indexterm zone="gst-element-query-position"><primary>gst_element_query_position</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_query_position (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                            <parameter><link linkend="gint64"><type>gint64</type></link> *cur</parameter>);</programlisting>
<para>Queries an element (usually top-level pipeline or playbin element) for the
stream position in nanoseconds. This will be a value between 0 and the
stream duration (if the stream duration is known). This query will usually
only work once the pipeline is prerolled (i.e. reached PAUSED or PLAYING
state). The application will receive an ASYNC_DONE message on the pipeline
bus when that is the case.</para>
<para>If one repeatedly calls this function one can also create a query and reuse
it in <link linkend="gst-element-query"><function>gst_element_query()</function></link>.</para>
<refsect3 id="gst-element-query-position.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to invoke the position query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para> a location in which to store the current
position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-query-position.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-query-duration" role="function">
<title>gst_element_query_duration&#160;()</title>
<indexterm zone="gst-element-query-duration"><primary>gst_element_query_duration</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_query_duration (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                            <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                            <parameter><link linkend="gint64"><type>gint64</type></link> *duration</parameter>);</programlisting>
<para>Queries an element (usually top-level pipeline or playbin element) for the
total stream duration in nanoseconds. This query will only work once the
pipeline is prerolled (i.e. reached PAUSED or PLAYING state). The application
will receive an ASYNC_DONE message on the pipeline bus when that is the case.</para>
<para>If the duration changes for some reason, you will get a DURATION_CHANGED
message on the pipeline bus, in which case you should re-query the duration
using this function.</para>
<refsect3 id="gst-element-query-duration.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to invoke the duration query on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="GstFormat"><type>GstFormat</type></link> requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>duration</para></entry>
<entry role="parameter_description"><para> A location in which to store the total duration, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-query-duration.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the query could be performed.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-send-event" role="function">
<title>gst_element_send_event&#160;()</title>
<indexterm zone="gst-element-send-event"><primary>gst_element_send_event</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_send_event (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                        <parameter><link linkend="GstEvent"><type>GstEvent</type></link> *event</parameter>);</programlisting>
<para>Sends an event to an element. If the element doesn't implement an
event handler, the event will be pushed on a random linked sink pad for
downstream events or a random linked source pad for upstream events.</para>
<para>This function takes ownership of the provided event so you should
<link linkend="gst-event-ref"><function>gst_event_ref()</function></link> it if you want to reuse the event after this call.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-send-event.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to send the event to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>event</para></entry>
<entry role="parameter_description"><para> the <link linkend="GstEvent"><type>GstEvent</type></link> to send to the element. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-send-event.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the event was handled. Events that trigger a preroll (such
as flushing seeks and steps) will emit <link linkend="GST-MESSAGE-ASYNC-DONE:CAPS"><literal>GST_MESSAGE_ASYNC_DONE</literal></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-seek-simple" role="function">
<title>gst_element_seek_simple&#160;()</title>
<indexterm zone="gst-element-seek-simple"><primary>gst_element_seek_simple</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_seek_simple (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                         <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                         <parameter><link linkend="GstSeekFlags"><type>GstSeekFlags</type></link> seek_flags</parameter>,
                         <parameter><link linkend="gint64"><type>gint64</type></link> seek_pos</parameter>);</programlisting>
<para>Simple API to perform a seek on the given element, meaning it just seeks
to the given position relative to the start of the stream. For more complex
operations like segment seeks (e.g. for looping) or changing the playback
rate or seeking relative to the last configured playback segment you should
use <link linkend="gst-element-seek"><function>gst_element_seek()</function></link>.</para>
<para>In a completely prerolled PAUSED or PLAYING pipeline, seeking is always
guaranteed to return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on a seekable media type or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> when the media
type is certainly not seekable (such as a live stream).</para>
<para>Some elements allow for seeking in the READY state, in this
case they will store the seek event and execute it when they are put to
PAUSED. If the element supports seek in READY, it will always return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when
it receives the event in the READY state.</para>
<refsect3 id="gst-element-seek-simple.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to seek on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstFormat"><type>GstFormat</type></link> to execute the seek in, such as <link linkend="GST-FORMAT-TIME:CAPS"><type>GST_FORMAT_TIME</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>seek_flags</para></entry>
<entry role="parameter_description"><para>seek options; playback applications will usually want to use
GST_SEEK_FLAG_FLUSH | GST_SEEK_FLAG_KEY_UNIT here</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>seek_pos</para></entry>
<entry role="parameter_description"><para>position to seek to (relative to the start); if you are doing
a seek in <link linkend="GST-FORMAT-TIME:CAPS"><type>GST_FORMAT_TIME</type></link> this value is in nanoseconds -
multiply with <link linkend="GST-SECOND:CAPS"><type>GST_SECOND</type></link> to convert seconds to nanoseconds or
with <link linkend="GST-MSECOND:CAPS"><type>GST_MSECOND</type></link> to convert milliseconds to nanoseconds.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-seek-simple.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the seek operation succeeded. Flushing seeks will trigger a
preroll, which will emit <link linkend="GST-MESSAGE-ASYNC-DONE:CAPS"><literal>GST_MESSAGE_ASYNC_DONE</literal></link>.</para>
</refsect3></refsect2>
<refsect2 id="gst-element-seek" role="function">
<title>gst_element_seek&#160;()</title>
<indexterm zone="gst-element-seek"><primary>gst_element_seek</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_element_seek (<parameter><link linkend="GstElement"><type>GstElement</type></link> *element</parameter>,
                  <parameter><link linkend="gdouble"><type>gdouble</type></link> rate</parameter>,
                  <parameter><link linkend="GstFormat"><type>GstFormat</type></link> format</parameter>,
                  <parameter><link linkend="GstSeekFlags"><type>GstSeekFlags</type></link> flags</parameter>,
                  <parameter><link linkend="GstSeekType"><type>GstSeekType</type></link> start_type</parameter>,
                  <parameter><link linkend="gint64"><type>gint64</type></link> start</parameter>,
                  <parameter><link linkend="GstSeekType"><type>GstSeekType</type></link> stop_type</parameter>,
                  <parameter><link linkend="gint64"><type>gint64</type></link> stop</parameter>);</programlisting>
<para>Sends a seek event to an element. See <link linkend="gst-event-new-seek"><function>gst_event_new_seek()</function></link> for the details of
the parameters. The seek event is sent to the element using
<link linkend="gst-element-send-event"><function>gst_element_send_event()</function></link>.</para>
<para>MT safe.</para>
<refsect3 id="gst-element-seek.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>element</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstElement"><type>GstElement</type></link> to send the event to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rate</para></entry>
<entry role="parameter_description"><para>The new playback rate</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>The format of the seek values</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>The optional seek flags.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start_type</para></entry>
<entry role="parameter_description"><para>The type and flags for the new start position</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>The value of the new start position</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_type</para></entry>
<entry role="parameter_description"><para>The type and flags for the new stop position</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop</para></entry>
<entry role="parameter_description"><para>The value of the new stop position</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-element-seek.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the event was handled. Flushing seeks will trigger a
preroll, which will emit <link linkend="GST-MESSAGE-ASYNC-DONE:CAPS"><literal>GST_MESSAGE_ASYNC_DONE</literal></link>.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GstElement.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstElement-struct" role="struct">
<title>struct GstElement</title>
<indexterm zone="GstElement-struct"><primary>GstElement</primary></indexterm>
<programlisting language="C">struct GstElement {
  GRecMutex             state_lock;

  /* element state */
  GCond                 state_cond;
  guint32               state_cookie;
  GstState              target_state;
  GstState              current_state;
  GstState              next_state;
  GstState              pending_state;
  GstStateChangeReturn  last_return;

  GstBus               *bus;

  /* allocated clock */
  GstClock             *clock;
  GstClockTimeDiff      base_time; /* NULL/READY: 0 - PAUSED: current time - PLAYING: difference to clock */
  GstClockTime          start_time;

  /* element pads, these lists can only be iterated while holding
   * the LOCK or checking the cookie after each LOCK. */
  guint16               numpads;
  GList                *pads;
  guint16               numsrcpads;
  GList                *srcpads;
  guint16               numsinkpads;
  GList                *sinkpads;
  guint32               pads_cookie;
};
</programlisting>
<para>GStreamer element abstract base class.</para>
<refsect3 id="GstElement.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GRecMutex"><type>GRecMutex</type></link>&#160;<structfield id="GstElement-struct.state-lock">state_lock</structfield>;</para></entry>
<entry role="struct_member_description"><para>Used to serialize execution of <link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GCond"><type>GCond</type></link>&#160;<structfield id="GstElement-struct.state-cond">state_cond</structfield>;</para></entry>
<entry role="struct_member_description"><para>Used to signal completion of a state change</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint32"><type>guint32</type></link>&#160;<structfield id="GstElement-struct.state-cookie">state_cookie</structfield>;</para></entry>
<entry role="struct_member_description"><para>Used to detect concurrent execution of
<link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link> and <link linkend="gst-element-get-state"><function>gst_element_get_state()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstState"><type>GstState</type></link>&#160;<structfield id="GstElement-struct.target-state">target_state</structfield>;</para></entry>
<entry role="struct_member_description"><para>the target state of an element as set by the application</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstState"><type>GstState</type></link>&#160;<structfield id="GstElement-struct.current-state">current_state</structfield>;</para></entry>
<entry role="struct_member_description"><para>the current state of an element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstState"><type>GstState</type></link>&#160;<structfield id="GstElement-struct.next-state">next_state</structfield>;</para></entry>
<entry role="struct_member_description"><para>the next state of an element, can be <link linkend="GST-STATE-VOID-PENDING:CAPS"><type>GST_STATE_VOID_PENDING</type></link> if
the element is in the correct state.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstState"><type>GstState</type></link>&#160;<structfield id="GstElement-struct.pending-state">pending_state</structfield>;</para></entry>
<entry role="struct_member_description"><para>the final state the element should go to, can be
<link linkend="GST-STATE-VOID-PENDING:CAPS"><type>GST_STATE_VOID_PENDING</type></link> if the element is in the correct state</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstStateChangeReturn"><type>GstStateChangeReturn</type></link>&#160;<structfield id="GstElement-struct.last-return">last_return</structfield>;</para></entry>
<entry role="struct_member_description"><para>the last return value of an element state change</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstBus"><type>GstBus</type></link>&#160;*<structfield id="GstElement-struct.bus">bus</structfield>;</para></entry>
<entry role="struct_member_description"><para>the bus of the element. This bus is provided to the element by the
parent element or the application. A <link linkend="GstPipeline"><type>GstPipeline</type></link> has a bus of its own.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstClock"><type>GstClock</type></link>&#160;*<structfield id="GstElement-struct.clock">clock</structfield>;</para></entry>
<entry role="struct_member_description"><para>the clock of the element. This clock is usually provided to the
element by the toplevel <link linkend="GstPipeline"><type>GstPipeline</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstClockTimeDiff"><type>GstClockTimeDiff</type></link>&#160;<structfield id="GstElement-struct.base-time">base_time</structfield>;</para></entry>
<entry role="struct_member_description"><para>the time of the clock right before the element is set to
PLAYING. Subtracting <parameter>base_time</parameter>
from the current clock time in the PLAYING
state will yield the running_time against the clock.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstClockTime"><type>GstClockTime</type></link>&#160;<structfield id="GstElement-struct.start-time">start_time</structfield>;</para></entry>
<entry role="struct_member_description"><para>the running_time of the last PAUSED state</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint16"><type>guint16</type></link>&#160;<structfield id="GstElement-struct.numpads">numpads</structfield>;</para></entry>
<entry role="struct_member_description"><para>number of pads of the element, includes both source and sink pads.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GList"><type>GList</type></link>&#160;*<structfield id="GstElement-struct.pads">pads</structfield>;</para></entry>
<entry role="struct_member_description"><para> list of pads. </para></entry>
<entry role="struct_member_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> Gst.Pad]</emphasis></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint16"><type>guint16</type></link>&#160;<structfield id="GstElement-struct.numsrcpads">numsrcpads</structfield>;</para></entry>
<entry role="struct_member_description"><para>number of source pads of the element.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GList"><type>GList</type></link>&#160;*<structfield id="GstElement-struct.srcpads">srcpads</structfield>;</para></entry>
<entry role="struct_member_description"><para> list of source pads. </para></entry>
<entry role="struct_member_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> Gst.Pad]</emphasis></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint16"><type>guint16</type></link>&#160;<structfield id="GstElement-struct.numsinkpads">numsinkpads</structfield>;</para></entry>
<entry role="struct_member_description"><para>number of sink pads of the element.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GList"><type>GList</type></link>&#160;*<structfield id="GstElement-struct.sinkpads">sinkpads</structfield>;</para></entry>
<entry role="struct_member_description"><para> list of sink pads. </para></entry>
<entry role="struct_member_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> Gst.Pad]</emphasis></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint32"><type>guint32</type></link>&#160;<structfield id="GstElement-struct.pads-cookie">pads_cookie</structfield>;</para></entry>
<entry role="struct_member_description"><para>updated whenever the a pad is added or removed</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstElementClass" role="struct">
<title>struct GstElementClass</title>
<indexterm zone="GstElementClass"><primary>GstElementClass</primary></indexterm>
<programlisting language="C">struct GstElementClass {
  GstObjectClass         parent_class;

  /* the element metadata */
  gpointer		 metadata;

  /* factory that the element was created from */
  GstElementFactory     *elementfactory;

  /* templates for our pads */
  GList                 *padtemplates;
  gint                   numpadtemplates;
  guint32                pad_templ_cookie;

  /* virtual methods for subclasses */

  /* request/release pads */
  /* FIXME 2.0 harmonize naming with gst_element_request_pad */
  GstPad*               (*request_new_pad)      (GstElement *element, GstPadTemplate *templ,
                                                 const gchar* name, const GstCaps *caps);

  void                  (*release_pad)          (GstElement *element, GstPad *pad);

  /* state changes */
  GstStateChangeReturn (*get_state)             (GstElement * element, GstState * state,
                                                 GstState * pending, GstClockTime timeout);
  GstStateChangeReturn (*set_state)             (GstElement *element, GstState state);
  GstStateChangeReturn (*change_state)          (GstElement *element, GstStateChange transition);
  void                 (*state_changed)         (GstElement *element, GstState oldstate,
                                                 GstState newstate, GstState pending);

  /* bus */
  void                  (*set_bus)              (GstElement * element, GstBus * bus);

  /* set/get clocks */
  GstClock*             (*provide_clock)        (GstElement *element);
  gboolean              (*set_clock)            (GstElement *element, GstClock *clock);

  /* query functions */
  gboolean              (*send_event)           (GstElement *element, GstEvent *event);

  gboolean              (*query)                (GstElement *element, GstQuery *query);

  gboolean              (*post_message)         (GstElement *element, GstMessage *message);

  void                  (*set_context)          (GstElement *element, GstContext *context);
};
</programlisting>
<para>GStreamer element class. Override the vmethods to implement the element
functionality.</para>
<refsect3 id="GstElementClass.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="gpointer"><type>gpointer</type></link>&#160;<structfield id="GstElementClass.metadata">metadata</structfield>;</para></entry>
<entry role="struct_member_description"><para>metadata for elements of this class</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GstElementFactory"><type>GstElementFactory</type></link>&#160;*<structfield id="GstElementClass.elementfactory">elementfactory</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="GstElementFactory"><type>GstElementFactory</type></link> that creates these elements</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GList"><type>GList</type></link>&#160;*<structfield id="GstElementClass.padtemplates">padtemplates</structfield>;</para></entry>
<entry role="struct_member_description"><para>a <link linkend="GList"><type>GList</type></link> of <link linkend="GstPadTemplate"><type>GstPadTemplate</type></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="gint"><type>gint</type></link>&#160;<structfield id="GstElementClass.numpadtemplates">numpadtemplates</structfield>;</para></entry>
<entry role="struct_member_description"><para>the number of padtemplates</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint32"><type>guint32</type></link>&#160;<structfield id="GstElementClass.pad-templ-cookie">pad_templ_cookie</structfield>;</para></entry>
<entry role="struct_member_description"><para>changed whenever the padtemplates change</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.request-new-pad">request_new_pad</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>called when a new pad is requested</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.release-pad">release_pad</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>called when a request pad is to be released</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.get-state">get_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>get the state of the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.set-state">set_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>set a new state on the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.change-state">change_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>called by <parameter>set_state</parameter>
to perform an incremental state change</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.state-changed">state_changed</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>called immediately after a new state was set.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.set-bus">set_bus</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>set a <link linkend="GstBus"><type>GstBus</type></link> on the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.provide-clock">provide_clock</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>gets the <link linkend="GstClock"><type>GstClock</type></link> provided by the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.set-clock">set_clock</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>set the <link linkend="GstClock"><type>GstClock</type></link> on the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.send-event">send_event</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>send a <link linkend="GstEvent"><type>GstEvent</type></link> to the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.query">query</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>perform a <link linkend="GstQuery"><type>GstQuery</type></link> on the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.post-message">post_message</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>called when a message is posted on the element. Chain up to
the parent class' handler to have it posted on the bus.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstElementClass.set-context">set_context</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>set a <link linkend="GstContext"><type>GstContext</type></link> on the element</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GstElementFlags" role="enum">
<title>enum GstElementFlags</title>
<indexterm zone="GstElementFlags"><primary>GstElementFlags</primary></indexterm>
<para>The standard flags that an element may have.</para>
<refsect3 id="GstElementFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-LOCKED-STATE:CAPS">GST_ELEMENT_FLAG_LOCKED_STATE</para></entry>
<entry role="enum_member_description"><para>ignore state changes from parent</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-SINK:CAPS">GST_ELEMENT_FLAG_SINK</para></entry>
<entry role="enum_member_description"><para>the element is a sink</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-SOURCE:CAPS">GST_ELEMENT_FLAG_SOURCE</para></entry>
<entry role="enum_member_description"><para>the element is a source.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-PROVIDE-CLOCK:CAPS">GST_ELEMENT_FLAG_PROVIDE_CLOCK</para></entry>
<entry role="enum_member_description"><para>the element can provide a clock</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-REQUIRE-CLOCK:CAPS">GST_ELEMENT_FLAG_REQUIRE_CLOCK</para></entry>
<entry role="enum_member_description"><para>the element requires a clock</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-INDEXABLE:CAPS">GST_ELEMENT_FLAG_INDEXABLE</para></entry>
<entry role="enum_member_description"><para>the element can use an index</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-ELEMENT-FLAG-LAST:CAPS">GST_ELEMENT_FLAG_LAST</para></entry>
<entry role="enum_member_description"><para>offset to define more flags</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstState" role="enum">
<title>enum GstState</title>
<indexterm zone="GstState"><primary>GstState</primary></indexterm>
<para>The possible states an element can be in. States can be changed using
<link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link> and checked using <link linkend="gst-element-get-state"><function>gst_element_get_state()</function></link>.</para>
<refsect3 id="GstState.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-VOID-PENDING:CAPS">GST_STATE_VOID_PENDING</para></entry>
<entry role="enum_member_description"><para>no pending state.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-NULL:CAPS">GST_STATE_NULL</para></entry>
<entry role="enum_member_description"><para>the NULL state or initial state of an element.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-READY:CAPS">GST_STATE_READY</para></entry>
<entry role="enum_member_description"><para>the element is ready to go to PAUSED.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-PAUSED:CAPS">GST_STATE_PAUSED</para></entry>
<entry role="enum_member_description"><para>the element is PAUSED, it is ready to accept and
                         process data. Sink elements however only accept one
                         buffer and then block.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-PLAYING:CAPS">GST_STATE_PLAYING</para></entry>
<entry role="enum_member_description"><para>the element is PLAYING, the <link linkend="GstClock"><type>GstClock</type></link> is running and
                         the data is flowing.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstStateChange" role="enum">
<title>enum GstStateChange</title>
<indexterm zone="GstStateChange"><primary>GstStateChange</primary></indexterm>
<para>These are the different state changes an element goes through.
<link linkend="GST-STATE-NULL:CAPS"><literal>GST_STATE_NULL</literal></link> &rArr; <link linkend="GST-STATE-PLAYING:CAPS"><literal>GST_STATE_PLAYING</literal></link> is called an upwards state change
and <link linkend="GST-STATE-PLAYING:CAPS"><literal>GST_STATE_PLAYING</literal></link> &rArr; <link linkend="GST-STATE-NULL:CAPS"><literal>GST_STATE_NULL</literal></link> a downwards state change.</para>
<refsect3 id="GstStateChange.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-NULL-TO-READY:CAPS">GST_STATE_CHANGE_NULL_TO_READY</para></entry>
<entry role="enum_member_description"><para>state change from NULL to READY.</para>
<itemizedlist>
  <listitem><para>
    The element must check if the resources it needs are available. Device
    sinks and -sources typically try to probe the device to constrain their
    caps.
  </para></listitem>
  <listitem><para>
    The element opens the device (in case feature need to be probed).
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-READY-TO-PAUSED:CAPS">GST_STATE_CHANGE_READY_TO_PAUSED</para></entry>
<entry role="enum_member_description"><para>state change from READY to PAUSED.</para>
<itemizedlist>
  <listitem><para>
    The element pads are activated in order to receive data in PAUSED.
    Streaming threads are started.
  </para></listitem>
  <listitem><para>
    Some elements might need to return <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link> and complete
    the state change when they have enough information. It is a requirement
    for sinks to return <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link> and complete the state change
    when they receive the first buffer or <link linkend="GST-EVENT-EOS:CAPS"><literal>GST_EVENT_EOS</literal></link> (preroll).
    Sinks also block the dataflow when in PAUSED.
  </para></listitem>
  <listitem><para>
    A pipeline resets the running_time to 0.
  </para></listitem>
  <listitem><para>
    Live sources return <link linkend="GST-STATE-CHANGE-NO-PREROLL:CAPS"><literal>GST_STATE_CHANGE_NO_PREROLL</literal></link> and don't generate data.
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-PAUSED-TO-PLAYING:CAPS">GST_STATE_CHANGE_PAUSED_TO_PLAYING</para></entry>
<entry role="enum_member_description"><para>state change from PAUSED to PLAYING.</para>
<itemizedlist>
  <listitem><para>
    Most elements ignore this state change.
  </para></listitem>
  <listitem><para>
    The pipeline selects a <link linkend="GstClock"><type>GstClock</type></link> and distributes this to all the children
    before setting them to PLAYING. This means that it is only allowed to
    synchronize on the <link linkend="GstClock"><type>GstClock</type></link> in the PLAYING state.
  </para></listitem>
  <listitem><para>
    The pipeline uses the <link linkend="GstClock"><type>GstClock</type></link> and the running_time to calculate the
    base_time. The base_time is distributed to all children when performing
    the state change.
  </para></listitem>
  <listitem><para>
    Sink elements stop blocking on the preroll buffer or event and start
    rendering the data.
  </para></listitem>
  <listitem><para>
    Sinks can post <link linkend="GST-MESSAGE-EOS:CAPS"><literal>GST_MESSAGE_EOS</literal></link> in the PLAYING state. It is not allowed
    to post <link linkend="GST-MESSAGE-EOS:CAPS"><literal>GST_MESSAGE_EOS</literal></link> when not in the PLAYING state.
  </para></listitem>
  <listitem><para>
    While streaming in PAUSED or PLAYING elements can create and remove
    sometimes pads.
  </para></listitem>
  <listitem><para>
    Live sources start generating data and return <link linkend="GST-STATE-CHANGE-SUCCESS:CAPS"><literal>GST_STATE_CHANGE_SUCCESS</literal></link>.
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-PLAYING-TO-PAUSED:CAPS">GST_STATE_CHANGE_PLAYING_TO_PAUSED</para></entry>
<entry role="enum_member_description"><para>state change from PLAYING to PAUSED.</para>
<itemizedlist>
  <listitem><para>
    Most elements ignore this state change.
  </para></listitem>
  <listitem><para>
    The pipeline calculates the running_time based on the last selected
    <link linkend="GstClock"><type>GstClock</type></link> and the base_time. It stores this information to continue
    playback when going back to the PLAYING state.
  </para></listitem>
  <listitem><para>
    Sinks unblock any <link linkend="GstClock"><type>GstClock</type></link> wait calls.
  </para></listitem>
  <listitem><para>
    When a sink does not have a pending buffer to play, it returns
    <link linkend="GST-STATE-CHANGE-ASYNC:CAPS"><literal>GST_STATE_CHANGE_ASYNC</literal></link> from this state change and completes the state
    change when it receives a new buffer or an <link linkend="GST-EVENT-EOS:CAPS"><literal>GST_EVENT_EOS</literal></link>.
  </para></listitem>
  <listitem><para>
    Any queued <link linkend="GST-MESSAGE-EOS:CAPS"><literal>GST_MESSAGE_EOS</literal></link> items are removed since they will be reposted
    when going back to the PLAYING state. The EOS messages are queued in
    <link linkend="GstBin"><type>GstBin</type></link> containers.
  </para></listitem>
  <listitem><para>
    Live sources stop generating data and return <link linkend="GST-STATE-CHANGE-NO-PREROLL:CAPS"><literal>GST_STATE_CHANGE_NO_PREROLL</literal></link>.
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-PAUSED-TO-READY:CAPS">GST_STATE_CHANGE_PAUSED_TO_READY</para></entry>
<entry role="enum_member_description"><para>state change from PAUSED to READY.</para>
<itemizedlist>
  <listitem><para>
    Sinks unblock any waits in the preroll.
  </para></listitem>
  <listitem><para>
    Elements unblock any waits on devices
  </para></listitem>
  <listitem><para>
    Chain or get_range functions return <link linkend="GST-FLOW-FLUSHING:CAPS"><literal>GST_FLOW_FLUSHING</literal></link>.
  </para></listitem>
  <listitem><para>
    The element pads are deactivated so that streaming becomes impossible and
    all streaming threads are stopped.
  </para></listitem>
  <listitem><para>
    The sink forgets all negotiated formats
  </para></listitem>
  <listitem><para>
    Elements remove all sometimes pads
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-READY-TO-NULL:CAPS">GST_STATE_CHANGE_READY_TO_NULL</para></entry>
<entry role="enum_member_description"><para>state change from READY to NULL.</para>
<itemizedlist>
  <listitem><para>
    Elements close devices
  </para></listitem>
  <listitem><para>
    Elements reset any internal state.
  </para></listitem>
</itemizedlist>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GstStateChangeReturn" role="enum">
<title>enum GstStateChangeReturn</title>
<indexterm zone="GstStateChangeReturn"><primary>GstStateChangeReturn</primary></indexterm>
<para>The possible return values from a state change function such as 
<link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link>. Only <parameter>GST_STATE_CHANGE_FAILURE</parameter>
 is a real failure.</para>
<refsect3 id="GstStateChangeReturn.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-FAILURE:CAPS">GST_STATE_CHANGE_FAILURE</para></entry>
<entry role="enum_member_description"><para>the state change failed</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-SUCCESS:CAPS">GST_STATE_CHANGE_SUCCESS</para></entry>
<entry role="enum_member_description"><para>the state change succeeded</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-ASYNC:CAPS">GST_STATE_CHANGE_ASYNC</para></entry>
<entry role="enum_member_description"><para>the state change will happen asynchronously</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="GST-STATE-CHANGE-NO-PREROLL:CAPS">GST_STATE_CHANGE_NO_PREROLL</para></entry>
<entry role="enum_member_description"><para>the state change succeeded but the element
                              cannot produce data in <link linkend="GST-STATE-PAUSED:CAPS"><literal>GST_STATE_PAUSED</literal></link>.
                              This typically happens with live sources.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GST-ELEMENT-METADATA-AUTHOR:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_AUTHOR</title>
<indexterm zone="GST-ELEMENT-METADATA-AUTHOR:CAPS"><primary>GST_ELEMENT_METADATA_AUTHOR</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_AUTHOR        "author"
</programlisting>
<para>Name and contact details of the author(s). Use \n to separate
multiple author details.
E.g: "Joe Bloggs &lt;joe.blogs at foo.com&gt;"</para>
</refsect2>
<refsect2 id="GST-ELEMENT-METADATA-DESCRIPTION:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_DESCRIPTION</title>
<indexterm zone="GST-ELEMENT-METADATA-DESCRIPTION:CAPS"><primary>GST_ELEMENT_METADATA_DESCRIPTION</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_DESCRIPTION   "description"
</programlisting>
<para>Sentence describing the purpose of the element.
E.g: "Write stream to a file"</para>
</refsect2>
<refsect2 id="GST-ELEMENT-METADATA-DOC-URI:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_DOC_URI</title>
<indexterm zone="GST-ELEMENT-METADATA-DOC-URI:CAPS"><primary>GST_ELEMENT_METADATA_DOC_URI</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_DOC_URI       "doc-uri"
</programlisting>
<para>Set uri pointing to user documentation. Applications can use this to show
help for e.g. effects to users.</para>
</refsect2>
<refsect2 id="GST-ELEMENT-METADATA-ICON-NAME:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_ICON_NAME</title>
<indexterm zone="GST-ELEMENT-METADATA-ICON-NAME:CAPS"><primary>GST_ELEMENT_METADATA_ICON_NAME</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_ICON_NAME     "icon-name"
</programlisting>
<para>Elements that bridge to certain other products can include an icon of that
used product. Application can show the icon in menus/selectors to help
identifying specific elements.</para>
</refsect2>
<refsect2 id="GST-ELEMENT-METADATA-KLASS:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_KLASS</title>
<indexterm zone="GST-ELEMENT-METADATA-KLASS:CAPS"><primary>GST_ELEMENT_METADATA_KLASS</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_KLASS         "klass"
</programlisting>
<para>String describing the type of element, as an unordered list
separated with slashes ('/'). See draft-klass.txt of the design docs
for more details and common types. E.g: "Sink/File"</para>
</refsect2>
<refsect2 id="GST-ELEMENT-METADATA-LONGNAME:CAPS" role="macro">
<title>GST_ELEMENT_METADATA_LONGNAME</title>
<indexterm zone="GST-ELEMENT-METADATA-LONGNAME:CAPS"><primary>GST_ELEMENT_METADATA_LONGNAME</primary></indexterm>
<programlisting language="C">#define GST_ELEMENT_METADATA_LONGNAME      "long-name"
</programlisting>
<para>The long English name of the element. E.g. "File Sink"</para>
</refsect2>

</refsect1>
<refsect1 id="GstElement.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GstElement-no-more-pads" role="signal"><title>The <literal>“no-more-pads”</literal> signal</title>
<indexterm zone="GstElement-no-more-pads"><primary>GstElement::no-more-pads</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GstElement"><type>GstElement</type></link> *gstelement,
               <link linkend="gpointer"><type>gpointer</type></link>    user_data)</programlisting>
<para>This signals that the element will not generate more dynamic pads.
Note that this signal will usually be emitted from the context of
the streaming thread.</para>
<refsect3 id="GstElement-no-more-pads.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>gstelement</para></entry>
<entry role="parameter_description"><para>the object which received the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2><refsect2 id="GstElement-pad-added" role="signal"><title>The <literal>“pad-added”</literal> signal</title>
<indexterm zone="GstElement-pad-added"><primary>GstElement::pad-added</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GstElement"><type>GstElement</type></link> *gstelement,
               <link linkend="GstPad"><type>GstPad</type></link>     *new_pad,
               <link linkend="gpointer"><type>gpointer</type></link>    user_data)</programlisting>
<para>a new <link linkend="GstPad"><type>GstPad</type></link> has been added to the element. Note that this signal will
usually be emitted from the context of the streaming thread. Also keep in
mind that if you add new elements to the pipeline in the signal handler
you will need to set them to the desired target state with
<link linkend="gst-element-set-state"><function>gst_element_set_state()</function></link> or <link linkend="gst-element-sync-state-with-parent"><function>gst_element_sync_state_with_parent()</function></link>.</para>
<refsect3 id="GstElement-pad-added.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>gstelement</para></entry>
<entry role="parameter_description"><para>the object which received the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>new_pad</para></entry>
<entry role="parameter_description"><para>the pad that has been added</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2><refsect2 id="GstElement-pad-removed" role="signal"><title>The <literal>“pad-removed”</literal> signal</title>
<indexterm zone="GstElement-pad-removed"><primary>GstElement::pad-removed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GstElement"><type>GstElement</type></link> *gstelement,
               <link linkend="GstPad"><type>GstPad</type></link>     *old_pad,
               <link linkend="gpointer"><type>gpointer</type></link>    user_data)</programlisting>
<para>a <link linkend="GstPad"><type>GstPad</type></link> has been removed from the element</para>
<refsect3 id="GstElement-pad-removed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>gstelement</para></entry>
<entry role="parameter_description"><para>the object which received the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>old_pad</para></entry>
<entry role="parameter_description"><para>the pad that has been removed</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2>
</refsect1>
<refsect1 id="GstElement.see-also">
<title>See Also</title>
<para><link linkend="GstElementFactory"><type>GstElementFactory</type></link>, <link linkend="GstPad"><type>GstPad</type></link></para>

</refsect1>

</refentry>
